!function(t){function n(g){if(e[g])return e[g].exports;var l=e[g]={i:g,l:!1,exports:{}};return t[g].call(l.exports,l,l.exports,n),l.l=!0,l.exports}var e={};n.m=t,n.c=e,n.i=function(t){return t},n.d=function(t,e,g){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:g})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},n.p="build",n(n.s=9)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar className = exports.className = {\n  WIDGET_BTN: 'widget',\n  NOTIFICATION: 'notification',\n\n  ACTIVE: 'active',\n  DISABLED: 'disabled',\n\n  CHANNEL_BOARD: 'channel-board',\n  BOARD_TOP: 'board-top',\n  OPTION_MENU: 'option-menu',\n  OPTION_CONTENT: 'option-content',\n\n  TITLE: 'title',\n  INPUT: 'input',\n  BTN: 'btn',\n  ITEM: 'item',\n  IMAGE: 'image',\n  TOP: 'top',\n  COUNT: 'count',\n  TIME: 'time',\n  UNREAD: 'unread',\n\n  CONTENT: 'content',\n  LOGIN_FORM: 'login-form',\n  LOGIN_BTN: 'login-btn',\n  USER_ID: 'user-id',\n  NICKNAME: 'nickname',\n\n  CHANNEL_LIST: 'channel-list',\n  CONTENT_TOP: 'content-top',\n  CONTENT_BOTTOM: 'content-bottom',\n  LAST_MESSAGE: 'last-message',\n  EMPTY_ITEM: 'empty-item',\n\n  CHAT_SECTION: 'chat-section',\n  CHAT_BOARD: 'chat-board',\n  MESSAGE_CONTENT: 'message-content',\n  MESSAGE_LIST: 'message-list',\n  TYPING: 'typing',\n  TEXT: 'text',\n  PREVIEW_NAME: 'preview-name',\n  PREVIEW_TITLE: 'preview-title',\n  PREVIEW_DESCRIPTION: 'preview-description',\n  PREVIEW_IMAGE: 'preview-iamge',\n  FILE_MESSAGE: 'file-message',\n  FILE: 'file',\n  FILE_ICON: 'file-icon',\n  FILE_NAME: 'file-name',\n  FILE_DOWNLOAD: 'file-download',\n  FILE_TEXT: 'file-text',\n  MESSAGE_SET: 'message-set',\n  USER: 'user',\n  MESSAGE_ITEM: 'message-item',\n  MESSAGE: 'message',\n  USER_CONTENT: 'user-content',\n  NEW_CHAT_BTN: 'new-chat-btn',\n  USER_SELECT: 'user-select',\n  USER_ITEM: 'user-item',\n  LEAVE_POPUP: 'leave-popup',\n  LEAVE_BTN: 'leave-btn',\n  CANCEL_BTN: 'cancel-btn',\n  ADMIN_MESSAGE: 'admin-message',\n\n  POPUP: 'popup',\n  MEMBERS: 'members',\n  INVITE: 'invite',\n  POPUP_BODY: 'popup-body',\n  POPUP_TOP: 'popup-top',\n  POPUP_CONTENT: 'popup-content',\n  POPUP_BOTTOM: 'popup-bottom',\n  INVITE_BTN: 'invite-btn',\n  IMAGE_ME: 'image-me',\n\n  TOOLTIP: 'tooltip',\n\n  IC_LOGIN: 'ic-login',\n  IC_CONNECTED: 'ic-connected',\n  IC_MINIMIZE: 'ic-minimize',\n  IC_OPTION: 'ic-option',\n  IC_NEW_CHAT: 'ic-new-chat',\n  IC_CLOSE: 'ic-close',\n  IC_MEMBERS: 'ic-members',\n  IC_INVITE: 'ic-invite',\n  IC_LEAVE: 'ic-leave',\n\n  FADE_IN: 'sb-fade-in',\n  FADE_OUT: 'sb-fade-out',\n  SPINNER: 'sb-spinner'\n\n};\n\nvar styleValue = exports.styleValue = {\n  CURSOR_INIT: '',\n  CURSOR_DEFAULT: 'default'\n};\n\nvar MAX_COUNT = exports.MAX_COUNT = '+9';\nvar MAX_FONT_SIZE = exports.MAX_FONT_SIZE = '11';\n\nvar TYPE_STRING = exports.TYPE_STRING = 'string';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2pzL2NvbnN0cy5qcz82Yjk2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBjbGFzc05hbWUgPSBleHBvcnRzLmNsYXNzTmFtZSA9IHtcbiAgV0lER0VUX0JUTjogJ3dpZGdldCcsXG4gIE5PVElGSUNBVElPTjogJ25vdGlmaWNhdGlvbicsXG5cbiAgQUNUSVZFOiAnYWN0aXZlJyxcbiAgRElTQUJMRUQ6ICdkaXNhYmxlZCcsXG5cbiAgQ0hBTk5FTF9CT0FSRDogJ2NoYW5uZWwtYm9hcmQnLFxuICBCT0FSRF9UT1A6ICdib2FyZC10b3AnLFxuICBPUFRJT05fTUVOVTogJ29wdGlvbi1tZW51JyxcbiAgT1BUSU9OX0NPTlRFTlQ6ICdvcHRpb24tY29udGVudCcsXG5cbiAgVElUTEU6ICd0aXRsZScsXG4gIElOUFVUOiAnaW5wdXQnLFxuICBCVE46ICdidG4nLFxuICBJVEVNOiAnaXRlbScsXG4gIElNQUdFOiAnaW1hZ2UnLFxuICBUT1A6ICd0b3AnLFxuICBDT1VOVDogJ2NvdW50JyxcbiAgVElNRTogJ3RpbWUnLFxuICBVTlJFQUQ6ICd1bnJlYWQnLFxuXG4gIENPTlRFTlQ6ICdjb250ZW50JyxcbiAgTE9HSU5fRk9STTogJ2xvZ2luLWZvcm0nLFxuICBMT0dJTl9CVE46ICdsb2dpbi1idG4nLFxuICBVU0VSX0lEOiAndXNlci1pZCcsXG4gIE5JQ0tOQU1FOiAnbmlja25hbWUnLFxuXG4gIENIQU5ORUxfTElTVDogJ2NoYW5uZWwtbGlzdCcsXG4gIENPTlRFTlRfVE9QOiAnY29udGVudC10b3AnLFxuICBDT05URU5UX0JPVFRPTTogJ2NvbnRlbnQtYm90dG9tJyxcbiAgTEFTVF9NRVNTQUdFOiAnbGFzdC1tZXNzYWdlJyxcbiAgRU1QVFlfSVRFTTogJ2VtcHR5LWl0ZW0nLFxuXG4gIENIQVRfU0VDVElPTjogJ2NoYXQtc2VjdGlvbicsXG4gIENIQVRfQk9BUkQ6ICdjaGF0LWJvYXJkJyxcbiAgTUVTU0FHRV9DT05URU5UOiAnbWVzc2FnZS1jb250ZW50JyxcbiAgTUVTU0FHRV9MSVNUOiAnbWVzc2FnZS1saXN0JyxcbiAgVFlQSU5HOiAndHlwaW5nJyxcbiAgVEVYVDogJ3RleHQnLFxuICBQUkVWSUVXX05BTUU6ICdwcmV2aWV3LW5hbWUnLFxuICBQUkVWSUVXX1RJVExFOiAncHJldmlldy10aXRsZScsXG4gIFBSRVZJRVdfREVTQ1JJUFRJT046ICdwcmV2aWV3LWRlc2NyaXB0aW9uJyxcbiAgUFJFVklFV19JTUFHRTogJ3ByZXZpZXctaWFtZ2UnLFxuICBGSUxFX01FU1NBR0U6ICdmaWxlLW1lc3NhZ2UnLFxuICBGSUxFOiAnZmlsZScsXG4gIEZJTEVfSUNPTjogJ2ZpbGUtaWNvbicsXG4gIEZJTEVfTkFNRTogJ2ZpbGUtbmFtZScsXG4gIEZJTEVfRE9XTkxPQUQ6ICdmaWxlLWRvd25sb2FkJyxcbiAgRklMRV9URVhUOiAnZmlsZS10ZXh0JyxcbiAgTUVTU0FHRV9TRVQ6ICdtZXNzYWdlLXNldCcsXG4gIFVTRVI6ICd1c2VyJyxcbiAgTUVTU0FHRV9JVEVNOiAnbWVzc2FnZS1pdGVtJyxcbiAgTUVTU0FHRTogJ21lc3NhZ2UnLFxuICBVU0VSX0NPTlRFTlQ6ICd1c2VyLWNvbnRlbnQnLFxuICBORVdfQ0hBVF9CVE46ICduZXctY2hhdC1idG4nLFxuICBVU0VSX1NFTEVDVDogJ3VzZXItc2VsZWN0JyxcbiAgVVNFUl9JVEVNOiAndXNlci1pdGVtJyxcbiAgTEVBVkVfUE9QVVA6ICdsZWF2ZS1wb3B1cCcsXG4gIExFQVZFX0JUTjogJ2xlYXZlLWJ0bicsXG4gIENBTkNFTF9CVE46ICdjYW5jZWwtYnRuJyxcbiAgQURNSU5fTUVTU0FHRTogJ2FkbWluLW1lc3NhZ2UnLFxuXG4gIFBPUFVQOiAncG9wdXAnLFxuICBNRU1CRVJTOiAnbWVtYmVycycsXG4gIElOVklURTogJ2ludml0ZScsXG4gIFBPUFVQX0JPRFk6ICdwb3B1cC1ib2R5JyxcbiAgUE9QVVBfVE9QOiAncG9wdXAtdG9wJyxcbiAgUE9QVVBfQ09OVEVOVDogJ3BvcHVwLWNvbnRlbnQnLFxuICBQT1BVUF9CT1RUT006ICdwb3B1cC1ib3R0b20nLFxuICBJTlZJVEVfQlROOiAnaW52aXRlLWJ0bicsXG4gIElNQUdFX01FOiAnaW1hZ2UtbWUnLFxuXG4gIFRPT0xUSVA6ICd0b29sdGlwJyxcblxuICBJQ19MT0dJTjogJ2ljLWxvZ2luJyxcbiAgSUNfQ09OTkVDVEVEOiAnaWMtY29ubmVjdGVkJyxcbiAgSUNfTUlOSU1JWkU6ICdpYy1taW5pbWl6ZScsXG4gIElDX09QVElPTjogJ2ljLW9wdGlvbicsXG4gIElDX05FV19DSEFUOiAnaWMtbmV3LWNoYXQnLFxuICBJQ19DTE9TRTogJ2ljLWNsb3NlJyxcbiAgSUNfTUVNQkVSUzogJ2ljLW1lbWJlcnMnLFxuICBJQ19JTlZJVEU6ICdpYy1pbnZpdGUnLFxuICBJQ19MRUFWRTogJ2ljLWxlYXZlJyxcblxuICBGQURFX0lOOiAnc2ItZmFkZS1pbicsXG4gIEZBREVfT1VUOiAnc2ItZmFkZS1vdXQnLFxuICBTUElOTkVSOiAnc2Itc3Bpbm5lcidcblxufTtcblxudmFyIHN0eWxlVmFsdWUgPSBleHBvcnRzLnN0eWxlVmFsdWUgPSB7XG4gIENVUlNPUl9JTklUOiAnJyxcbiAgQ1VSU09SX0RFRkFVTFQ6ICdkZWZhdWx0J1xufTtcblxudmFyIE1BWF9DT1VOVCA9IGV4cG9ydHMuTUFYX0NPVU5UID0gJys5JztcbnZhciBNQVhfRk9OVF9TSVpFID0gZXhwb3J0cy5NQVhfRk9OVF9TSVpFID0gJzExJztcblxudmFyIFRZUEVfU1RSSU5HID0gZXhwb3J0cy5UWVBFX1NUUklORyA9ICdzdHJpbmcnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvY29uc3RzLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hide = hide;\nexports.show = show;\nexports.hasClass = hasClass;\nexports.addClass = addClass;\nexports.removeClass = removeClass;\nexports.isEmptyString = isEmptyString;\nexports.removeWhiteSpace = removeWhiteSpace;\nexports.getFullHeight = getFullHeight;\nexports.insertMessageInList = insertMessageInList;\nexports.getLastItem = getLastItem;\nexports.xssEscape = xssEscape;\nexports.createNotificationSound = createNotificationSound;\nexports.requestNotification = requestNotification;\nexports.setCookie = setCookie;\nexports.getCookie = getCookie;\nexports.deleteCookie = deleteCookie;\nvar ANIMATION_EVENT = 'animationend';\nvar ANIMATION_REGEX = 'sb-fade.*';\nvar DISPLAY_NONE = 'none';\nvar DISPLAY_BLOCK = 'block';\n\nvar hasClassRegex = function hasClassRegex(target, classNameRegex) {\n  return new RegExp('(^| )' + classNameRegex + '( |$)', 'gi').test(target.className);\n};\n\nfunction hide(target) {\n  if (target) {\n    if (hasClassRegex(target, ANIMATION_REGEX)) {\n      var _hideAnimationEvent = void 0;\n      target.addEventListener(ANIMATION_EVENT, _hideAnimationEvent = function hideAnimationEvent() {\n        target.style.display = DISPLAY_NONE;\n        target.removeEventListener(ANIMATION_EVENT, _hideAnimationEvent, false);\n      });\n    } else {\n      target.style.display = DISPLAY_NONE;\n    }\n  }\n}\n\nfunction show(target, displayType) {\n  if (target) {\n    displayType ? target.style.display = displayType : target.style.display = DISPLAY_BLOCK;\n  }\n}\n\nfunction hasClass() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.reduce(function (target, className) {\n    if (target.classList) {\n      return target.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(target.className);\n    }\n  });\n}\n\nfunction addClass() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args.reduce(function (target, className) {\n    if (target.classList) {\n      if (!(className in target.classList)) {\n        target.classList.add(className);\n      }\n    } else {\n      if (target.className.indexOf(className) < 0) {\n        target.className += ' ' + className;\n      }\n    }\n    return target;\n  });\n}\n\nfunction removeClass() {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return args.reduce(function (target, className) {\n    if (target.classList) {\n      target.classList.remove(className);\n    } else {\n      target.className = target.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), '');\n    }\n    return target;\n  });\n}\n\nfunction isEmptyString(target) {\n  return !!(target == null || target == undefined || target.length == 0);\n}\n\nfunction removeWhiteSpace(target) {\n  return target.replace(/ /g, '');\n}\n\nfunction getFullHeight(target) {\n  var height = target.offsetHeight;\n  var style = getComputedStyle(target);\n  height += parseInt(style.marginTop) + parseInt(style.marginBottom);\n  return height;\n}\n\nfunction insertMessageInList(target, index, item) {\n  return target.splice(index, 0, item);\n}\n\nfunction getLastItem(target) {\n  return target.length < 1 ? null : target[target.length - 1];\n}\n\nfunction xssEscape(target) {\n  if (typeof target === 'string') {\n    return target.split('&').join('&amp;').split('#').join('&#35;').split('<').join('&lt;').split('>').join('&gt;').split('\"').join('&quot;').split('\\'').join('&apos;').split('+').join('&#43;').split('-').join('&#45;').split('(').join('&#40;').split(')').join('&#41;').split('%').join('&#37;');\n  } else {\n    return target;\n  }\n}\n\nfunction createNotificationSound() {\n  var sound = document.createElement('audio');\n  sound.style.display = 'none';\n  sound.id = 'notifierSound';\n  sound.src = 'https://dxstmhyqfqr1o.cloudfront.net/sound/SendBird-default.mp3';\n  return sound;\n}\n\nfunction requestNotification() {\n  if (window.Notification && Notification.permission !== 'granted') {\n    Notification.requestPermission(function (permission) {\n      if (Notification.permission !== permission) {\n        Notification.permission = permission;\n      }\n    });\n  }\n}\n\nfunction setCookie(userId, nickname) {\n  var date = new Date();\n  date.setDate(date.getDate() + 1);\n  var expires = date.toGMTString();\n  document.cookie = 'sendbirdUserId=' + userId + ';expires=' + expires;\n  document.cookie = 'sendbirdNickname=' + nickname + ';expires=' + expires;\n}\n\nfunction getCookie() {\n  var sendbirdUserInfo = {\n    \"userId\": '',\n    \"nickname\": ''\n  };\n  var cUserId = 'sendbirdUserId=';\n  var cNickname = 'sendbirdNickname=';\n  var cList = document.cookie.split(';');\n  for (var i = 0; i < cList.length; i++) {\n    var c = cList[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(cUserId) === 0) {\n      sendbirdUserInfo['userId'] = c.substring(cUserId.length, c.length);\n    } else if (c.indexOf(cNickname) === 0) {\n      sendbirdUserInfo['nickname'] = c.substring(cNickname.length, c.length);\n    }\n  }\n  return sendbirdUserInfo;\n}\n\nfunction deleteCookie() {\n  var userInfo = getCookie();\n  if (userInfo.userId) {\n    document.cookie = 'sendbirdUserId=' + userInfo.userId + ';expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    document.cookie = 'sendbirdNickname=' + userInfo.nickname + ';expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(18);\n\nvar _utils = __webpack_require__(1);\n\nvar _consts = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Element = function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.tagName = {\n      DIV: 'div',\n      SPAN: 'span',\n      INPUT: 'input',\n      UL: 'ul',\n      LI: 'li',\n      TIME: 'time',\n      LABEL: 'label',\n      A: 'a',\n      IMG: 'img',\n      VIDEO: 'video'\n    };\n    this.eventName = {\n      CLICK: 'click',\n      KEYDOWN: 'keydown',\n      KEYUP: 'keyup',\n      CHANGE: 'change',\n      SCROLL: 'scroll',\n      PASTE: 'paste'\n    };\n  }\n\n  /*\n  Create Elements\n   */\n\n\n  _createClass(Element, [{\n    key: 'createDiv',\n    value: function createDiv() {\n      return document.createElement(this.tagName.DIV);\n    }\n  }, {\n    key: 'createTime',\n    value: function createTime() {\n      return document.createElement(this.tagName.TIME);\n    }\n  }, {\n    key: 'createA',\n    value: function createA() {\n      return document.createElement(this.tagName.A);\n    }\n  }, {\n    key: 'createImg',\n    value: function createImg() {\n      return document.createElement(this.tagName.IMG);\n    }\n  }, {\n    key: 'createSpan',\n    value: function createSpan() {\n      return document.createElement(this.tagName.SPAN);\n    }\n  }, {\n    key: 'createLabel',\n    value: function createLabel() {\n      return document.createElement(this.tagName.LABEL);\n    }\n  }, {\n    key: 'createInput',\n    value: function createInput() {\n      return document.createElement(this.tagName.INPUT);\n    }\n  }, {\n    key: 'createUl',\n    value: function createUl() {\n      return document.createElement(this.tagName.UL);\n    }\n  }, {\n    key: 'createLi',\n    value: function createLi() {\n      return document.createElement(this.tagName.LI);\n    }\n  }, {\n    key: 'createVideo',\n    value: function createVideo() {\n      return document.createElement(this.tagName.VIDEO);\n    }\n  }, {\n    key: '_setClass',\n    value: function _setClass() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      args.reduce(function (target, classes) {\n        return target.className += classes.join(' ');\n      });\n    }\n  }, {\n    key: '_setContent',\n    value: function _setContent(target, text) {\n      target.innerHTML = text;\n    }\n  }, {\n    key: '_addContent',\n    value: function _addContent(target, text) {\n      target.innerHTML += text;\n    }\n  }, {\n    key: '_setBackgroundImage',\n    value: function _setBackgroundImage(target, url) {\n      target.style.backgroundImage = 'url(' + url + ')';\n    }\n  }, {\n    key: '_setBackgroundSize',\n    value: function _setBackgroundSize(target, size) {\n      target.style.backgroundSize = size;\n    }\n  }, {\n    key: '_setFontSize',\n    value: function _setFontSize(target, size) {\n      target.style.fontSize = size ? size + 'px' : null;\n    }\n  }, {\n    key: '_setHeight',\n    value: function _setHeight(target, height) {\n      target.style.height = height + 'px';\n    }\n  }, {\n    key: '_setWidth',\n    value: function _setWidth(target, width) {\n      target.style.width = width + 'px';\n    }\n  }, {\n    key: '_setRight',\n    value: function _setRight(target, right) {\n      target.style.right = right + 'px';\n    }\n  }, {\n    key: '_setDataset',\n    value: function _setDataset(target, name, data) {\n      target.setAttribute('data-' + name, data);\n    }\n  }, {\n    key: '_setClickEvent',\n    value: function _setClickEvent() {\n      var _this = this;\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this.eventName.CLICK, function () {\n          action();\n        });\n      });\n    }\n  }, {\n    key: '_setPasteEvent',\n    value: function _setPasteEvent() {\n      var _this2 = this;\n\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this2.eventName.PASTE, function (event) {\n          action(event);\n        });\n      });\n    }\n  }, {\n    key: '_setKeyupEvent',\n    value: function _setKeyupEvent() {\n      var _this3 = this;\n\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this3.eventName.KEYUP, function (event) {\n          action(event);\n        });\n      });\n    }\n  }, {\n    key: '_setKeydownEvent',\n    value: function _setKeydownEvent() {\n      var _this4 = this;\n\n      for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this4.eventName.KEYDOWN, function (event) {\n          action(event);\n        });\n      });\n    }\n  }, {\n    key: '_setChangeEvent',\n    value: function _setChangeEvent() {\n      var _this5 = this;\n\n      for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this5.eventName.CHANGE, function () {\n          action();\n        });\n      });\n    }\n  }, {\n    key: '_setScrollEvent',\n    value: function _setScrollEvent() {\n      var _this6 = this;\n\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      args.reduce(function (target, action) {\n        target.addEventListener(_this6.eventName.SCROLL, function () {\n          action();\n        });\n      });\n    }\n  }, {\n    key: '_isBottom',\n    value: function _isBottom(target, list) {\n      return target.scrollTop + target.offsetHeight >= list.offsetHeight;\n    }\n  }, {\n    key: 'enabledToggle',\n    value: function enabledToggle(target, isEnabled) {\n      if (isEnabled || isEnabled === undefined) {\n        (0, _utils.removeClass)(target, _consts.className.DISABLED);\n        target.style.cursor = _consts.styleValue.CURSOR_INIT;\n      } else {\n        (0, _utils.addClass)(target, _consts.className.DISABLED);\n        target.style.cursor = _consts.styleValue.CURSOR_DEFAULT;\n      }\n    }\n  }]);\n\n  return Element;\n}();\n\nexports.default = Element;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _elements = __webpack_require__(2);\n\nvar _elements2 = _interopRequireDefault(_elements);\n\nvar _utils = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EMPTY_STRING = '';\n\nvar CHAT_SECTION_RIGHT_MAX = '280px';\nvar CHAT_SECTION_RIGHT_MIN = '60px';\nvar TOOLTIP_MEMBER_LIST = 'Member List';\nvar TOOLTIP_CHANNEL_LEAVE = 'Channel Leave';\nvar TOOLTIP_INVITE_MEMBER = 'Invite Member';\nvar TITLE_CHAT_TITLE_DEFAULT = 'Group Channel';\nvar TITLE_CHAT_TITLE_NEW_CHAT = 'New Chat';\nvar TITLE_CHAT_LEAVE_POPUP = 'Do you really want to leave?';\nvar TITLE_CHAT_LEAVE_BTN = 'Leave';\nvar TITLE_CHAT_CANCEL_BTN = 'Cancel';\nvar MEMBER_COUNT_DEFAULT = '0';\nvar MARGIN_TOP_MESSAGE = '3px';\nvar MESSAGE_NONE_IMAGE_HEIGHT = '10px';\nvar DISPLAY_NONE = 'none';\nvar TITLE_START_CHAT_BTN = 'Start Chat';\nvar MESSAGE_CONTENT_HEIGHT_DEFAULT = 328;\nvar MESSAGE_INPUT_HEIGHT_DEFAULT = 29;\nvar MESSAGE_TYPING_SEVERAL = 'Several people are typing...';\nvar MESSAGE_TYPING_MEMBER = ' is typing...';\nvar DISPLAY_TYPE_INLINE_BLOCK = 'inline-block';\nvar IMAGE_MAX_SIZE = 160;\nvar TEXT_FILE_DOWNLOAD = 'Download';\n\nvar ChatSection = function (_Element) {\n  _inherits(ChatSection, _Element);\n\n  function ChatSection(widget) {\n    _classCallCheck(this, ChatSection);\n\n    var _this = _possibleConstructorReturn(this, (ChatSection.__proto__ || Object.getPrototypeOf(ChatSection)).call(this));\n\n    _this._create();\n    widget.appendChild(_this.self);\n    _this.textKr = '';\n    return _this;\n  }\n\n  _createClass(ChatSection, [{\n    key: 'reset',\n    value: function reset() {\n      this._setContent(this.self, EMPTY_STRING);\n    }\n  }, {\n    key: '_create',\n    value: function _create() {\n      this.self = this.createDiv();\n      this._setClass(this.self, [_consts.className.CHAT_SECTION]);\n    }\n  }, {\n    key: 'responsiveSize',\n    value: function responsiveSize(isMax, action) {\n      if (isMax !== undefined) {\n        this.self.style.right = isMax ? CHAT_SECTION_RIGHT_MIN : CHAT_SECTION_RIGHT_MAX;\n      }\n      action();\n    }\n  }, {\n    key: '_getListBoardArray',\n    value: function _getListBoardArray() {\n      return Array.prototype.slice.call(this.self.childNodes, 0);\n    }\n  }, {\n    key: 'moveToFirstIndex',\n    value: function moveToFirstIndex(target) {\n      var _this2 = this;\n\n      var items = this._getListBoardArray();\n      items.filter(function (item) {\n        if (item.id == target.id) {\n          _this2.self.removeChild(item);\n        }\n      });\n      this.self.insertBefore(target, this.self.firstChild);\n    }\n  }, {\n    key: 'setWidth',\n    value: function setWidth(width) {\n      this._setWidth(this.self, width);\n    }\n\n    /*\n    Chat\n     */\n\n  }, {\n    key: 'createChatBoard',\n    value: function createChatBoard(channelUrl, isLast) {\n      var chatBoard = this.createDiv();\n      this._setClass(chatBoard, [_consts.className.CHAT_BOARD]);\n      chatBoard.id = channelUrl ? channelUrl : '';\n\n      var chatTop = this.createDiv();\n      this._setClass(chatTop, [_consts.className.TOP]);\n\n      var chatTitle = this.createDiv();\n      this._setClass(chatTitle, [_consts.className.TITLE]);\n      this._setContent(chatTitle, TITLE_CHAT_TITLE_DEFAULT);\n      chatBoard.topTitle = chatTitle;\n      chatTop.appendChild(chatTitle);\n\n      var chatMemberCount = this.createDiv();\n      this._setClass(chatMemberCount, [_consts.className.COUNT]);\n      this._setContent(chatMemberCount, MEMBER_COUNT_DEFAULT);\n      chatBoard.count = chatMemberCount;\n      chatTop.appendChild(chatMemberCount);\n\n      var topBtnClose = this.createDiv();\n      this._setClass(topBtnClose, [_consts.className.BTN, _consts.className.IC_CLOSE]);\n      chatBoard.closeBtn = topBtnClose;\n      chatTop.appendChild(topBtnClose);\n\n      var topBtnLeave = this.createDiv();\n      this._setClass(topBtnLeave, [_consts.className.BTN, _consts.className.IC_LEAVE]);\n      chatBoard.leaveBtn = topBtnLeave;\n\n      var tooltipLeave = this.createSpan();\n      this._setClass(tooltipLeave, [_consts.className.TOOLTIP]);\n      this._setContent(tooltipLeave, TOOLTIP_CHANNEL_LEAVE);\n\n      topBtnLeave.appendChild(tooltipLeave);\n      chatTop.appendChild(topBtnLeave);\n\n      var topBtnMembers = this.createDiv();\n      this._setClass(topBtnMembers, [_consts.className.BTN, _consts.className.IC_MEMBERS]);\n      chatBoard.memberBtn = topBtnMembers;\n\n      var tooltipMember = this.createSpan();\n      this._setClass(tooltipMember, [_consts.className.TOOLTIP]);\n      this._setContent(tooltipMember, TOOLTIP_MEMBER_LIST);\n\n      topBtnMembers.appendChild(tooltipMember);\n      chatTop.appendChild(topBtnMembers);\n\n      var topBtnInvite = this.createDiv();\n      this._setClass(topBtnInvite, [_consts.className.BTN, _consts.className.IC_INVITE]);\n      chatBoard.inviteBtn = topBtnInvite;\n\n      var tooltipInvite = this.createSpan();\n      this._setClass(tooltipInvite, [_consts.className.TOOLTIP]);\n      this._setContent(tooltipInvite, TOOLTIP_INVITE_MEMBER);\n\n      topBtnInvite.appendChild(tooltipInvite);\n      chatTop.appendChild(topBtnInvite);\n\n      chatBoard.appendChild(chatTop);\n\n      var chatContent = this.createDiv();\n      this._setClass(chatContent, [_consts.className.CONTENT]);\n      chatBoard.content = chatContent;\n      chatBoard.appendChild(chatContent);\n\n      isLast ? this.self.appendChild(chatBoard) : this.moveToFirstIndex(chatBoard);\n      return chatBoard;\n    }\n  }, {\n    key: 'addLeavePopup',\n    value: function addLeavePopup(target) {\n      if (!target.leavePopup) {\n        var leavePopup = this.createDiv();\n        this._setClass(leavePopup, [_consts.className.LEAVE_POPUP]);\n\n        var leaveTitle = this.createDiv();\n        this._setClass(leaveTitle, [_consts.className.POPUP_TOP]);\n        this._setContent(leaveTitle, TITLE_CHAT_LEAVE_POPUP);\n        leavePopup.appendChild(leaveTitle);\n\n        var div = this.createDiv();\n        var leaveBtn = this.createDiv();\n        this._setClass(leaveBtn, [_consts.className.LEAVE_BTN]);\n        this._setContent(leaveBtn, TITLE_CHAT_LEAVE_BTN);\n        div.appendChild(leaveBtn);\n\n        var cancelBtn = this.createDiv();\n        this._setClickEvent(cancelBtn, function () {\n          target.removeChild(leavePopup);\n          target.leavePopup = null;\n        });\n        this._setClass(cancelBtn, [_consts.className.CANCEL_BTN]);\n        this._setContent(cancelBtn, TITLE_CHAT_CANCEL_BTN);\n        div.appendChild(cancelBtn);\n\n        leavePopup.appendChild(div);\n\n        target.leavePopup = leavePopup;\n        target.leavePopup.leaveBtn = leaveBtn;\n        target.insertBefore(leavePopup, target.firstChild);\n      }\n    }\n  }, {\n    key: 'setLeaveBtnClickEvent',\n    value: function setLeaveBtnClickEvent(target, action) {\n      this._setClickEvent(target, action);\n    }\n  }, {\n    key: 'removeMemberPopup',\n    value: function removeMemberPopup() {\n      var items = this.self.querySelectorAll('.' + _consts.className.CHAT_BOARD);\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        (0, _utils.removeClass)(item.memberBtn, _consts.className.ACTIVE);\n      }\n    }\n  }, {\n    key: 'removeInvitePopup',\n    value: function removeInvitePopup() {\n      var items = this.self.querySelectorAll('.' + _consts.className.CHAT_BOARD);\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        (0, _utils.removeClass)(item.inviteBtn, _consts.className.ACTIVE);\n      }\n    }\n  }, {\n    key: 'addClickEvent',\n    value: function addClickEvent(target, action) {\n      this._setClickEvent(target, action);\n    }\n  }, {\n    key: 'updateChatTop',\n    value: function updateChatTop(target, count, title) {\n      this._setContent(target.count, count);\n      if (title !== null) {\n        this._setContent(target.topTitle, title);\n      }\n    }\n  }, {\n    key: 'getChatBoard',\n    value: function getChatBoard(channelUrl) {\n      var items = this.self.querySelectorAll('.' + _consts.className.CHAT_BOARD);\n      var targetBoard = void 0;\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        if (item.id == channelUrl) {\n          targetBoard = item;\n          break;\n        }\n      }\n      return targetBoard;\n    }\n  }, {\n    key: 'indexOfChatBord',\n    value: function indexOfChatBord(channelUrl) {\n      var items = this.self.querySelectorAll('.' + _consts.className.CHAT_BOARD);\n      var chatBoard = this.getChatBoard(channelUrl);\n      var index = -1;\n      for (var i = 0; i < items.length; i++) {\n        if (items[i] == chatBoard) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    }\n  }, {\n    key: 'closeChatBoard',\n    value: function closeChatBoard(target) {\n      target.parentNode.removeChild(target);\n      this.textKr = '';\n    }\n  }, {\n    key: 'createMessageContent',\n    value: function createMessageContent(target) {\n      var chatContent = this.createDiv();\n      this._setClass(chatContent, [_consts.className.CONTENT]);\n\n      var messageContent = this.createDiv();\n      this._setClass(messageContent, [_consts.className.MESSAGE_CONTENT]);\n\n      var messageList = this.createDiv();\n      this._setClass(messageList, [_consts.className.MESSAGE_LIST]);\n      messageContent.appendChild(messageList);\n      chatContent.appendChild(messageContent);\n\n      var typingMessage = this.createDiv();\n      this._setClass(typingMessage, [_consts.className.TYPING]);\n      chatContent.appendChild(typingMessage);\n\n      var contentInput = this.createDiv();\n      this._setClass(contentInput, [_consts.className.INPUT]);\n\n      var chatText = this.createTextInput();\n      contentInput.appendChild(chatText);\n\n      var chatFile = this.createLabel();\n      this._setClass(chatFile, [_consts.className.FILE]);\n      chatFile.setAttribute('for', 'file_' + target.id);\n\n      var chatFileInput = this.createInput();\n      chatFileInput.type = 'file';\n      chatFileInput.name = 'file';\n      chatFileInput.id = 'file_' + target.id;\n      (0, _utils.hide)(chatFileInput);\n      chatFile.appendChild(chatFileInput);\n      contentInput.appendChild(chatFile);\n      chatContent.appendChild(contentInput);\n\n      target.content.parentNode.removeChild(target.content);\n      target.content = chatContent;\n      target.messageContent = messageContent;\n      target.list = messageList;\n      target.typing = typingMessage;\n      target.input = chatText;\n      target.file = chatFileInput;\n      target.appendChild(chatContent);\n    }\n  }, {\n    key: 'createTextInput',\n    value: function createTextInput() {\n      var chatText = this.createDiv();\n      this._setClass(chatText, [_consts.className.TEXT]);\n      chatText.setAttribute('contenteditable', true);\n      return chatText;\n    }\n  }, {\n    key: 'clearInputText',\n    value: function clearInputText(target, channelUrl) {\n      var items = target.querySelectorAll(this.tagName.DIV);\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        item.remove();\n      }\n      this._setContent(target, EMPTY_STRING);\n      this.responsiveHeight(channelUrl);\n    }\n  }, {\n    key: 'addPasteEvent',\n    value: function addPasteEvent(target, action) {\n      this._setPasteEvent(target, action);\n    }\n  }, {\n    key: 'addKeyUpEvent',\n    value: function addKeyUpEvent(target, action) {\n      this._setKeyupEvent(target, action);\n    }\n  }, {\n    key: 'addKeyDownEvent',\n    value: function addKeyDownEvent(target, action) {\n      this._setKeydownEvent(target, action);\n    }\n  }, {\n    key: 'addFileSelectEvent',\n    value: function addFileSelectEvent(target, action) {\n      this._setChangeEvent(target, action);\n    }\n  }, {\n    key: 'addScrollEvent',\n    value: function addScrollEvent(target, action) {\n      this._setScrollEvent(target, action);\n    }\n  }, {\n    key: 'responsiveHeight',\n    value: function responsiveHeight(channelUrl) {\n      var targetBoard = this.getChatBoard(channelUrl);\n      var messageContent = targetBoard.messageContent;\n      var changeHeight = (0, _utils.getFullHeight)(targetBoard.typing) + (0, _utils.getFullHeight)(targetBoard.input);\n      this._setHeight(messageContent, MESSAGE_CONTENT_HEIGHT_DEFAULT - (changeHeight - MESSAGE_INPUT_HEIGHT_DEFAULT));\n    }\n  }, {\n    key: 'showTyping',\n    value: function showTyping(channel, spinner) {\n      var targetBoard = this.getChatBoard(channel.url);\n      var typing = targetBoard.typing;\n      if (!channel.isTyping()) {\n        this._setContent(typing, EMPTY_STRING);\n        (0, _utils.hide)(typing);\n      } else {\n        var typingUser = channel.getTypingMembers();\n        spinner.insert(typing);\n        this._addContent(typing, typingUser.length > 1 ? MESSAGE_TYPING_SEVERAL : (0, _utils.xssEscape)(typingUser[0].nickname) + MESSAGE_TYPING_MEMBER);\n        (0, _utils.show)(typing);\n      }\n    }\n  }, {\n    key: '_imageResize',\n    value: function _imageResize(imageTarget, width, height) {\n      var scaleWidth = IMAGE_MAX_SIZE / width;\n      var scaleHeight = IMAGE_MAX_SIZE / height;\n\n      var scale = scaleWidth <= scaleHeight ? scaleWidth : scaleHeight;\n      if (scale > 1) {\n        scale = 1;\n      }\n\n      var resizeWidth = width * scale;\n      var resizeHeight = height * scale;\n\n      this._setBackgroundSize(imageTarget, resizeWidth + 'px ' + resizeHeight + 'px');\n      this._setWidth(imageTarget, resizeWidth);\n      this._setHeight(imageTarget, resizeHeight);\n      return { 'resizeWidth': resizeWidth, 'resizeHeight': resizeHeight };\n    }\n  }, {\n    key: 'setImageSize',\n    value: function setImageSize(target, message) {\n      var _this3 = this;\n\n      this._setBackgroundImage(target, message.thumbnails.length > 0 ? message.thumbnails[0].url : message.url);\n      if (message.thumbnails.length > 0) {\n        this._imageResize(target, message.thumbnails[0].real_width, message.thumbnails[0].real_height);\n      } else {\n        var img = new Image();\n        img.addEventListener('load', function (res) {\n          res.path ? _this3._imageResize(target, res.path[0].width, res.path[0].height) : _this3._imageResize(target, res.target.width, res.target.height);\n        });\n        img.src = message.url;\n      }\n    }\n  }, {\n    key: 'createMessageItem',\n    value: function createMessageItem(message, isCurrentUser, isContinue, unreadCount) {\n      var messageSet = this.createDiv();\n      messageSet.id = message.messageId;\n      this._setClass(messageSet, isCurrentUser ? [_consts.className.MESSAGE_SET, _consts.className.USER] : [_consts.className.MESSAGE_SET]);\n      if (isContinue) {\n        messageSet.style.marginTop = MARGIN_TOP_MESSAGE;\n      }\n\n      var senderImg = this.createDiv();\n      this._setClass(senderImg, [_consts.className.IMAGE]);\n      var senderProfile = message.sender.profileUrl;\n      if (isContinue) {\n        senderProfile = '';\n        senderImg.style.height = MESSAGE_NONE_IMAGE_HEIGHT;\n      }\n      senderImg.style.backgroundImage = 'url(' + senderProfile + ')';\n      messageSet.appendChild(senderImg);\n\n      var messageContent = this.createDiv();\n      this._setClass(messageContent, [_consts.className.MESSAGE]);\n\n      var senderNickname = this.createDiv();\n      this._setClass(senderNickname, [_consts.className.NICKNAME]);\n      this._setContent(senderNickname, (0, _utils.xssEscape)(message.sender.nickname));\n      if (isContinue) {\n        senderNickname.style.display = DISPLAY_NONE;\n      }\n      messageContent.appendChild(senderNickname);\n\n      var messageItem = this.createDiv();\n      this._setClass(messageItem, [_consts.className.MESSAGE_ITEM]);\n\n      var itemText = this.createDiv();\n      if (message.isUserMessage()) {\n        this._setClass(itemText, [_consts.className.TEXT]);\n        var urlexp = new RegExp('(http|https)://[a-z0-9\\-_]+(\\.[a-z0-9\\-_]+)+([a-z0-9\\-\\.,@\\?^=%&;:/~\\+#]*[a-z0-9\\-@\\?^=%&;/~\\+#])?', 'i');\n        var _message = message.message;\n        if (urlexp.test(_message)) {\n          _message = '<a href=\"' + _message + (isCurrentUser ? '\" target=\"_blank\" style=\"color: #FFFFFF;\">' : '\" target=\"_blank\" style=\"color: #444444;\">') + _message + '</a>';\n          if (message.customType === 'url_preview') {\n            var previewData = JSON.parse(message.data);\n\n            var _siteName = this.createDiv();\n            this._setClass(_siteName, [_consts.className.PREVIEW_NAME]);\n            this._setContent(_siteName, '@' + previewData.site_name);\n\n            var _title = this.createDiv();\n            this._setClass(_title, [_consts.className.PREVIEW_TITLE]);\n            this._setContent(_title, previewData.title);\n\n            var _description = this.createDiv();\n            this._setClass(_description, [_consts.className.PREVIEW_DESCRIPTION]);\n            this._setContent(_description, previewData.description);\n\n            var _image = this.createDiv();\n            this._setClass(_image, [_consts.className.PREVIEW_IMAGE]);\n            this._setBackgroundImage(_image, previewData.image);\n\n            _message += '<hr>' + _siteName.outerHTML + _title.outerHTML + _description.outerHTML + _image.outerHTML;\n          }\n        } else {\n          _message = (0, _utils.xssEscape)(_message);\n        }\n        this._setContent(itemText, _message);\n      } else if (message.isFileMessage()) {\n        if (message.type.match(/^image\\/gif$/)) {\n          this._setClass(itemText, [_consts.className.FILE_MESSAGE]);\n          var image = this.createImg();\n          this._setClass(image, [_consts.className.IMAGE]);\n          image.src = message.url;\n          this.setImageSize(image, message);\n          itemText.appendChild(image);\n        } else if (message.type.match(/^video\\/.+$/)) {\n          this._setClass(itemText, [_consts.className.FILE_MESSAGE]);\n          var video = this.createVideo();\n          video.controls = true;\n          video.preload = 'auto';\n          var resize = { 'resizeWidth': 160, 'resizeHeight': 160 };\n          if (message.thumbnails && message.thumbnails.length > 0) {\n            video.poster = message.thumbnails[0].url;\n            resize = this._imageResize(video, message.thumbnails[0].real_width, message.thumbnails[0].real_height);\n            video.width = resize.resizeWidth;\n            video.height = resize.resizeHeight;\n          } else {\n            var _self = this;\n            video.addEventListener(\"loadedmetadata\", function () {\n              resize = _self._imageResize(video, this.videoWidth, this.videoHeight);\n              video.width = resize.resizeWidth;\n              video.height = resize.resizeHeight;\n            });\n          }\n          video.src = message.url;\n          itemText.appendChild(video);\n        } else {\n          this._setClass(itemText, [_consts.className.FILE_MESSAGE]);\n          var file = this.createA();\n          file.href = message.url;\n          file.target = 'blank';\n          if (message.type.match(/^image\\/.+$/)) {\n            this._setClass(file, [_consts.className.IMAGE]);\n            this.setImageSize(file, message);\n          } else {\n            this._setClass(file, [_consts.className.FILE]);\n            var fileIcon = this.createDiv();\n            this._setClass(fileIcon, [_consts.className.FILE_ICON]);\n\n            var fileText = this.createDiv();\n            this._setClass(fileText, [_consts.className.FILE_TEXT]);\n\n            var fileName = this.createDiv();\n            this._setClass(fileName, [_consts.className.FILE_NAME]);\n            this._setContent(fileName, (0, _utils.xssEscape)(message.name));\n            fileText.appendChild(fileName);\n\n            var fileDownload = this.createDiv();\n            this._setClass(fileDownload, [_consts.className.FILE_DOWNLOAD]);\n            this._setContent(fileDownload, TEXT_FILE_DOWNLOAD);\n            fileText.appendChild(fileDownload);\n\n            file.appendChild(fileIcon);\n            file.appendChild(fileText);\n          }\n          itemText.appendChild(file);\n        }\n      }\n\n      var itemUnread = this.createDiv();\n      this._setClass(itemUnread, [_consts.className.UNREAD]);\n      this.setUnreadCount(itemUnread, unreadCount);\n      messageSet.unread = itemUnread;\n\n      if (isCurrentUser) {\n        messageItem.appendChild(itemUnread);\n        messageItem.appendChild(itemText);\n      } else {\n        messageItem.appendChild(itemText);\n        messageItem.appendChild(itemUnread);\n      }\n\n      messageContent.appendChild(messageItem);\n      messageSet.appendChild(messageContent);\n      return messageSet;\n    }\n  }, {\n    key: 'createAdminMessageItem',\n    value: function createAdminMessageItem(message) {\n      var admin = this.createDiv();\n      this._setClass(admin, [_consts.className.MESSAGE_SET, _consts.className.ADMIN_MESSAGE]);\n      this._setContent(admin, (0, _utils.xssEscape)(message.message));\n      return admin;\n    }\n  }, {\n    key: 'setUnreadCount',\n    value: function setUnreadCount(target, count) {\n      count = parseInt(count);\n      this._setContent(target, count > 9 ? _consts.MAX_COUNT : count == 0 ? '' : count.toString());\n      count > 0 ? (0, _utils.show)(target, DISPLAY_TYPE_INLINE_BLOCK) : (0, _utils.hide)(target);\n    }\n  }, {\n    key: 'updateReadReceipt',\n    value: function updateReadReceipt(channelSet, target) {\n      var items = target.querySelectorAll('.' + _consts.className.MESSAGE_SET);\n      for (var j = 0; j < channelSet.message.length; j++) {\n        var message = channelSet.message[j];\n        for (var i = 0; i < items.length; i++) {\n          var item = items[i];\n          if (item.id == message.messageId) {\n            this.setUnreadCount(item.unread, channelSet.channel.getReadReceipt(message));\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'createMessageItemTime',\n    value: function createMessageItemTime(date) {\n      var time = this.createDiv();\n      this._setClass(time, [_consts.className.MESSAGE_SET, _consts.className.TIME]);\n      this._setContent(time, date);\n      return time;\n    }\n  }, {\n    key: 'createNewChatBoard',\n    value: function createNewChatBoard(target) {\n      var chatContent = this.createDiv();\n      this._setClass(chatContent, [_consts.className.CONTENT]);\n\n      var userContent = this.createDiv();\n      this._setClass(userContent, [_consts.className.USER_CONTENT]);\n      chatContent.appendChild(userContent);\n\n      var contentBottom = this.createDiv();\n      this._setClass(contentBottom, [_consts.className.CONTENT_BOTTOM]);\n\n      var contentBottomBtn = this.createDiv();\n      this._setClass(contentBottomBtn, [_consts.className.NEW_CHAT_BTN, _consts.className.DISABLED]);\n      this._setContent(contentBottomBtn, TITLE_START_CHAT_BTN);\n      contentBottom.appendChild(contentBottomBtn);\n      chatContent.appendChild(contentBottom);\n\n      target.content.parentNode.removeChild(target.content);\n      target.content = chatContent;\n      target.startBtn = contentBottomBtn;\n      target.userContent = userContent;\n      target.appendChild(chatContent);\n      this._setContent(target.topTitle, TITLE_CHAT_TITLE_NEW_CHAT);\n    }\n  }, {\n    key: 'createUserList',\n    value: function createUserList(target) {\n      if (target.querySelectorAll(this.tagName.UL).length == 0) {\n        var userList = this.createUl();\n        target.list = userList;\n        target.appendChild(userList);\n      }\n    }\n  }, {\n    key: 'createUserListItem',\n    value: function createUserListItem(user) {\n      var li = this.createLi();\n\n      var userItem = this.createDiv();\n      this._setClass(userItem, [_consts.className.USER_ITEM]);\n\n      var userSelect = this.createDiv();\n      this._setClass(userSelect, [_consts.className.USER_SELECT]);\n      this._setDataset(userSelect, 'user-id', user.userId);\n      li.select = userSelect;\n      userItem.appendChild(userSelect);\n\n      var userProfile = this.createDiv();\n      this._setClass(userProfile, [_consts.className.IMAGE]);\n      this._setBackgroundImage(userProfile, user.profileUrl);\n      userItem.appendChild(userProfile);\n\n      var userNickname = this.createDiv();\n      this._setClass(userNickname, [_consts.className.NICKNAME]);\n      this._setContent(userNickname, (0, _utils.xssEscape)(user.nickname));\n      userItem.appendChild(userNickname);\n\n      li.appendChild(userItem);\n      return li;\n    }\n  }, {\n    key: 'getSelectedUserIds',\n    value: function getSelectedUserIds(target) {\n      var items = target.querySelectorAll('.' + _consts.className.ACTIVE);\n      var userIds = [];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        userIds.push(item.getAttribute('data-user-id'));\n      }\n      return userIds;\n    }\n  }, {\n    key: 'isBottom',\n    value: function isBottom(targetContent, targetList) {\n      return this._isBottom(targetContent, targetList);\n    }\n  }, {\n    key: 'addUserListScrollEvent',\n    value: function addUserListScrollEvent(target, action) {\n      var _this4 = this;\n\n      this._setScrollEvent(target.userContent, function () {\n        if (_this4.isBottom(target.userContent, target.userContent.list)) {\n          action();\n        }\n      });\n    }\n  }, {\n    key: 'scrollToBottom',\n    value: function scrollToBottom(target) {\n      target.scrollTop = target.scrollHeight - target.clientHeight;\n    }\n  }]);\n\n  return ChatSection;\n}(_elements2.default);\n\nexports.default = ChatSection;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2pzL2VsZW1lbnRzL2NoYXQtc2VjdGlvbi5qcz85MDgwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9jb25zdHMgPSByZXF1aXJlKCcuLi9jb25zdHMuanMnKTtcblxudmFyIF9lbGVtZW50cyA9IHJlcXVpcmUoJy4vZWxlbWVudHMuanMnKTtcblxudmFyIF9lbGVtZW50czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9lbGVtZW50cyk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy5qcycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBFTVBUWV9TVFJJTkcgPSAnJztcblxudmFyIENIQVRfU0VDVElPTl9SSUdIVF9NQVggPSAnMjgwcHgnO1xudmFyIENIQVRfU0VDVElPTl9SSUdIVF9NSU4gPSAnNjBweCc7XG52YXIgVE9PTFRJUF9NRU1CRVJfTElTVCA9ICdNZW1iZXIgTGlzdCc7XG52YXIgVE9PTFRJUF9DSEFOTkVMX0xFQVZFID0gJ0NoYW5uZWwgTGVhdmUnO1xudmFyIFRPT0xUSVBfSU5WSVRFX01FTUJFUiA9ICdJbnZpdGUgTWVtYmVyJztcbnZhciBUSVRMRV9DSEFUX1RJVExFX0RFRkFVTFQgPSAnR3JvdXAgQ2hhbm5lbCc7XG52YXIgVElUTEVfQ0hBVF9USVRMRV9ORVdfQ0hBVCA9ICdOZXcgQ2hhdCc7XG52YXIgVElUTEVfQ0hBVF9MRUFWRV9QT1BVUCA9ICdEbyB5b3UgcmVhbGx5IHdhbnQgdG8gbGVhdmU/JztcbnZhciBUSVRMRV9DSEFUX0xFQVZFX0JUTiA9ICdMZWF2ZSc7XG52YXIgVElUTEVfQ0hBVF9DQU5DRUxfQlROID0gJ0NhbmNlbCc7XG52YXIgTUVNQkVSX0NPVU5UX0RFRkFVTFQgPSAnMCc7XG52YXIgTUFSR0lOX1RPUF9NRVNTQUdFID0gJzNweCc7XG52YXIgTUVTU0FHRV9OT05FX0lNQUdFX0hFSUdIVCA9ICcxMHB4JztcbnZhciBESVNQTEFZX05PTkUgPSAnbm9uZSc7XG52YXIgVElUTEVfU1RBUlRfQ0hBVF9CVE4gPSAnU3RhcnQgQ2hhdCc7XG52YXIgTUVTU0FHRV9DT05URU5UX0hFSUdIVF9ERUZBVUxUID0gMzI4O1xudmFyIE1FU1NBR0VfSU5QVVRfSEVJR0hUX0RFRkFVTFQgPSAyOTtcbnZhciBNRVNTQUdFX1RZUElOR19TRVZFUkFMID0gJ1NldmVyYWwgcGVvcGxlIGFyZSB0eXBpbmcuLi4nO1xudmFyIE1FU1NBR0VfVFlQSU5HX01FTUJFUiA9ICcgaXMgdHlwaW5nLi4uJztcbnZhciBESVNQTEFZX1RZUEVfSU5MSU5FX0JMT0NLID0gJ2lubGluZS1ibG9jayc7XG52YXIgSU1BR0VfTUFYX1NJWkUgPSAxNjA7XG52YXIgVEVYVF9GSUxFX0RPV05MT0FEID0gJ0Rvd25sb2FkJztcblxudmFyIENoYXRTZWN0aW9uID0gZnVuY3Rpb24gKF9FbGVtZW50KSB7XG4gIF9pbmhlcml0cyhDaGF0U2VjdGlvbiwgX0VsZW1lbnQpO1xuXG4gIGZ1bmN0aW9uIENoYXRTZWN0aW9uKHdpZGdldCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDaGF0U2VjdGlvbik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQ2hhdFNlY3Rpb24uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDaGF0U2VjdGlvbikpLmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuX2NyZWF0ZSgpO1xuICAgIHdpZGdldC5hcHBlbmRDaGlsZChfdGhpcy5zZWxmKTtcbiAgICBfdGhpcy50ZXh0S3IgPSAnJztcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2hhdFNlY3Rpb24sIFt7XG4gICAga2V5OiAncmVzZXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQodGhpcy5zZWxmLCBFTVBUWV9TVFJJTkcpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19jcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlKCkge1xuICAgICAgdGhpcy5zZWxmID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRoaXMuc2VsZiwgW19jb25zdHMuY2xhc3NOYW1lLkNIQVRfU0VDVElPTl0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Jlc3BvbnNpdmVTaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVzcG9uc2l2ZVNpemUoaXNNYXgsIGFjdGlvbikge1xuICAgICAgaWYgKGlzTWF4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5zZWxmLnN0eWxlLnJpZ2h0ID0gaXNNYXggPyBDSEFUX1NFQ1RJT05fUklHSFRfTUlOIDogQ0hBVF9TRUNUSU9OX1JJR0hUX01BWDtcbiAgICAgIH1cbiAgICAgIGFjdGlvbigpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19nZXRMaXN0Qm9hcmRBcnJheScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRMaXN0Qm9hcmRBcnJheSgpIHtcbiAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLnNlbGYuY2hpbGROb2RlcywgMCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbW92ZVRvRmlyc3RJbmRleCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG1vdmVUb0ZpcnN0SW5kZXgodGFyZ2V0KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGl0ZW1zID0gdGhpcy5fZ2V0TGlzdEJvYXJkQXJyYXkoKTtcbiAgICAgIGl0ZW1zLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICBpZiAoaXRlbS5pZCA9PSB0YXJnZXQuaWQpIHtcbiAgICAgICAgICBfdGhpczIuc2VsZi5yZW1vdmVDaGlsZChpdGVtKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0aGlzLnNlbGYuaW5zZXJ0QmVmb3JlKHRhcmdldCwgdGhpcy5zZWxmLmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NldFdpZHRoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0V2lkdGgod2lkdGgpIHtcbiAgICAgIHRoaXMuX3NldFdpZHRoKHRoaXMuc2VsZiwgd2lkdGgpO1xuICAgIH1cblxuICAgIC8qXG4gICAgQ2hhdFxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVDaGF0Qm9hcmQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVDaGF0Qm9hcmQoY2hhbm5lbFVybCwgaXNMYXN0KSB7XG4gICAgICB2YXIgY2hhdEJvYXJkID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKGNoYXRCb2FyZCwgW19jb25zdHMuY2xhc3NOYW1lLkNIQVRfQk9BUkRdKTtcbiAgICAgIGNoYXRCb2FyZC5pZCA9IGNoYW5uZWxVcmwgPyBjaGFubmVsVXJsIDogJyc7XG5cbiAgICAgIHZhciBjaGF0VG9wID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKGNoYXRUb3AsIFtfY29uc3RzLmNsYXNzTmFtZS5UT1BdKTtcblxuICAgICAgdmFyIGNoYXRUaXRsZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhjaGF0VGl0bGUsIFtfY29uc3RzLmNsYXNzTmFtZS5USVRMRV0pO1xuICAgICAgdGhpcy5fc2V0Q29udGVudChjaGF0VGl0bGUsIFRJVExFX0NIQVRfVElUTEVfREVGQVVMVCk7XG4gICAgICBjaGF0Qm9hcmQudG9wVGl0bGUgPSBjaGF0VGl0bGU7XG4gICAgICBjaGF0VG9wLmFwcGVuZENoaWxkKGNoYXRUaXRsZSk7XG5cbiAgICAgIHZhciBjaGF0TWVtYmVyQ291bnQgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MoY2hhdE1lbWJlckNvdW50LCBbX2NvbnN0cy5jbGFzc05hbWUuQ09VTlRdKTtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQoY2hhdE1lbWJlckNvdW50LCBNRU1CRVJfQ09VTlRfREVGQVVMVCk7XG4gICAgICBjaGF0Qm9hcmQuY291bnQgPSBjaGF0TWVtYmVyQ291bnQ7XG4gICAgICBjaGF0VG9wLmFwcGVuZENoaWxkKGNoYXRNZW1iZXJDb3VudCk7XG5cbiAgICAgIHZhciB0b3BCdG5DbG9zZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0b3BCdG5DbG9zZSwgW19jb25zdHMuY2xhc3NOYW1lLkJUTiwgX2NvbnN0cy5jbGFzc05hbWUuSUNfQ0xPU0VdKTtcbiAgICAgIGNoYXRCb2FyZC5jbG9zZUJ0biA9IHRvcEJ0bkNsb3NlO1xuICAgICAgY2hhdFRvcC5hcHBlbmRDaGlsZCh0b3BCdG5DbG9zZSk7XG5cbiAgICAgIHZhciB0b3BCdG5MZWF2ZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0b3BCdG5MZWF2ZSwgW19jb25zdHMuY2xhc3NOYW1lLkJUTiwgX2NvbnN0cy5jbGFzc05hbWUuSUNfTEVBVkVdKTtcbiAgICAgIGNoYXRCb2FyZC5sZWF2ZUJ0biA9IHRvcEJ0bkxlYXZlO1xuXG4gICAgICB2YXIgdG9vbHRpcExlYXZlID0gdGhpcy5jcmVhdGVTcGFuKCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0b29sdGlwTGVhdmUsIFtfY29uc3RzLmNsYXNzTmFtZS5UT09MVElQXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KHRvb2x0aXBMZWF2ZSwgVE9PTFRJUF9DSEFOTkVMX0xFQVZFKTtcblxuICAgICAgdG9wQnRuTGVhdmUuYXBwZW5kQ2hpbGQodG9vbHRpcExlYXZlKTtcbiAgICAgIGNoYXRUb3AuYXBwZW5kQ2hpbGQodG9wQnRuTGVhdmUpO1xuXG4gICAgICB2YXIgdG9wQnRuTWVtYmVycyA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0b3BCdG5NZW1iZXJzLCBbX2NvbnN0cy5jbGFzc05hbWUuQlROLCBfY29uc3RzLmNsYXNzTmFtZS5JQ19NRU1CRVJTXSk7XG4gICAgICBjaGF0Qm9hcmQubWVtYmVyQnRuID0gdG9wQnRuTWVtYmVycztcblxuICAgICAgdmFyIHRvb2x0aXBNZW1iZXIgPSB0aGlzLmNyZWF0ZVNwYW4oKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRvb2x0aXBNZW1iZXIsIFtfY29uc3RzLmNsYXNzTmFtZS5UT09MVElQXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KHRvb2x0aXBNZW1iZXIsIFRPT0xUSVBfTUVNQkVSX0xJU1QpO1xuXG4gICAgICB0b3BCdG5NZW1iZXJzLmFwcGVuZENoaWxkKHRvb2x0aXBNZW1iZXIpO1xuICAgICAgY2hhdFRvcC5hcHBlbmRDaGlsZCh0b3BCdG5NZW1iZXJzKTtcblxuICAgICAgdmFyIHRvcEJ0bkludml0ZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0b3BCdG5JbnZpdGUsIFtfY29uc3RzLmNsYXNzTmFtZS5CVE4sIF9jb25zdHMuY2xhc3NOYW1lLklDX0lOVklURV0pO1xuICAgICAgY2hhdEJvYXJkLmludml0ZUJ0biA9IHRvcEJ0bkludml0ZTtcblxuICAgICAgdmFyIHRvb2x0aXBJbnZpdGUgPSB0aGlzLmNyZWF0ZVNwYW4oKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRvb2x0aXBJbnZpdGUsIFtfY29uc3RzLmNsYXNzTmFtZS5UT09MVElQXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KHRvb2x0aXBJbnZpdGUsIFRPT0xUSVBfSU5WSVRFX01FTUJFUik7XG5cbiAgICAgIHRvcEJ0bkludml0ZS5hcHBlbmRDaGlsZCh0b29sdGlwSW52aXRlKTtcbiAgICAgIGNoYXRUb3AuYXBwZW5kQ2hpbGQodG9wQnRuSW52aXRlKTtcblxuICAgICAgY2hhdEJvYXJkLmFwcGVuZENoaWxkKGNoYXRUb3ApO1xuXG4gICAgICB2YXIgY2hhdENvbnRlbnQgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MoY2hhdENvbnRlbnQsIFtfY29uc3RzLmNsYXNzTmFtZS5DT05URU5UXSk7XG4gICAgICBjaGF0Qm9hcmQuY29udGVudCA9IGNoYXRDb250ZW50O1xuICAgICAgY2hhdEJvYXJkLmFwcGVuZENoaWxkKGNoYXRDb250ZW50KTtcblxuICAgICAgaXNMYXN0ID8gdGhpcy5zZWxmLmFwcGVuZENoaWxkKGNoYXRCb2FyZCkgOiB0aGlzLm1vdmVUb0ZpcnN0SW5kZXgoY2hhdEJvYXJkKTtcbiAgICAgIHJldHVybiBjaGF0Qm9hcmQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkTGVhdmVQb3B1cCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZExlYXZlUG9wdXAodGFyZ2V0KSB7XG4gICAgICBpZiAoIXRhcmdldC5sZWF2ZVBvcHVwKSB7XG4gICAgICAgIHZhciBsZWF2ZVBvcHVwID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgICAgdGhpcy5fc2V0Q2xhc3MobGVhdmVQb3B1cCwgW19jb25zdHMuY2xhc3NOYW1lLkxFQVZFX1BPUFVQXSk7XG5cbiAgICAgICAgdmFyIGxlYXZlVGl0bGUgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgICB0aGlzLl9zZXRDbGFzcyhsZWF2ZVRpdGxlLCBbX2NvbnN0cy5jbGFzc05hbWUuUE9QVVBfVE9QXSk7XG4gICAgICAgIHRoaXMuX3NldENvbnRlbnQobGVhdmVUaXRsZSwgVElUTEVfQ0hBVF9MRUFWRV9QT1BVUCk7XG4gICAgICAgIGxlYXZlUG9wdXAuYXBwZW5kQ2hpbGQobGVhdmVUaXRsZSk7XG5cbiAgICAgICAgdmFyIGRpdiA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICAgIHZhciBsZWF2ZUJ0biA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICAgIHRoaXMuX3NldENsYXNzKGxlYXZlQnRuLCBbX2NvbnN0cy5jbGFzc05hbWUuTEVBVkVfQlROXSk7XG4gICAgICAgIHRoaXMuX3NldENvbnRlbnQobGVhdmVCdG4sIFRJVExFX0NIQVRfTEVBVkVfQlROKTtcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGxlYXZlQnRuKTtcblxuICAgICAgICB2YXIgY2FuY2VsQnRuID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgICAgdGhpcy5fc2V0Q2xpY2tFdmVudChjYW5jZWxCdG4sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlQ2hpbGQobGVhdmVQb3B1cCk7XG4gICAgICAgICAgdGFyZ2V0LmxlYXZlUG9wdXAgPSBudWxsO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fc2V0Q2xhc3MoY2FuY2VsQnRuLCBbX2NvbnN0cy5jbGFzc05hbWUuQ0FOQ0VMX0JUTl0pO1xuICAgICAgICB0aGlzLl9zZXRDb250ZW50KGNhbmNlbEJ0biwgVElUTEVfQ0hBVF9DQU5DRUxfQlROKTtcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGNhbmNlbEJ0bik7XG5cbiAgICAgICAgbGVhdmVQb3B1cC5hcHBlbmRDaGlsZChkaXYpO1xuXG4gICAgICAgIHRhcmdldC5sZWF2ZVBvcHVwID0gbGVhdmVQb3B1cDtcbiAgICAgICAgdGFyZ2V0LmxlYXZlUG9wdXAubGVhdmVCdG4gPSBsZWF2ZUJ0bjtcbiAgICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShsZWF2ZVBvcHVwLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0TGVhdmVCdG5DbGlja0V2ZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0TGVhdmVCdG5DbGlja0V2ZW50KHRhcmdldCwgYWN0aW9uKSB7XG4gICAgICB0aGlzLl9zZXRDbGlja0V2ZW50KHRhcmdldCwgYWN0aW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmVNZW1iZXJQb3B1cCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZU1lbWJlclBvcHVwKCkge1xuICAgICAgdmFyIGl0ZW1zID0gdGhpcy5zZWxmLnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgX2NvbnN0cy5jbGFzc05hbWUuQ0hBVF9CT0FSRCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBpdGVtID0gaXRlbXNbaV07XG4gICAgICAgICgwLCBfdXRpbHMucmVtb3ZlQ2xhc3MpKGl0ZW0ubWVtYmVyQnRuLCBfY29uc3RzLmNsYXNzTmFtZS5BQ1RJVkUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbW92ZUludml0ZVBvcHVwJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlSW52aXRlUG9wdXAoKSB7XG4gICAgICB2YXIgaXRlbXMgPSB0aGlzLnNlbGYucXVlcnlTZWxlY3RvckFsbCgnLicgKyBfY29uc3RzLmNsYXNzTmFtZS5DSEFUX0JPQVJEKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBpdGVtc1tpXTtcbiAgICAgICAgKDAsIF91dGlscy5yZW1vdmVDbGFzcykoaXRlbS5pbnZpdGVCdG4sIF9jb25zdHMuY2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkQ2xpY2tFdmVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZENsaWNrRXZlbnQodGFyZ2V0LCBhY3Rpb24pIHtcbiAgICAgIHRoaXMuX3NldENsaWNrRXZlbnQodGFyZ2V0LCBhY3Rpb24pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZUNoYXRUb3AnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDaGF0VG9wKHRhcmdldCwgY291bnQsIHRpdGxlKSB7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KHRhcmdldC5jb3VudCwgY291bnQpO1xuICAgICAgaWYgKHRpdGxlICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuX3NldENvbnRlbnQodGFyZ2V0LnRvcFRpdGxlLCB0aXRsZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0Q2hhdEJvYXJkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q2hhdEJvYXJkKGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciBpdGVtcyA9IHRoaXMuc2VsZi5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIF9jb25zdHMuY2xhc3NOYW1lLkNIQVRfQk9BUkQpO1xuICAgICAgdmFyIHRhcmdldEJvYXJkID0gdm9pZCAwO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgICBpZiAoaXRlbS5pZCA9PSBjaGFubmVsVXJsKSB7XG4gICAgICAgICAgdGFyZ2V0Qm9hcmQgPSBpdGVtO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdGFyZ2V0Qm9hcmQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaW5kZXhPZkNoYXRCb3JkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5kZXhPZkNoYXRCb3JkKGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciBpdGVtcyA9IHRoaXMuc2VsZi5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIF9jb25zdHMuY2xhc3NOYW1lLkNIQVRfQk9BUkQpO1xuICAgICAgdmFyIGNoYXRCb2FyZCA9IHRoaXMuZ2V0Q2hhdEJvYXJkKGNoYW5uZWxVcmwpO1xuICAgICAgdmFyIGluZGV4ID0gLTE7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpdGVtc1tpXSA9PSBjaGF0Qm9hcmQpIHtcbiAgICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBpbmRleDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbG9zZUNoYXRCb2FyZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlQ2hhdEJvYXJkKHRhcmdldCkge1xuICAgICAgdGFyZ2V0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFyZ2V0KTtcbiAgICAgIHRoaXMudGV4dEtyID0gJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY3JlYXRlTWVzc2FnZUNvbnRlbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVNZXNzYWdlQ29udGVudCh0YXJnZXQpIHtcbiAgICAgIHZhciBjaGF0Q29udGVudCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhjaGF0Q29udGVudCwgW19jb25zdHMuY2xhc3NOYW1lLkNPTlRFTlRdKTtcblxuICAgICAgdmFyIG1lc3NhZ2VDb250ZW50ID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKG1lc3NhZ2VDb250ZW50LCBbX2NvbnN0cy5jbGFzc05hbWUuTUVTU0FHRV9DT05URU5UXSk7XG5cbiAgICAgIHZhciBtZXNzYWdlTGlzdCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhtZXNzYWdlTGlzdCwgW19jb25zdHMuY2xhc3NOYW1lLk1FU1NBR0VfTElTVF0pO1xuICAgICAgbWVzc2FnZUNvbnRlbnQuYXBwZW5kQ2hpbGQobWVzc2FnZUxpc3QpO1xuICAgICAgY2hhdENvbnRlbnQuYXBwZW5kQ2hpbGQobWVzc2FnZUNvbnRlbnQpO1xuXG4gICAgICB2YXIgdHlwaW5nTWVzc2FnZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh0eXBpbmdNZXNzYWdlLCBbX2NvbnN0cy5jbGFzc05hbWUuVFlQSU5HXSk7XG4gICAgICBjaGF0Q29udGVudC5hcHBlbmRDaGlsZCh0eXBpbmdNZXNzYWdlKTtcblxuICAgICAgdmFyIGNvbnRlbnRJbnB1dCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhjb250ZW50SW5wdXQsIFtfY29uc3RzLmNsYXNzTmFtZS5JTlBVVF0pO1xuXG4gICAgICB2YXIgY2hhdFRleHQgPSB0aGlzLmNyZWF0ZVRleHRJbnB1dCgpO1xuICAgICAgY29udGVudElucHV0LmFwcGVuZENoaWxkKGNoYXRUZXh0KTtcblxuICAgICAgdmFyIGNoYXRGaWxlID0gdGhpcy5jcmVhdGVMYWJlbCgpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MoY2hhdEZpbGUsIFtfY29uc3RzLmNsYXNzTmFtZS5GSUxFXSk7XG4gICAgICBjaGF0RmlsZS5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdmaWxlXycgKyB0YXJnZXQuaWQpO1xuXG4gICAgICB2YXIgY2hhdEZpbGVJbnB1dCA9IHRoaXMuY3JlYXRlSW5wdXQoKTtcbiAgICAgIGNoYXRGaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgIGNoYXRGaWxlSW5wdXQubmFtZSA9ICdmaWxlJztcbiAgICAgIGNoYXRGaWxlSW5wdXQuaWQgPSAnZmlsZV8nICsgdGFyZ2V0LmlkO1xuICAgICAgKDAsIF91dGlscy5oaWRlKShjaGF0RmlsZUlucHV0KTtcbiAgICAgIGNoYXRGaWxlLmFwcGVuZENoaWxkKGNoYXRGaWxlSW5wdXQpO1xuICAgICAgY29udGVudElucHV0LmFwcGVuZENoaWxkKGNoYXRGaWxlKTtcbiAgICAgIGNoYXRDb250ZW50LmFwcGVuZENoaWxkKGNvbnRlbnRJbnB1dCk7XG5cbiAgICAgIHRhcmdldC5jb250ZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGFyZ2V0LmNvbnRlbnQpO1xuICAgICAgdGFyZ2V0LmNvbnRlbnQgPSBjaGF0Q29udGVudDtcbiAgICAgIHRhcmdldC5tZXNzYWdlQ29udGVudCA9IG1lc3NhZ2VDb250ZW50O1xuICAgICAgdGFyZ2V0Lmxpc3QgPSBtZXNzYWdlTGlzdDtcbiAgICAgIHRhcmdldC50eXBpbmcgPSB0eXBpbmdNZXNzYWdlO1xuICAgICAgdGFyZ2V0LmlucHV0ID0gY2hhdFRleHQ7XG4gICAgICB0YXJnZXQuZmlsZSA9IGNoYXRGaWxlSW5wdXQ7XG4gICAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoY2hhdENvbnRlbnQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NyZWF0ZVRleHRJbnB1dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVRleHRJbnB1dCgpIHtcbiAgICAgIHZhciBjaGF0VGV4dCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhjaGF0VGV4dCwgW19jb25zdHMuY2xhc3NOYW1lLlRFWFRdKTtcbiAgICAgIGNoYXRUZXh0LnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgdHJ1ZSk7XG4gICAgICByZXR1cm4gY2hhdFRleHQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY2xlYXJJbnB1dFRleHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhcklucHV0VGV4dCh0YXJnZXQsIGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciBpdGVtcyA9IHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMudGFnTmFtZS5ESVYpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgICBpdGVtLnJlbW92ZSgpO1xuICAgICAgfVxuICAgICAgdGhpcy5fc2V0Q29udGVudCh0YXJnZXQsIEVNUFRZX1NUUklORyk7XG4gICAgICB0aGlzLnJlc3BvbnNpdmVIZWlnaHQoY2hhbm5lbFVybCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkUGFzdGVFdmVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFBhc3RlRXZlbnQodGFyZ2V0LCBhY3Rpb24pIHtcbiAgICAgIHRoaXMuX3NldFBhc3RlRXZlbnQodGFyZ2V0LCBhY3Rpb24pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2FkZEtleVVwRXZlbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRLZXlVcEV2ZW50KHRhcmdldCwgYWN0aW9uKSB7XG4gICAgICB0aGlzLl9zZXRLZXl1cEV2ZW50KHRhcmdldCwgYWN0aW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdhZGRLZXlEb3duRXZlbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRLZXlEb3duRXZlbnQodGFyZ2V0LCBhY3Rpb24pIHtcbiAgICAgIHRoaXMuX3NldEtleWRvd25FdmVudCh0YXJnZXQsIGFjdGlvbik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkRmlsZVNlbGVjdEV2ZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkRmlsZVNlbGVjdEV2ZW50KHRhcmdldCwgYWN0aW9uKSB7XG4gICAgICB0aGlzLl9zZXRDaGFuZ2VFdmVudCh0YXJnZXQsIGFjdGlvbik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkU2Nyb2xsRXZlbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRTY3JvbGxFdmVudCh0YXJnZXQsIGFjdGlvbikge1xuICAgICAgdGhpcy5fc2V0U2Nyb2xsRXZlbnQodGFyZ2V0LCBhY3Rpb24pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Jlc3BvbnNpdmVIZWlnaHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNwb25zaXZlSGVpZ2h0KGNoYW5uZWxVcmwpIHtcbiAgICAgIHZhciB0YXJnZXRCb2FyZCA9IHRoaXMuZ2V0Q2hhdEJvYXJkKGNoYW5uZWxVcmwpO1xuICAgICAgdmFyIG1lc3NhZ2VDb250ZW50ID0gdGFyZ2V0Qm9hcmQubWVzc2FnZUNvbnRlbnQ7XG4gICAgICB2YXIgY2hhbmdlSGVpZ2h0ID0gKDAsIF91dGlscy5nZXRGdWxsSGVpZ2h0KSh0YXJnZXRCb2FyZC50eXBpbmcpICsgKDAsIF91dGlscy5nZXRGdWxsSGVpZ2h0KSh0YXJnZXRCb2FyZC5pbnB1dCk7XG4gICAgICB0aGlzLl9zZXRIZWlnaHQobWVzc2FnZUNvbnRlbnQsIE1FU1NBR0VfQ09OVEVOVF9IRUlHSFRfREVGQVVMVCAtIChjaGFuZ2VIZWlnaHQgLSBNRVNTQUdFX0lOUFVUX0hFSUdIVF9ERUZBVUxUKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2hvd1R5cGluZycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNob3dUeXBpbmcoY2hhbm5lbCwgc3Bpbm5lcikge1xuICAgICAgdmFyIHRhcmdldEJvYXJkID0gdGhpcy5nZXRDaGF0Qm9hcmQoY2hhbm5lbC51cmwpO1xuICAgICAgdmFyIHR5cGluZyA9IHRhcmdldEJvYXJkLnR5cGluZztcbiAgICAgIGlmICghY2hhbm5lbC5pc1R5cGluZygpKSB7XG4gICAgICAgIHRoaXMuX3NldENvbnRlbnQodHlwaW5nLCBFTVBUWV9TVFJJTkcpO1xuICAgICAgICAoMCwgX3V0aWxzLmhpZGUpKHR5cGluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgdHlwaW5nVXNlciA9IGNoYW5uZWwuZ2V0VHlwaW5nTWVtYmVycygpO1xuICAgICAgICBzcGlubmVyLmluc2VydCh0eXBpbmcpO1xuICAgICAgICB0aGlzLl9hZGRDb250ZW50KHR5cGluZywgdHlwaW5nVXNlci5sZW5ndGggPiAxID8gTUVTU0FHRV9UWVBJTkdfU0VWRVJBTCA6ICgwLCBfdXRpbHMueHNzRXNjYXBlKSh0eXBpbmdVc2VyWzBdLm5pY2tuYW1lKSArIE1FU1NBR0VfVFlQSU5HX01FTUJFUik7XG4gICAgICAgICgwLCBfdXRpbHMuc2hvdykodHlwaW5nKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfaW1hZ2VSZXNpemUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaW1hZ2VSZXNpemUoaW1hZ2VUYXJnZXQsIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgIHZhciBzY2FsZVdpZHRoID0gSU1BR0VfTUFYX1NJWkUgLyB3aWR0aDtcbiAgICAgIHZhciBzY2FsZUhlaWdodCA9IElNQUdFX01BWF9TSVpFIC8gaGVpZ2h0O1xuXG4gICAgICB2YXIgc2NhbGUgPSBzY2FsZVdpZHRoIDw9IHNjYWxlSGVpZ2h0ID8gc2NhbGVXaWR0aCA6IHNjYWxlSGVpZ2h0O1xuICAgICAgaWYgKHNjYWxlID4gMSkge1xuICAgICAgICBzY2FsZSA9IDE7XG4gICAgICB9XG5cbiAgICAgIHZhciByZXNpemVXaWR0aCA9IHdpZHRoICogc2NhbGU7XG4gICAgICB2YXIgcmVzaXplSGVpZ2h0ID0gaGVpZ2h0ICogc2NhbGU7XG5cbiAgICAgIHRoaXMuX3NldEJhY2tncm91bmRTaXplKGltYWdlVGFyZ2V0LCByZXNpemVXaWR0aCArICdweCAnICsgcmVzaXplSGVpZ2h0ICsgJ3B4Jyk7XG4gICAgICB0aGlzLl9zZXRXaWR0aChpbWFnZVRhcmdldCwgcmVzaXplV2lkdGgpO1xuICAgICAgdGhpcy5fc2V0SGVpZ2h0KGltYWdlVGFyZ2V0LCByZXNpemVIZWlnaHQpO1xuICAgICAgcmV0dXJuIHsgJ3Jlc2l6ZVdpZHRoJzogcmVzaXplV2lkdGgsICdyZXNpemVIZWlnaHQnOiByZXNpemVIZWlnaHQgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZXRJbWFnZVNpemUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRJbWFnZVNpemUodGFyZ2V0LCBtZXNzYWdlKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdGhpcy5fc2V0QmFja2dyb3VuZEltYWdlKHRhcmdldCwgbWVzc2FnZS50aHVtYm5haWxzLmxlbmd0aCA+IDAgPyBtZXNzYWdlLnRodW1ibmFpbHNbMF0udXJsIDogbWVzc2FnZS51cmwpO1xuICAgICAgaWYgKG1lc3NhZ2UudGh1bWJuYWlscy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRoaXMuX2ltYWdlUmVzaXplKHRhcmdldCwgbWVzc2FnZS50aHVtYm5haWxzWzBdLnJlYWxfd2lkdGgsIG1lc3NhZ2UudGh1bWJuYWlsc1swXS5yZWFsX2hlaWdodCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgIHJlcy5wYXRoID8gX3RoaXMzLl9pbWFnZVJlc2l6ZSh0YXJnZXQsIHJlcy5wYXRoWzBdLndpZHRoLCByZXMucGF0aFswXS5oZWlnaHQpIDogX3RoaXMzLl9pbWFnZVJlc2l6ZSh0YXJnZXQsIHJlcy50YXJnZXQud2lkdGgsIHJlcy50YXJnZXQuaGVpZ2h0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGltZy5zcmMgPSBtZXNzYWdlLnVybDtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVNZXNzYWdlSXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZU1lc3NhZ2VJdGVtKG1lc3NhZ2UsIGlzQ3VycmVudFVzZXIsIGlzQ29udGludWUsIHVucmVhZENvdW50KSB7XG4gICAgICB2YXIgbWVzc2FnZVNldCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICBtZXNzYWdlU2V0LmlkID0gbWVzc2FnZS5tZXNzYWdlSWQ7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhtZXNzYWdlU2V0LCBpc0N1cnJlbnRVc2VyID8gW19jb25zdHMuY2xhc3NOYW1lLk1FU1NBR0VfU0VULCBfY29uc3RzLmNsYXNzTmFtZS5VU0VSXSA6IFtfY29uc3RzLmNsYXNzTmFtZS5NRVNTQUdFX1NFVF0pO1xuICAgICAgaWYgKGlzQ29udGludWUpIHtcbiAgICAgICAgbWVzc2FnZVNldC5zdHlsZS5tYXJnaW5Ub3AgPSBNQVJHSU5fVE9QX01FU1NBR0U7XG4gICAgICB9XG5cbiAgICAgIHZhciBzZW5kZXJJbWcgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3Moc2VuZGVySW1nLCBbX2NvbnN0cy5jbGFzc05hbWUuSU1BR0VdKTtcbiAgICAgIHZhciBzZW5kZXJQcm9maWxlID0gbWVzc2FnZS5zZW5kZXIucHJvZmlsZVVybDtcbiAgICAgIGlmIChpc0NvbnRpbnVlKSB7XG4gICAgICAgIHNlbmRlclByb2ZpbGUgPSAnJztcbiAgICAgICAgc2VuZGVySW1nLnN0eWxlLmhlaWdodCA9IE1FU1NBR0VfTk9ORV9JTUFHRV9IRUlHSFQ7XG4gICAgICB9XG4gICAgICBzZW5kZXJJbWcuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gJ3VybCgnICsgc2VuZGVyUHJvZmlsZSArICcpJztcbiAgICAgIG1lc3NhZ2VTZXQuYXBwZW5kQ2hpbGQoc2VuZGVySW1nKTtcblxuICAgICAgdmFyIG1lc3NhZ2VDb250ZW50ID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKG1lc3NhZ2VDb250ZW50LCBbX2NvbnN0cy5jbGFzc05hbWUuTUVTU0FHRV0pO1xuXG4gICAgICB2YXIgc2VuZGVyTmlja25hbWUgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3Moc2VuZGVyTmlja25hbWUsIFtfY29uc3RzLmNsYXNzTmFtZS5OSUNLTkFNRV0pO1xuICAgICAgdGhpcy5fc2V0Q29udGVudChzZW5kZXJOaWNrbmFtZSwgKDAsIF91dGlscy54c3NFc2NhcGUpKG1lc3NhZ2Uuc2VuZGVyLm5pY2tuYW1lKSk7XG4gICAgICBpZiAoaXNDb250aW51ZSkge1xuICAgICAgICBzZW5kZXJOaWNrbmFtZS5zdHlsZS5kaXNwbGF5ID0gRElTUExBWV9OT05FO1xuICAgICAgfVxuICAgICAgbWVzc2FnZUNvbnRlbnQuYXBwZW5kQ2hpbGQoc2VuZGVyTmlja25hbWUpO1xuXG4gICAgICB2YXIgbWVzc2FnZUl0ZW0gPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MobWVzc2FnZUl0ZW0sIFtfY29uc3RzLmNsYXNzTmFtZS5NRVNTQUdFX0lURU1dKTtcblxuICAgICAgdmFyIGl0ZW1UZXh0ID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIGlmIChtZXNzYWdlLmlzVXNlck1lc3NhZ2UoKSkge1xuICAgICAgICB0aGlzLl9zZXRDbGFzcyhpdGVtVGV4dCwgW19jb25zdHMuY2xhc3NOYW1lLlRFWFRdKTtcbiAgICAgICAgdmFyIHVybGV4cCA9IG5ldyBSZWdFeHAoJyhodHRwfGh0dHBzKTovL1thLXowLTlcXC1fXSsoXFwuW2EtejAtOVxcLV9dKykrKFthLXowLTlcXC1cXC4sQFxcP149JSY7Oi9+XFwrI10qW2EtejAtOVxcLUBcXD9ePSUmOy9+XFwrI10pPycsICdpJyk7XG4gICAgICAgIHZhciBfbWVzc2FnZSA9IG1lc3NhZ2UubWVzc2FnZTtcbiAgICAgICAgaWYgKHVybGV4cC50ZXN0KF9tZXNzYWdlKSkge1xuICAgICAgICAgIF9tZXNzYWdlID0gJzxhIGhyZWY9XCInICsgX21lc3NhZ2UgKyAoaXNDdXJyZW50VXNlciA/ICdcIiB0YXJnZXQ9XCJfYmxhbmtcIiBzdHlsZT1cImNvbG9yOiAjRkZGRkZGO1wiPicgOiAnXCIgdGFyZ2V0PVwiX2JsYW5rXCIgc3R5bGU9XCJjb2xvcjogIzQ0NDQ0NDtcIj4nKSArIF9tZXNzYWdlICsgJzwvYT4nO1xuICAgICAgICAgIGlmIChtZXNzYWdlLmN1c3RvbVR5cGUgPT09ICd1cmxfcHJldmlldycpIHtcbiAgICAgICAgICAgIHZhciBwcmV2aWV3RGF0YSA9IEpTT04ucGFyc2UobWVzc2FnZS5kYXRhKTtcblxuICAgICAgICAgICAgdmFyIF9zaXRlTmFtZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICAgICAgICB0aGlzLl9zZXRDbGFzcyhfc2l0ZU5hbWUsIFtfY29uc3RzLmNsYXNzTmFtZS5QUkVWSUVXX05BTUVdKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENvbnRlbnQoX3NpdGVOYW1lLCAnQCcgKyBwcmV2aWV3RGF0YS5zaXRlX25hbWUpO1xuXG4gICAgICAgICAgICB2YXIgX3RpdGxlID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzKF90aXRsZSwgW19jb25zdHMuY2xhc3NOYW1lLlBSRVZJRVdfVElUTEVdKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENvbnRlbnQoX3RpdGxlLCBwcmV2aWV3RGF0YS50aXRsZSk7XG5cbiAgICAgICAgICAgIHZhciBfZGVzY3JpcHRpb24gPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgICAgICAgdGhpcy5fc2V0Q2xhc3MoX2Rlc2NyaXB0aW9uLCBbX2NvbnN0cy5jbGFzc05hbWUuUFJFVklFV19ERVNDUklQVElPTl0pO1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29udGVudChfZGVzY3JpcHRpb24sIHByZXZpZXdEYXRhLmRlc2NyaXB0aW9uKTtcblxuICAgICAgICAgICAgdmFyIF9pbWFnZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICAgICAgICB0aGlzLl9zZXRDbGFzcyhfaW1hZ2UsIFtfY29uc3RzLmNsYXNzTmFtZS5QUkVWSUVXX0lNQUdFXSk7XG4gICAgICAgICAgICB0aGlzLl9zZXRCYWNrZ3JvdW5kSW1hZ2UoX2ltYWdlLCBwcmV2aWV3RGF0YS5pbWFnZSk7XG5cbiAgICAgICAgICAgIF9tZXNzYWdlICs9ICc8aHI+JyArIF9zaXRlTmFtZS5vdXRlckhUTUwgKyBfdGl0bGUub3V0ZXJIVE1MICsgX2Rlc2NyaXB0aW9uLm91dGVySFRNTCArIF9pbWFnZS5vdXRlckhUTUw7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF9tZXNzYWdlID0gKDAsIF91dGlscy54c3NFc2NhcGUpKF9tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zZXRDb250ZW50KGl0ZW1UZXh0LCBfbWVzc2FnZSk7XG4gICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UuaXNGaWxlTWVzc2FnZSgpKSB7XG4gICAgICAgIGlmIChtZXNzYWdlLnR5cGUubWF0Y2goL15pbWFnZVxcL2dpZiQvKSkge1xuICAgICAgICAgIHRoaXMuX3NldENsYXNzKGl0ZW1UZXh0LCBbX2NvbnN0cy5jbGFzc05hbWUuRklMRV9NRVNTQUdFXSk7XG4gICAgICAgICAgdmFyIGltYWdlID0gdGhpcy5jcmVhdGVJbWcoKTtcbiAgICAgICAgICB0aGlzLl9zZXRDbGFzcyhpbWFnZSwgW19jb25zdHMuY2xhc3NOYW1lLklNQUdFXSk7XG4gICAgICAgICAgaW1hZ2Uuc3JjID0gbWVzc2FnZS51cmw7XG4gICAgICAgICAgdGhpcy5zZXRJbWFnZVNpemUoaW1hZ2UsIG1lc3NhZ2UpO1xuICAgICAgICAgIGl0ZW1UZXh0LmFwcGVuZENoaWxkKGltYWdlKTtcbiAgICAgICAgfSBlbHNlIGlmIChtZXNzYWdlLnR5cGUubWF0Y2goL152aWRlb1xcLy4rJC8pKSB7XG4gICAgICAgICAgdGhpcy5fc2V0Q2xhc3MoaXRlbVRleHQsIFtfY29uc3RzLmNsYXNzTmFtZS5GSUxFX01FU1NBR0VdKTtcbiAgICAgICAgICB2YXIgdmlkZW8gPSB0aGlzLmNyZWF0ZVZpZGVvKCk7XG4gICAgICAgICAgdmlkZW8uY29udHJvbHMgPSB0cnVlO1xuICAgICAgICAgIHZpZGVvLnByZWxvYWQgPSAnYXV0byc7XG4gICAgICAgICAgdmFyIHJlc2l6ZSA9IHsgJ3Jlc2l6ZVdpZHRoJzogMTYwLCAncmVzaXplSGVpZ2h0JzogMTYwIH07XG4gICAgICAgICAgaWYgKG1lc3NhZ2UudGh1bWJuYWlscyAmJiBtZXNzYWdlLnRodW1ibmFpbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdmlkZW8ucG9zdGVyID0gbWVzc2FnZS50aHVtYm5haWxzWzBdLnVybDtcbiAgICAgICAgICAgIHJlc2l6ZSA9IHRoaXMuX2ltYWdlUmVzaXplKHZpZGVvLCBtZXNzYWdlLnRodW1ibmFpbHNbMF0ucmVhbF93aWR0aCwgbWVzc2FnZS50aHVtYm5haWxzWzBdLnJlYWxfaGVpZ2h0KTtcbiAgICAgICAgICAgIHZpZGVvLndpZHRoID0gcmVzaXplLnJlc2l6ZVdpZHRoO1xuICAgICAgICAgICAgdmlkZW8uaGVpZ2h0ID0gcmVzaXplLnJlc2l6ZUhlaWdodDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIF9zZWxmID0gdGhpcztcbiAgICAgICAgICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkZWRtZXRhZGF0YVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJlc2l6ZSA9IF9zZWxmLl9pbWFnZVJlc2l6ZSh2aWRlbywgdGhpcy52aWRlb1dpZHRoLCB0aGlzLnZpZGVvSGVpZ2h0KTtcbiAgICAgICAgICAgICAgdmlkZW8ud2lkdGggPSByZXNpemUucmVzaXplV2lkdGg7XG4gICAgICAgICAgICAgIHZpZGVvLmhlaWdodCA9IHJlc2l6ZS5yZXNpemVIZWlnaHQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmlkZW8uc3JjID0gbWVzc2FnZS51cmw7XG4gICAgICAgICAgaXRlbVRleHQuYXBwZW5kQ2hpbGQodmlkZW8pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuX3NldENsYXNzKGl0ZW1UZXh0LCBbX2NvbnN0cy5jbGFzc05hbWUuRklMRV9NRVNTQUdFXSk7XG4gICAgICAgICAgdmFyIGZpbGUgPSB0aGlzLmNyZWF0ZUEoKTtcbiAgICAgICAgICBmaWxlLmhyZWYgPSBtZXNzYWdlLnVybDtcbiAgICAgICAgICBmaWxlLnRhcmdldCA9ICdibGFuayc7XG4gICAgICAgICAgaWYgKG1lc3NhZ2UudHlwZS5tYXRjaCgvXmltYWdlXFwvLiskLykpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzKGZpbGUsIFtfY29uc3RzLmNsYXNzTmFtZS5JTUFHRV0pO1xuICAgICAgICAgICAgdGhpcy5zZXRJbWFnZVNpemUoZmlsZSwgbWVzc2FnZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzKGZpbGUsIFtfY29uc3RzLmNsYXNzTmFtZS5GSUxFXSk7XG4gICAgICAgICAgICB2YXIgZmlsZUljb24gPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgICAgICAgdGhpcy5fc2V0Q2xhc3MoZmlsZUljb24sIFtfY29uc3RzLmNsYXNzTmFtZS5GSUxFX0lDT05dKTtcblxuICAgICAgICAgICAgdmFyIGZpbGVUZXh0ID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzKGZpbGVUZXh0LCBbX2NvbnN0cy5jbGFzc05hbWUuRklMRV9URVhUXSk7XG5cbiAgICAgICAgICAgIHZhciBmaWxlTmFtZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICAgICAgICB0aGlzLl9zZXRDbGFzcyhmaWxlTmFtZSwgW19jb25zdHMuY2xhc3NOYW1lLkZJTEVfTkFNRV0pO1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29udGVudChmaWxlTmFtZSwgKDAsIF91dGlscy54c3NFc2NhcGUpKG1lc3NhZ2UubmFtZSkpO1xuICAgICAgICAgICAgZmlsZVRleHQuYXBwZW5kQ2hpbGQoZmlsZU5hbWUpO1xuXG4gICAgICAgICAgICB2YXIgZmlsZURvd25sb2FkID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzKGZpbGVEb3dubG9hZCwgW19jb25zdHMuY2xhc3NOYW1lLkZJTEVfRE9XTkxPQURdKTtcbiAgICAgICAgICAgIHRoaXMuX3NldENvbnRlbnQoZmlsZURvd25sb2FkLCBURVhUX0ZJTEVfRE9XTkxPQUQpO1xuICAgICAgICAgICAgZmlsZVRleHQuYXBwZW5kQ2hpbGQoZmlsZURvd25sb2FkKTtcblxuICAgICAgICAgICAgZmlsZS5hcHBlbmRDaGlsZChmaWxlSWNvbik7XG4gICAgICAgICAgICBmaWxlLmFwcGVuZENoaWxkKGZpbGVUZXh0KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaXRlbVRleHQuYXBwZW5kQ2hpbGQoZmlsZSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIGl0ZW1VbnJlYWQgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MoaXRlbVVucmVhZCwgW19jb25zdHMuY2xhc3NOYW1lLlVOUkVBRF0pO1xuICAgICAgdGhpcy5zZXRVbnJlYWRDb3VudChpdGVtVW5yZWFkLCB1bnJlYWRDb3VudCk7XG4gICAgICBtZXNzYWdlU2V0LnVucmVhZCA9IGl0ZW1VbnJlYWQ7XG5cbiAgICAgIGlmIChpc0N1cnJlbnRVc2VyKSB7XG4gICAgICAgIG1lc3NhZ2VJdGVtLmFwcGVuZENoaWxkKGl0ZW1VbnJlYWQpO1xuICAgICAgICBtZXNzYWdlSXRlbS5hcHBlbmRDaGlsZChpdGVtVGV4dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtZXNzYWdlSXRlbS5hcHBlbmRDaGlsZChpdGVtVGV4dCk7XG4gICAgICAgIG1lc3NhZ2VJdGVtLmFwcGVuZENoaWxkKGl0ZW1VbnJlYWQpO1xuICAgICAgfVxuXG4gICAgICBtZXNzYWdlQ29udGVudC5hcHBlbmRDaGlsZChtZXNzYWdlSXRlbSk7XG4gICAgICBtZXNzYWdlU2V0LmFwcGVuZENoaWxkKG1lc3NhZ2VDb250ZW50KTtcbiAgICAgIHJldHVybiBtZXNzYWdlU2V0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NyZWF0ZUFkbWluTWVzc2FnZUl0ZW0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVBZG1pbk1lc3NhZ2VJdGVtKG1lc3NhZ2UpIHtcbiAgICAgIHZhciBhZG1pbiA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyhhZG1pbiwgW19jb25zdHMuY2xhc3NOYW1lLk1FU1NBR0VfU0VULCBfY29uc3RzLmNsYXNzTmFtZS5BRE1JTl9NRVNTQUdFXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KGFkbWluLCAoMCwgX3V0aWxzLnhzc0VzY2FwZSkobWVzc2FnZS5tZXNzYWdlKSk7XG4gICAgICByZXR1cm4gYWRtaW47XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0VW5yZWFkQ291bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRVbnJlYWRDb3VudCh0YXJnZXQsIGNvdW50KSB7XG4gICAgICBjb3VudCA9IHBhcnNlSW50KGNvdW50KTtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQodGFyZ2V0LCBjb3VudCA+IDkgPyBfY29uc3RzLk1BWF9DT1VOVCA6IGNvdW50ID09IDAgPyAnJyA6IGNvdW50LnRvU3RyaW5nKCkpO1xuICAgICAgY291bnQgPiAwID8gKDAsIF91dGlscy5zaG93KSh0YXJnZXQsIERJU1BMQVlfVFlQRV9JTkxJTkVfQkxPQ0spIDogKDAsIF91dGlscy5oaWRlKSh0YXJnZXQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZVJlYWRSZWNlaXB0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlUmVhZFJlY2VpcHQoY2hhbm5lbFNldCwgdGFyZ2V0KSB7XG4gICAgICB2YXIgaXRlbXMgPSB0YXJnZXQucXVlcnlTZWxlY3RvckFsbCgnLicgKyBfY29uc3RzLmNsYXNzTmFtZS5NRVNTQUdFX1NFVCk7XG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNoYW5uZWxTZXQubWVzc2FnZS5sZW5ndGg7IGorKykge1xuICAgICAgICB2YXIgbWVzc2FnZSA9IGNoYW5uZWxTZXQubWVzc2FnZVtqXTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciBpdGVtID0gaXRlbXNbaV07XG4gICAgICAgICAgaWYgKGl0ZW0uaWQgPT0gbWVzc2FnZS5tZXNzYWdlSWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0VW5yZWFkQ291bnQoaXRlbS51bnJlYWQsIGNoYW5uZWxTZXQuY2hhbm5lbC5nZXRSZWFkUmVjZWlwdChtZXNzYWdlKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVNZXNzYWdlSXRlbVRpbWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVNZXNzYWdlSXRlbVRpbWUoZGF0ZSkge1xuICAgICAgdmFyIHRpbWUgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3ModGltZSwgW19jb25zdHMuY2xhc3NOYW1lLk1FU1NBR0VfU0VULCBfY29uc3RzLmNsYXNzTmFtZS5USU1FXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KHRpbWUsIGRhdGUpO1xuICAgICAgcmV0dXJuIHRpbWU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY3JlYXRlTmV3Q2hhdEJvYXJkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlTmV3Q2hhdEJvYXJkKHRhcmdldCkge1xuICAgICAgdmFyIGNoYXRDb250ZW50ID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKGNoYXRDb250ZW50LCBbX2NvbnN0cy5jbGFzc05hbWUuQ09OVEVOVF0pO1xuXG4gICAgICB2YXIgdXNlckNvbnRlbnQgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3ModXNlckNvbnRlbnQsIFtfY29uc3RzLmNsYXNzTmFtZS5VU0VSX0NPTlRFTlRdKTtcbiAgICAgIGNoYXRDb250ZW50LmFwcGVuZENoaWxkKHVzZXJDb250ZW50KTtcblxuICAgICAgdmFyIGNvbnRlbnRCb3R0b20gPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3MoY29udGVudEJvdHRvbSwgW19jb25zdHMuY2xhc3NOYW1lLkNPTlRFTlRfQk9UVE9NXSk7XG5cbiAgICAgIHZhciBjb250ZW50Qm90dG9tQnRuID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKGNvbnRlbnRCb3R0b21CdG4sIFtfY29uc3RzLmNsYXNzTmFtZS5ORVdfQ0hBVF9CVE4sIF9jb25zdHMuY2xhc3NOYW1lLkRJU0FCTEVEXSk7XG4gICAgICB0aGlzLl9zZXRDb250ZW50KGNvbnRlbnRCb3R0b21CdG4sIFRJVExFX1NUQVJUX0NIQVRfQlROKTtcbiAgICAgIGNvbnRlbnRCb3R0b20uYXBwZW5kQ2hpbGQoY29udGVudEJvdHRvbUJ0bik7XG4gICAgICBjaGF0Q29udGVudC5hcHBlbmRDaGlsZChjb250ZW50Qm90dG9tKTtcblxuICAgICAgdGFyZ2V0LmNvbnRlbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0YXJnZXQuY29udGVudCk7XG4gICAgICB0YXJnZXQuY29udGVudCA9IGNoYXRDb250ZW50O1xuICAgICAgdGFyZ2V0LnN0YXJ0QnRuID0gY29udGVudEJvdHRvbUJ0bjtcbiAgICAgIHRhcmdldC51c2VyQ29udGVudCA9IHVzZXJDb250ZW50O1xuICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKGNoYXRDb250ZW50KTtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQodGFyZ2V0LnRvcFRpdGxlLCBUSVRMRV9DSEFUX1RJVExFX05FV19DSEFUKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjcmVhdGVVc2VyTGlzdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVVzZXJMaXN0KHRhcmdldCkge1xuICAgICAgaWYgKHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMudGFnTmFtZS5VTCkubGVuZ3RoID09IDApIHtcbiAgICAgICAgdmFyIHVzZXJMaXN0ID0gdGhpcy5jcmVhdGVVbCgpO1xuICAgICAgICB0YXJnZXQubGlzdCA9IHVzZXJMaXN0O1xuICAgICAgICB0YXJnZXQuYXBwZW5kQ2hpbGQodXNlckxpc3QpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NyZWF0ZVVzZXJMaXN0SXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVVzZXJMaXN0SXRlbSh1c2VyKSB7XG4gICAgICB2YXIgbGkgPSB0aGlzLmNyZWF0ZUxpKCk7XG5cbiAgICAgIHZhciB1c2VySXRlbSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh1c2VySXRlbSwgW19jb25zdHMuY2xhc3NOYW1lLlVTRVJfSVRFTV0pO1xuXG4gICAgICB2YXIgdXNlclNlbGVjdCA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh1c2VyU2VsZWN0LCBbX2NvbnN0cy5jbGFzc05hbWUuVVNFUl9TRUxFQ1RdKTtcbiAgICAgIHRoaXMuX3NldERhdGFzZXQodXNlclNlbGVjdCwgJ3VzZXItaWQnLCB1c2VyLnVzZXJJZCk7XG4gICAgICBsaS5zZWxlY3QgPSB1c2VyU2VsZWN0O1xuICAgICAgdXNlckl0ZW0uYXBwZW5kQ2hpbGQodXNlclNlbGVjdCk7XG5cbiAgICAgIHZhciB1c2VyUHJvZmlsZSA9IHRoaXMuY3JlYXRlRGl2KCk7XG4gICAgICB0aGlzLl9zZXRDbGFzcyh1c2VyUHJvZmlsZSwgW19jb25zdHMuY2xhc3NOYW1lLklNQUdFXSk7XG4gICAgICB0aGlzLl9zZXRCYWNrZ3JvdW5kSW1hZ2UodXNlclByb2ZpbGUsIHVzZXIucHJvZmlsZVVybCk7XG4gICAgICB1c2VySXRlbS5hcHBlbmRDaGlsZCh1c2VyUHJvZmlsZSk7XG5cbiAgICAgIHZhciB1c2VyTmlja25hbWUgPSB0aGlzLmNyZWF0ZURpdigpO1xuICAgICAgdGhpcy5fc2V0Q2xhc3ModXNlck5pY2tuYW1lLCBbX2NvbnN0cy5jbGFzc05hbWUuTklDS05BTUVdKTtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQodXNlck5pY2tuYW1lLCAoMCwgX3V0aWxzLnhzc0VzY2FwZSkodXNlci5uaWNrbmFtZSkpO1xuICAgICAgdXNlckl0ZW0uYXBwZW5kQ2hpbGQodXNlck5pY2tuYW1lKTtcblxuICAgICAgbGkuYXBwZW5kQ2hpbGQodXNlckl0ZW0pO1xuICAgICAgcmV0dXJuIGxpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldFNlbGVjdGVkVXNlcklkcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNlbGVjdGVkVXNlcklkcyh0YXJnZXQpIHtcbiAgICAgIHZhciBpdGVtcyA9IHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIF9jb25zdHMuY2xhc3NOYW1lLkFDVElWRSk7XG4gICAgICB2YXIgdXNlcklkcyA9IFtdO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldO1xuICAgICAgICB1c2VySWRzLnB1c2goaXRlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1c2VySWRzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2lzQm90dG9tJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNCb3R0b20odGFyZ2V0Q29udGVudCwgdGFyZ2V0TGlzdCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lzQm90dG9tKHRhcmdldENvbnRlbnQsIHRhcmdldExpc3QpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2FkZFVzZXJMaXN0U2Nyb2xsRXZlbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRVc2VyTGlzdFNjcm9sbEV2ZW50KHRhcmdldCwgYWN0aW9uKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdGhpcy5fc2V0U2Nyb2xsRXZlbnQodGFyZ2V0LnVzZXJDb250ZW50LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfdGhpczQuaXNCb3R0b20odGFyZ2V0LnVzZXJDb250ZW50LCB0YXJnZXQudXNlckNvbnRlbnQubGlzdCkpIHtcbiAgICAgICAgICBhY3Rpb24oKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2Nyb2xsVG9Cb3R0b20nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzY3JvbGxUb0JvdHRvbSh0YXJnZXQpIHtcbiAgICAgIHRhcmdldC5zY3JvbGxUb3AgPSB0YXJnZXQuc2Nyb2xsSGVpZ2h0IC0gdGFyZ2V0LmNsaWVudEhlaWdodDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2hhdFNlY3Rpb247XG59KF9lbGVtZW50czIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IENoYXRTZWN0aW9uO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvZWxlbWVudHMvY2hhdC1zZWN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _utils = __webpack_require__(1);\n\nvar _elements = __webpack_require__(2);\n\nvar _elements2 = _interopRequireDefault(_elements);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EMPTY_STRING = '';\n\nvar OPTION_TOOLTIP_TEXT = 'Log out';\nvar NEW_CHAT_TOOLTIP_TEXT = 'New Message';\n\nvar TITLE_TOP_LOGIN = 'SendBird Widget';\nvar TITLE_TOP_CHANNEL = 'Channel List';\nvar TITLE_LOGIN_USER_ID = 'USER ID';\nvar TITLE_LOGIN_NICKNAME = 'NICKNAME';\nvar TITLE_LOGIN_BTN = 'Start Chat';\nvar TITLE_EMPTY_ITEM = 'Click below to start';\nvar TITLE_EMPTY_BTN = 'Create';\n\nvar INPUT_TYPE = 'text';\nvar INPUT_MAX_LENGTH = 20;\n\nvar isLogoutClick = false;\n\nvar ListBoard = function (_Element) {\n  _inherits(ListBoard, _Element);\n\n  function ListBoard(widget) {\n    _classCallCheck(this, ListBoard);\n\n    var _this = _possibleConstructorReturn(this, (ListBoard.__proto__ || Object.getPrototypeOf(ListBoard)).call(this));\n\n    _this._createBoard();\n    widget.appendChild(_this.self);\n\n    _this.createLoginForm();\n    _this.createChannelListBoard();\n    return _this;\n  }\n\n  _createClass(ListBoard, [{\n    key: 'reset',\n    value: function reset() {\n      this._setContent(this.list, EMPTY_STRING);\n      this._cleanLoginForm();\n    }\n  }, {\n    key: '_createBoard',\n    value: function _createBoard() {\n      this.self = this.createDiv();\n      this._setClass(this.self, [_consts.className.CHANNEL_BOARD]);\n\n      var boardTop = this.createDiv();\n      this._setClass(boardTop, [_consts.className.BOARD_TOP]);\n\n      this.topTitle = this.createDiv();\n      this._setClass(this.topTitle, [_consts.className.TITLE]);\n      this._setContent(this.topTitle, TITLE_TOP_LOGIN);\n      boardTop.appendChild(this.topTitle);\n\n      this.btnMini = this.createDiv();\n      this._setClass(this.btnMini, [_consts.className.BTN, _consts.className.IC_MINIMIZE]);\n      boardTop.appendChild(this.btnMini);\n\n      this.btnOption = this.createDiv();\n      this._setClass(this.btnOption, [_consts.className.BTN, _consts.className.IC_OPTION]);\n\n      this.btnLogout = this.createDiv();\n      this._setClass(this.btnLogout, [_consts.className.OPTION_MENU]);\n      var logoutText = this.createDiv();\n      this._setClass(logoutText, [_consts.className.OPTION_CONTENT]);\n      this._setContent(logoutText, OPTION_TOOLTIP_TEXT);\n      this.btnLogout.appendChild(logoutText);\n\n      this.btnOption.appendChild(this.btnLogout);\n      boardTop.appendChild(this.btnOption);\n\n      this.addOptionClickEvent();\n\n      this.btnNewChat = this.createDiv();\n      this._setClass(this.btnNewChat, [_consts.className.BTN, _consts.className.IC_NEW_CHAT]);\n\n      var newChatTooltip = this.createSpan();\n      this._setClass(newChatTooltip, [_consts.className.TOOLTIP]);\n      this._setContent(newChatTooltip, NEW_CHAT_TOOLTIP_TEXT);\n      this.btnNewChat.appendChild(newChatTooltip);\n      boardTop.appendChild(this.btnNewChat);\n\n      this.self.appendChild(boardTop);\n    }\n  }, {\n    key: 'addMinimizeClickEvent',\n    value: function addMinimizeClickEvent(action) {\n      this._setClickEvent(this.btnMini, action);\n    }\n  }, {\n    key: 'addOptionClickEvent',\n    value: function addOptionClickEvent() {\n      var _this2 = this;\n\n      if (!this._getOptionEventLock()) {\n        this._setClickEvent(this.btnOption, function () {\n          if ((0, _utils.hasClass)(_this2.btnOption, _consts.className.ACTIVE)) {\n            _this2.hideLogoutBtn();\n          } else {\n            (0, _utils.addClass)(_this2.btnOption, _consts.className.ACTIVE);\n            (0, _utils.show)(_this2.btnLogout);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'addLogoutClickEvent',\n    value: function addLogoutClickEvent(action) {\n      this.setOptionEventLock(true);\n      this._setClickEvent(this.btnLogout, action);\n    }\n  }, {\n    key: 'setOptionEventLock',\n    value: function setOptionEventLock(value) {\n      isLogoutClick = value;\n    }\n  }, {\n    key: '_getOptionEventLock',\n    value: function _getOptionEventLock() {\n      return isLogoutClick;\n    }\n  }, {\n    key: 'hideLogoutBtn',\n    value: function hideLogoutBtn() {\n      (0, _utils.removeClass)(this.btnOption, _consts.className.ACTIVE);\n      (0, _utils.hide)(this.btnLogout);\n    }\n  }, {\n    key: 'addNewChatClickEvent',\n    value: function addNewChatClickEvent(action) {\n      this._setClickEvent(this.btnNewChat, action);\n    }\n  }, {\n    key: 'createLoginForm',\n    value: function createLoginForm() {\n      this.loginForm = this.createDiv();\n      this._setClass(this.loginForm, [_consts.className.CONTENT, _consts.className.LOGIN_FORM]);\n\n      var userIdEl = this.createDiv();\n      this._setClass(userIdEl, [_consts.className.USER_ID]);\n\n      var idTitle = this.createDiv();\n      this._setClass(idTitle, [_consts.className.TITLE]);\n      this._setContent(idTitle, TITLE_LOGIN_USER_ID);\n      userIdEl.appendChild(idTitle);\n\n      this.userId = this.createInput();\n      this._setClass(this.userId, [_consts.className.INPUT]);\n      this.userId.type = INPUT_TYPE;\n      this.userId.maxlength = INPUT_MAX_LENGTH;\n      this.userId.title = TITLE_LOGIN_USER_ID;\n      this._setKeyupEvent(this.userId, this._toggleLoginBtn.bind(this));\n      this._setChangeEvent(this.userId, this._toggleLoginBtn.bind(this));\n      userIdEl.appendChild(this.userId);\n      this.loginForm.appendChild(userIdEl);\n\n      var userNicknameEl = this.createDiv();\n      this._setClass(userNicknameEl, [_consts.className.NICKNAME]);\n\n      var nicknameTitle = this.createDiv();\n      this._setClass(nicknameTitle, [_consts.className.TITLE]);\n      this._setContent(nicknameTitle, TITLE_LOGIN_NICKNAME);\n      userNicknameEl.appendChild(nicknameTitle);\n\n      this.nickname = this.createInput();\n      this._setClass(this.nickname, [_consts.className.INPUT]);\n      this.nickname.type = INPUT_TYPE;\n      this.nickname.maxlength = INPUT_MAX_LENGTH;\n      this.nickname.title = TITLE_LOGIN_NICKNAME;\n      this._setKeyupEvent(this.nickname, this._toggleLoginBtn.bind(this));\n      this._setChangeEvent(this.nickname, this._toggleLoginBtn.bind(this));\n      userNicknameEl.appendChild(this.nickname);\n      this.loginForm.appendChild(userNicknameEl);\n\n      this.btnLogin = this.createDiv();\n      this._setClass(this.btnLogin, [_consts.className.LOGIN_BTN]);\n      this._setContent(this.btnLogin, TITLE_LOGIN_BTN);\n      this.loginForm.appendChild(this.btnLogin);\n    }\n  }, {\n    key: 'showLoginForm',\n    value: function showLoginForm() {\n      if (this.self.lastElementChild == this.listContent) {\n        this.self.removeChild(this.listContent);\n      }\n      this._setContent(this.topTitle, TITLE_TOP_LOGIN);\n      (0, _utils.hide)(this.btnOption);\n      (0, _utils.hide)(this.btnNewChat);\n      this.self.appendChild(this.loginForm);\n      this._toggleLoginBtn();\n    }\n  }, {\n    key: '_cleanLoginForm',\n    value: function _cleanLoginForm() {\n      this.userId.disabled = false;\n      this.nickname.disabled = false;\n      this._setUserId(EMPTY_STRING);\n      this._setNickname(EMPTY_STRING);\n      this._setContent(this.btnLogin, TITLE_LOGIN_BTN);\n      this.enabledToggle(this.btnLogin, true);\n    }\n  }, {\n    key: '_toggleLoginBtn',\n    value: function _toggleLoginBtn() {\n      if (!(0, _utils.isEmptyString)((0, _utils.removeWhiteSpace)(this.userId.value)) && !(0, _utils.isEmptyString)((0, _utils.removeWhiteSpace)(this.nickname.value))) {\n        if (this.btnLogin.innerHTML == TITLE_LOGIN_BTN) {\n          this.enabledToggle(this.btnLogin, true);\n        }\n      } else {\n        this.enabledToggle(this.btnLogin, false);\n      }\n    }\n  }, {\n    key: '_setUserId',\n    value: function _setUserId(value) {\n      this.userId.value = value;\n    }\n  }, {\n    key: 'getUserId',\n    value: function getUserId() {\n      return this.userId.value;\n    }\n  }, {\n    key: '_setNickname',\n    value: function _setNickname(value) {\n      this.nickname.value = value;\n    }\n  }, {\n    key: 'getNickname',\n    value: function getNickname() {\n      return this.nickname.value;\n    }\n  }, {\n    key: 'addLoginClickEvent',\n    value: function addLoginClickEvent(action) {\n      this._setClickEvent(this.btnLogin, action);\n    }\n  }, {\n    key: 'addKeyDownEvent',\n    value: function addKeyDownEvent(target, action) {\n      this._setKeydownEvent(target, action);\n    }\n  }, {\n    key: 'createChannelListBoard',\n    value: function createChannelListBoard() {\n      this.listContent = this.createDiv();\n      this._setClass(this.listContent, [_consts.className.CONTENT, _consts.className.CHANNEL_LIST]);\n\n      this.list = this.createUl();\n      this.listContent.appendChild(this.list);\n    }\n  }, {\n    key: 'showChannelList',\n    value: function showChannelList() {\n      if (this.self.lastElementChild == this.loginForm) {\n        this.self.removeChild(this.loginForm);\n        this._cleanLoginForm();\n      }\n      this._setContent(this.topTitle, TITLE_TOP_CHANNEL);\n      (0, _utils.show)(this.btnOption);\n      (0, _utils.show)(this.btnNewChat);\n      this.self.appendChild(this.listContent);\n    }\n  }, {\n    key: 'addChannelListScrollEvent',\n    value: function addChannelListScrollEvent(action) {\n      var _this3 = this;\n\n      this._setScrollEvent(this.listContent, function () {\n        if (_this3._isBottom(_this3.listContent, _this3.list)) {\n          action();\n        }\n      });\n    }\n  }, {\n    key: 'createChannelItem',\n    value: function createChannelItem() {\n      var channelUrl = arguments.length <= 0 ? undefined : arguments[0];\n      var coverUrl = arguments.length <= 1 ? undefined : arguments[1];\n      var title = arguments.length <= 2 ? undefined : arguments[2];\n      var time = arguments.length <= 3 ? undefined : arguments[3];\n      var message = arguments.length <= 4 ? undefined : arguments[4];\n      var unread = arguments.length <= 5 ? undefined : arguments[5];\n\n      var item = this.createDiv();\n      this._setClass(item, [_consts.className.ITEM]);\n      var itemImg = this.createDiv();\n      this._setClass(itemImg, [_consts.className.IMAGE]);\n      this._setBackgroundImage(itemImg, coverUrl);\n      item.appendChild(itemImg);\n\n      var itemContent = this.createDiv();\n      this._setClass(itemContent, [_consts.className.CONTENT]);\n\n      var contentTop = this.createDiv();\n      this._setClass(contentTop, [_consts.className.CONTENT_TOP]);\n      var contentTitle = this.createDiv();\n      this._setClass(contentTitle, [_consts.className.TITLE]);\n      this._setContent(contentTitle, title);\n      contentTop.appendChild(contentTitle);\n\n      var contentTime = this.createTime();\n      this._setContent(contentTime, time);\n      contentTop.appendChild(contentTime);\n\n      itemContent.appendChild(contentTop);\n\n      var contentBottom = this.createDiv();\n      this._setClass(contentBottom, [_consts.className.CONTENT_BOTTOM]);\n      var contentLastMessage = this.createDiv();\n      this._setClass(contentLastMessage, [_consts.className.LAST_MESSAGE]);\n      this._setContent(contentLastMessage, message);\n      contentBottom.appendChild(contentLastMessage);\n\n      var contentUnread = this.createSpan();\n      this.setUnreadCount(contentUnread, unread);\n      contentBottom.appendChild(contentUnread);\n\n      itemContent.appendChild(contentBottom);\n\n      item.appendChild(itemContent);\n\n      var li = this.createLi();\n      this._setDataset(li, 'channel-url', channelUrl);\n      li.topTitle = contentTitle;\n      li.time = contentTime;\n      li.message = contentLastMessage;\n      li.unread = contentUnread;\n      li.appendChild(item);\n\n      return li;\n    }\n  }, {\n    key: 'checkEmptyList',\n    value: function checkEmptyList() {\n      if (this.list.childNodes.length < 1) {\n        this._createEmptyItem();\n      } else {\n        if (this.emptyItem) {\n          this.list.removeChild(this.emptyItem);\n          this.emptyItem = null;\n        }\n      }\n    }\n  }, {\n    key: '_createEmptyItem',\n    value: function _createEmptyItem() {\n      var _this4 = this;\n\n      var emptyList = this.createDiv();\n      this._setClass(emptyList, [_consts.className.EMPTY_ITEM]);\n\n      var emptyTitle = this.createDiv();\n      this._setClass(emptyTitle, [_consts.className.TITLE]);\n      this._setContent(emptyTitle, TITLE_EMPTY_ITEM);\n\n      var emptyBtn = this.createDiv();\n      this._setClickEvent(emptyBtn, function () {\n        _this4.btnNewChat.click();\n      });\n      this._setClass(emptyBtn, [_consts.className.NEW_CHAT_BTN]);\n      this._setContent(emptyBtn, TITLE_EMPTY_BTN);\n\n      emptyList.appendChild(emptyTitle);\n      emptyList.appendChild(emptyBtn);\n      this.emptyItem = emptyList;\n      this.list.appendChild(emptyList);\n    }\n  }, {\n    key: 'setUnreadCount',\n    value: function setUnreadCount(target, count) {\n      count = parseInt(count);\n      this._setContent(target, count > 9 ? _consts.MAX_COUNT : count.toString());\n      this._setFontSize(target, count > 9 ? _consts.MAX_FONT_SIZE : null);\n      count > 0 ? (0, _utils.show)(target) : (0, _utils.hide)(target);\n    }\n  }, {\n    key: 'addChannelClickEvent',\n    value: function addChannelClickEvent(target, action) {\n      this._setClickEvent(target, action);\n    }\n  }, {\n    key: '_getListItemsArray',\n    value: function _getListItemsArray() {\n      return Array.prototype.slice.call(this.list.childNodes, 0);\n    }\n  }, {\n    key: 'addListOnFirstIndex',\n    value: function addListOnFirstIndex(target) {\n      var _this5 = this;\n\n      var items = this._getListItemsArray();\n      items.filter(function (item) {\n        if (item.getAttribute('data-channel-url') == target.getAttribute('data-channel-url')) {\n          _this5.list.removeChild(item);\n        }\n      });\n      this.list.insertBefore(target, this.list.firstChild);\n    }\n  }, {\n    key: 'getChannelItem',\n    value: function getChannelItem(channelUrl) {\n      var items = this._getListItemsArray();\n      var targetChannel = void 0;\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        if (item.getAttribute('data-channel-url') == channelUrl) {\n          targetChannel = item;\n          break;\n        }\n      }\n      return targetChannel;\n    }\n  }, {\n    key: 'setChannelUnread',\n    value: function setChannelUnread(channelUrl, count) {\n      var target = this.getChannelItem(channelUrl);\n      if (target) {\n        this.setUnreadCount(target.unread, count);\n      }\n    }\n  }, {\n    key: 'setChannelLastMessage',\n    value: function setChannelLastMessage(channelUrl, message) {\n      var target = this.getChannelItem(channelUrl);\n      if (target) {\n        this._setContent(target.message, message);\n      }\n    }\n  }, {\n    key: 'setChannelLastMessageTime',\n    value: function setChannelLastMessageTime(channelUrl, time) {\n      var target = this.getChannelItem(channelUrl);\n      if (target) {\n        this._setContent(target.time, time);\n      }\n    }\n  }, {\n    key: 'setChannelTitle',\n    value: function setChannelTitle(channelUrl, name) {\n      var target = this.getChannelItem(channelUrl);\n      if (target) {\n        this._setContent(target.topTitle, name);\n      }\n    }\n  }]);\n\n  return ListBoard;\n}(_elements2.default);\n\nexports.default = ListBoard;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _elements = __webpack_require__(2);\n\nvar _elements2 = _interopRequireDefault(_elements);\n\nvar _utils = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EMPTY_STRING = '';\nvar TITLE_POPUP_MEMBER_LIST = 'Member List';\nvar TITLE_POPUP_INVITE_LIST = 'Invite Members';\nvar TITLE_POPUP_INVITE_BTN = 'Invite';\nvar MEMBER_POPUP_DEFAULT = -30;\nvar INVITE_POPUP_DEFAULT = -3;\nvar POPUP_DISTANCE = 300;\n\nvar Popup = function (_Element) {\n  _inherits(Popup, _Element);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this));\n\n    _this._createMemberPopup();\n    _this._createInvitePopup();\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: 'reset',\n    value: function reset() {\n      this.closeMemberPopup();\n      this.closeInvitePopup();\n    }\n  }, {\n    key: 'closeMemberPopup',\n    value: function closeMemberPopup() {\n      (0, _utils.hide)(this.memberPopup);\n      this._setContent(this.memberPopup.list, EMPTY_STRING);\n    }\n  }, {\n    key: 'closeInvitePopup',\n    value: function closeInvitePopup() {\n      (0, _utils.hide)(this.invitePopup);\n      this._setContent(this.invitePopup.list, EMPTY_STRING);\n      this._setContent(this.invitePopup.count, '0');\n      this._setContent(this.invitePopup.inviteBtn, TITLE_POPUP_INVITE_BTN);\n      (0, _utils.addClass)(this.invitePopup.inviteBtn, _consts.className.DISABLED);\n    }\n  }, {\n    key: 'showMemberPopup',\n    value: function showMemberPopup(chatSection, index) {\n      chatSection.appendChild(this.memberPopup);\n      this._setRight(this.memberPopup, MEMBER_POPUP_DEFAULT + index * POPUP_DISTANCE);\n      (0, _utils.show)(this.memberPopup);\n    }\n  }, {\n    key: 'showInvitePopup',\n    value: function showInvitePopup(chatSection, index) {\n      chatSection.appendChild(this.invitePopup);\n      this._setRight(this.invitePopup, INVITE_POPUP_DEFAULT + index * POPUP_DISTANCE);\n      (0, _utils.show)(this.invitePopup);\n    }\n  }, {\n    key: '_createMemberPopup',\n    value: function _createMemberPopup() {\n      this.memberPopup = this.createDiv();\n      this._setClass(this.memberPopup, [_consts.className.POPUP, _consts.className.MEMBERS]);\n\n      var popupBody = this.createDiv();\n      this._setClass(popupBody, [_consts.className.POPUP_BODY]);\n\n      var popupTop = this.createDiv();\n      this._setClass(popupTop, [_consts.className.POPUP_TOP]);\n\n      var topTitle = this.createDiv();\n      this._setClass(topTitle, [_consts.className.TITLE]);\n      this._setContent(topTitle, TITLE_POPUP_MEMBER_LIST);\n      popupTop.appendChild(topTitle);\n\n      var topCount = this.createDiv();\n      this._setClass(topCount, [_consts.className.COUNT]);\n      this._setContent(topCount, '0');\n      popupTop.appendChild(topCount);\n\n      this.memberCloseBtn = this.createDiv();\n      this._setClass(this.memberCloseBtn, [_consts.className.BTN, _consts.className.IC_CLOSE]);\n      popupTop.appendChild(this.memberCloseBtn);\n\n      popupBody.appendChild(popupTop);\n\n      var popupContent = this.createDiv();\n      this._setClass(popupContent, [_consts.className.CONTENT]);\n\n      var ul = this.createUl();\n      popupContent.appendChild(ul);\n\n      popupBody.appendChild(popupContent);\n\n      this.memberPopup.list = ul;\n      this.memberPopup.count = topCount;\n      this.memberPopup.appendChild(popupBody);\n    }\n  }, {\n    key: 'updateCount',\n    value: function updateCount(target, count) {\n      count = parseInt(count);\n      this._setContent(target, count > 9 ? _consts.MAX_COUNT : count.toString());\n    }\n  }, {\n    key: 'createMemberItem',\n    value: function createMemberItem(member, isInvite, isCurrentUser) {\n      var li = this.createLi();\n      var div = this.createDiv();\n\n      if (isInvite) {\n        var userSelect = this.createDiv();\n        this._setClass(userSelect, [_consts.className.USER_SELECT]);\n        this._setDataset(userSelect, 'user-id', member.userId);\n        li.select = userSelect;\n        div.appendChild(userSelect);\n      }\n\n      if (isCurrentUser) {\n        var userProfileMe = this.createDiv();\n        this._setClass(userProfileMe, [_consts.className.IMAGE_ME]);\n        div.appendChild(userProfileMe);\n      }\n\n      var userProfile = this.createDiv();\n      this._setClass(userProfile, [_consts.className.IMAGE]);\n      this._setBackgroundImage(userProfile, member.profileUrl);\n      div.appendChild(userProfile);\n\n      var userNickname = this.createDiv();\n      this._setClass(userNickname, [_consts.className.NICKNAME]);\n      this._setContent(userNickname, (0, _utils.xssEscape)(member.nickname));\n      div.appendChild(userNickname);\n\n      li.appendChild(div);\n      return li;\n    }\n  }, {\n    key: '_createInvitePopup',\n    value: function _createInvitePopup() {\n      this.invitePopup = this.createDiv();\n      this._setClass(this.invitePopup, [_consts.className.POPUP, _consts.className.INVITE]);\n\n      var popupBody = this.createDiv();\n      this._setClass(popupBody, [_consts.className.POPUP_BODY]);\n\n      var popupContent = this.createDiv();\n      this._setClass(popupContent, [_consts.className.CONTENT]);\n\n      var ul = this.createUl();\n      popupContent.appendChild(ul);\n      popupBody.appendChild(popupContent);\n\n      var popupBottom = this.createDiv();\n      this._setClass(popupBottom, [_consts.className.POPUP_BOTTOM]);\n\n      var bottomTitle = this.createDiv();\n      this._setClass(bottomTitle, [_consts.className.TITLE]);\n      this._setContent(bottomTitle, TITLE_POPUP_INVITE_LIST);\n      popupBottom.appendChild(bottomTitle);\n\n      var bottomCount = this.createDiv();\n      this._setClass(bottomCount, [_consts.className.COUNT]);\n      this._setContent(bottomCount, '0');\n      popupBottom.appendChild(bottomCount);\n\n      var bottomInvite = this.createDiv();\n      this._setClass(bottomInvite, [_consts.className.INVITE_BTN, _consts.className.DISABLED]);\n      this._setContent(bottomInvite, TITLE_POPUP_INVITE_BTN);\n      popupBottom.appendChild(bottomInvite);\n\n      popupBody.appendChild(popupBottom);\n      this.invitePopup.content = popupContent;\n      this.invitePopup.list = ul;\n      this.invitePopup.count = bottomCount;\n      this.invitePopup.inviteBtn = bottomInvite;\n      this.invitePopup.appendChild(popupBody);\n    }\n  }, {\n    key: 'getSelectedUserIds',\n    value: function getSelectedUserIds(target) {\n      var items = target.querySelectorAll('.' + _consts.className.ACTIVE);\n      var userIds = [];\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        userIds.push(item.getAttribute('data-user-id'));\n      }\n      return userIds;\n    }\n  }, {\n    key: 'addCloseBtnClickEvent',\n    value: function addCloseBtnClickEvent(action) {\n      this._setClickEvent(this.memberCloseBtn, function () {\n        action();\n      });\n    }\n  }, {\n    key: 'addScrollEvent',\n    value: function addScrollEvent(action) {\n      var _this2 = this;\n\n      this._setScrollEvent(this.invitePopup.content, function () {\n        if (_this2._isBottom(_this2.invitePopup.content, _this2.invitePopup.list)) {\n          action();\n        }\n      });\n    }\n  }, {\n    key: 'addClickEvent',\n    value: function addClickEvent(target, action) {\n      this._setClickEvent(target, action);\n    }\n  }]);\n\n  return Popup;\n}(_elements2.default);\n\nexports.default = Popup;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _elements = __webpack_require__(2);\n\nvar _elements2 = _interopRequireDefault(_elements);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EMPTY_STRING = \'\';\n\nvar Spinner = function (_Element) {\n  _inherits(Spinner, _Element);\n\n  function Spinner() {\n    _classCallCheck(this, Spinner);\n\n    var _this = _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).call(this));\n\n    _this._create();\n    return _this;\n  }\n\n  _createClass(Spinner, [{\n    key: \'_create\',\n    value: function _create() {\n      this.self = this.createDiv();\n      this._setClass(this.self, [_consts.className.SPINNER]);\n      var i;\n      for (i = 0; i < 3; i++) {\n        this.self.appendChild(this.createDiv());\n      }\n    }\n  }, {\n    key: \'insert\',\n    value: function insert(target) {\n      this._setContent(target, EMPTY_STRING);\n      target.appendChild(this.self);\n    }\n  }, {\n    key: \'remove\',\n    value: function remove(target) {\n      if (target.firstElementChild) {\n        target.removeChild(this.self);\n      }\n    }\n  }]);\n\n  return Spinner;\n}(_elements2.default);\n\nexports.default = Spinner;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2pzL2VsZW1lbnRzL3NwaW5uZXIuanM/NjYwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfY29uc3RzID0gcmVxdWlyZSgnLi4vY29uc3RzLmpzJyk7XG5cbnZhciBfZWxlbWVudHMgPSByZXF1aXJlKCcuL2VsZW1lbnRzLmpzJyk7XG5cbnZhciBfZWxlbWVudHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZWxlbWVudHMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBFTVBUWV9TVFJJTkcgPSAnJztcblxudmFyIFNwaW5uZXIgPSBmdW5jdGlvbiAoX0VsZW1lbnQpIHtcbiAgX2luaGVyaXRzKFNwaW5uZXIsIF9FbGVtZW50KTtcblxuICBmdW5jdGlvbiBTcGlubmVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTcGlubmVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChTcGlubmVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU3Bpbm5lcikpLmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuX2NyZWF0ZSgpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTcGlubmVyLCBbe1xuICAgIGtleTogJ19jcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlKCkge1xuICAgICAgdGhpcy5zZWxmID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRoaXMuc2VsZiwgW19jb25zdHMuY2xhc3NOYW1lLlNQSU5ORVJdKTtcbiAgICAgIHZhciBpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgICB0aGlzLnNlbGYuYXBwZW5kQ2hpbGQodGhpcy5jcmVhdGVEaXYoKSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaW5zZXJ0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0KHRhcmdldCkge1xuICAgICAgdGhpcy5fc2V0Q29udGVudCh0YXJnZXQsIEVNUFRZX1NUUklORyk7XG4gICAgICB0YXJnZXQuYXBwZW5kQ2hpbGQodGhpcy5zZWxmKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUodGFyZ2V0KSB7XG4gICAgICBpZiAodGFyZ2V0LmZpcnN0RWxlbWVudENoaWxkKSB7XG4gICAgICAgIHRhcmdldC5yZW1vdmVDaGlsZCh0aGlzLnNlbGYpO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTcGlubmVyO1xufShfZWxlbWVudHMyLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBTcGlubmVyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvZWxlbWVudHMvc3Bpbm5lci5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _elements = __webpack_require__(2);\n\nvar _elements2 = _interopRequireDefault(_elements);\n\nvar _utils = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WidgetBtn = function (_Element) {\n  _inherits(WidgetBtn, _Element);\n\n  function WidgetBtn(widget) {\n    _classCallCheck(this, WidgetBtn);\n\n    var _this = _possibleConstructorReturn(this, (WidgetBtn.__proto__ || Object.getPrototypeOf(WidgetBtn)).call(this));\n\n    _this._create();\n    widget.appendChild(_this.self);\n    return _this;\n  }\n\n  _createClass(WidgetBtn, [{\n    key: \'reset\',\n    value: function reset() {\n      this.toggleIcon(false);\n      this.setUnreadCount(0);\n    }\n  }, {\n    key: \'_create\',\n    value: function _create() {\n      this.self = this.createDiv();\n      this._setClass(this.self, [_consts.className.WIDGET_BTN, _consts.className.IC_LOGIN]);\n\n      this.unread = this.createDiv();\n      this._setClass(this.unread, [_consts.className.NOTIFICATION]);\n\n      this.self.appendChild(this.unread);\n    }\n  }, {\n    key: \'addClickEvent\',\n    value: function addClickEvent(action) {\n      this._setClickEvent(this.self, action);\n    }\n  }, {\n    key: \'setUnreadCount\',\n    value: function setUnreadCount(count) {\n      count = parseInt(count);\n      this._setContent(this.unread, count > 9 ? _consts.MAX_COUNT : count.toString());\n      count > 0 ? (0, _utils.show)(this.unread) : (0, _utils.hide)(this.unread);\n    }\n  }, {\n    key: \'toggleIcon\',\n    value: function toggleIcon(isConnected) {\n      isConnected ? (0, _utils.addClass)((0, _utils.removeClass)(this.self, _consts.className.IC_LOGIN), _consts.className.IC_CONNECTED) : (0, _utils.addClass)((0, _utils.removeClass)(this.self, _consts.className.IC_CONNECTED), _consts.className.IC_LOGIN);\n    }\n  }]);\n\n  return WidgetBtn;\n}(_elements2.default);\n\nexports.default = WidgetBtn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2pzL2VsZW1lbnRzL3dpZGdldC1idG4uanM/ZTliNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfY29uc3RzID0gcmVxdWlyZSgnLi4vY29uc3RzLmpzJyk7XG5cbnZhciBfZWxlbWVudHMgPSByZXF1aXJlKCcuL2VsZW1lbnRzLmpzJyk7XG5cbnZhciBfZWxlbWVudHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZWxlbWVudHMpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMuanMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgV2lkZ2V0QnRuID0gZnVuY3Rpb24gKF9FbGVtZW50KSB7XG4gIF9pbmhlcml0cyhXaWRnZXRCdG4sIF9FbGVtZW50KTtcblxuICBmdW5jdGlvbiBXaWRnZXRCdG4od2lkZ2V0KSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFdpZGdldEJ0bik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoV2lkZ2V0QnRuLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoV2lkZ2V0QnRuKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5fY3JlYXRlKCk7XG4gICAgd2lkZ2V0LmFwcGVuZENoaWxkKF90aGlzLnNlbGYpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhXaWRnZXRCdG4sIFt7XG4gICAga2V5OiAncmVzZXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIHRoaXMudG9nZ2xlSWNvbihmYWxzZSk7XG4gICAgICB0aGlzLnNldFVucmVhZENvdW50KDApO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19jcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY3JlYXRlKCkge1xuICAgICAgdGhpcy5zZWxmID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRoaXMuc2VsZiwgW19jb25zdHMuY2xhc3NOYW1lLldJREdFVF9CVE4sIF9jb25zdHMuY2xhc3NOYW1lLklDX0xPR0lOXSk7XG5cbiAgICAgIHRoaXMudW5yZWFkID0gdGhpcy5jcmVhdGVEaXYoKTtcbiAgICAgIHRoaXMuX3NldENsYXNzKHRoaXMudW5yZWFkLCBbX2NvbnN0cy5jbGFzc05hbWUuTk9USUZJQ0FUSU9OXSk7XG5cbiAgICAgIHRoaXMuc2VsZi5hcHBlbmRDaGlsZCh0aGlzLnVucmVhZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkQ2xpY2tFdmVudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZENsaWNrRXZlbnQoYWN0aW9uKSB7XG4gICAgICB0aGlzLl9zZXRDbGlja0V2ZW50KHRoaXMuc2VsZiwgYWN0aW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZXRVbnJlYWRDb3VudCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFVucmVhZENvdW50KGNvdW50KSB7XG4gICAgICBjb3VudCA9IHBhcnNlSW50KGNvdW50KTtcbiAgICAgIHRoaXMuX3NldENvbnRlbnQodGhpcy51bnJlYWQsIGNvdW50ID4gOSA/IF9jb25zdHMuTUFYX0NPVU5UIDogY291bnQudG9TdHJpbmcoKSk7XG4gICAgICBjb3VudCA+IDAgPyAoMCwgX3V0aWxzLnNob3cpKHRoaXMudW5yZWFkKSA6ICgwLCBfdXRpbHMuaGlkZSkodGhpcy51bnJlYWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3RvZ2dsZUljb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2dnbGVJY29uKGlzQ29ubmVjdGVkKSB7XG4gICAgICBpc0Nvbm5lY3RlZCA/ICgwLCBfdXRpbHMuYWRkQ2xhc3MpKCgwLCBfdXRpbHMucmVtb3ZlQ2xhc3MpKHRoaXMuc2VsZiwgX2NvbnN0cy5jbGFzc05hbWUuSUNfTE9HSU4pLCBfY29uc3RzLmNsYXNzTmFtZS5JQ19DT05ORUNURUQpIDogKDAsIF91dGlscy5hZGRDbGFzcykoKDAsIF91dGlscy5yZW1vdmVDbGFzcykodGhpcy5zZWxmLCBfY29uc3RzLmNsYXNzTmFtZS5JQ19DT05ORUNURUQpLCBfY29uc3RzLmNsYXNzTmFtZS5JQ19MT0dJTik7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFdpZGdldEJ0bjtcbn0oX2VsZW1lbnRzMi5kZWZhdWx0KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gV2lkZ2V0QnRuO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vanMvZWxlbWVudHMvd2lkZ2V0LWJ0bi5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _consts = __webpack_require__(0);\n\nvar _utils = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GLOBAL_HANDLER = 'GLOBAL_HANDLER';\nvar GET_MESSAGE_LIMIT = 20;\n\nvar Sendbird = function () {\n  function Sendbird(appId) {\n    _classCallCheck(this, Sendbird);\n\n    this.sb = new window.SendBird({ appId: appId });\n    this.channelListQuery = null;\n    this.userListQuery = null;\n  }\n\n  _createClass(Sendbird, [{\n    key: 'reset',\n    value: function reset() {\n      this.channelListQuery = null;\n      this.userListQuery = null;\n      this.sb.removeChannelHandler(GLOBAL_HANDLER);\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return !!this.sb.currentUser;\n    }\n  }, {\n    key: 'connect',\n    value: function connect(userId, nickname, action) {\n      var _this = this;\n\n      this.sb.connect(userId.trim(), function (user, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        _this.sb.updateCurrentUserInfo(nickname.trim(), '', function (response, error) {\n          if (error) {\n            console.error(error);\n            return;\n          }\n          action();\n        });\n      });\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect(action) {\n      if (this.isConnected()) {\n        this.sb.disconnect(function () {\n          action();\n        });\n      }\n    }\n  }, {\n    key: 'isCurrentUser',\n    value: function isCurrentUser(user) {\n      return this.sb.currentUser.userId == user.userId;\n    }\n\n    /*\n    Channel\n     */\n\n  }, {\n    key: 'getChannelList',\n    value: function getChannelList(action) {\n      if (!this.channelListQuery) {\n        this.channelListQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\n        this.channelListQuery.includeEmpty = true;\n        this.channelListQuery.limit = 20;\n      }\n      if (this.channelListQuery.hasNext && !this.channelListQuery.isLoading) {\n        this.channelListQuery.next(function (channelList, error) {\n          if (error) {\n            console.error(error);\n            return;\n          }\n          action(channelList);\n        });\n      }\n    }\n  }, {\n    key: 'getChannelInfo',\n    value: function getChannelInfo(channelUrl, action) {\n      this.sb.GroupChannel.getChannel(channelUrl, function (channel, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action(channel);\n      });\n    }\n  }, {\n    key: 'createNewChannel',\n    value: function createNewChannel(userIds, action) {\n      this.sb.GroupChannel.createChannelWithUserIds(userIds, true, '', '', '', function (channel, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action(channel);\n      });\n    }\n  }, {\n    key: 'inviteMember',\n    value: function inviteMember(channel, userIds, action) {\n      channel.inviteWithUserIds(userIds, function (response, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action();\n      });\n    }\n  }, {\n    key: 'channelLeave',\n    value: function channelLeave(channel, action) {\n      channel.leave(function (response, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action();\n      });\n    }\n\n    /*\n    Message\n     */\n\n  }, {\n    key: 'getTotalUnreadCount',\n    value: function getTotalUnreadCount(action) {\n      this.sb.GroupChannel.getTotalUnreadMessageCount(function (unreadCount) {\n        action(unreadCount);\n      });\n    }\n  }, {\n    key: 'getMessageList',\n    value: function getMessageList(channelSet, action) {\n      if (!channelSet.query) {\n        channelSet.query = channelSet.channel.createPreviousMessageListQuery();\n      }\n      if (channelSet.query.hasMore && !channelSet.query.isLoading) {\n        channelSet.query.load(GET_MESSAGE_LIMIT, false, function (messageList, error) {\n          if (error) {\n            console.error(error);\n            return;\n          }\n          action(messageList);\n        });\n      }\n    }\n  }, {\n    key: 'sendTextMessage',\n    value: function sendTextMessage(channel, textMessage, action) {\n      channel.sendUserMessage(textMessage, function (message, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action(message);\n      });\n    }\n  }, {\n    key: 'sendFileMessage',\n    value: function sendFileMessage(channel, file, action) {\n      var thumbSize = [{ 'maxWidth': 160, 'maxHeight': 160 }];\n      channel.sendFileMessage(file, '', '', thumbSize, function (message, error) {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        action(message);\n      });\n    }\n\n    /*\n    User\n     */\n\n  }, {\n    key: 'getUserList',\n    value: function getUserList(action) {\n      if (!this.userListQuery) {\n        this.userListQuery = this.sb.createUserListQuery();\n      }\n      if (this.userListQuery.hasNext && !this.userListQuery.isLoading) {\n        this.userListQuery.next(function (userList, error) {\n          if (error) {\n            console.error(error);\n            return;\n          }\n          action(userList);\n        });\n      }\n    }\n\n    /*\n    Handler\n     */\n\n  }, {\n    key: 'createHandlerGlobal',\n    value: function createHandlerGlobal() {\n      var messageReceivedFunc = arguments.length <= 0 ? undefined : arguments[0];\n      var messageUpdatedFunc = arguments.length <= 1 ? undefined : arguments[1];\n      var messageDeletedFunc = arguments.length <= 2 ? undefined : arguments[2];\n      var ChannelChangedFunc = arguments.length <= 3 ? undefined : arguments[3];\n      var typingStatusFunc = arguments.length <= 4 ? undefined : arguments[4];\n      var readReceiptFunc = arguments.length <= 5 ? undefined : arguments[5];\n      var userLeftFunc = arguments.length <= 6 ? undefined : arguments[6];\n      var userJoinFunc = arguments.length <= 7 ? undefined : arguments[7];\n\n      var channelHandler = new this.sb.ChannelHandler();\n      channelHandler.onMessageReceived = function (channel, message) {\n        messageReceivedFunc(channel, message);\n      };\n      channelHandler.onMessageUpdated = function (channel, message) {\n        messageUpdatedFunc(channel, message);\n      };\n      channelHandler.onMessageDeleted = function (channel, messageId) {\n        messageDeletedFunc(channel, messageId);\n      };\n      channelHandler.onChannelChanged = function (channel) {\n        ChannelChangedFunc(channel);\n      };\n      channelHandler.onTypingStatusUpdated = function (channel) {\n        typingStatusFunc(channel);\n      };\n      channelHandler.onReadReceiptUpdated = function (channel) {\n        readReceiptFunc(channel);\n      };\n      channelHandler.onUserLeft = function (channel, user) {\n        userLeftFunc(channel, user);\n      };\n      channelHandler.onUserJoined = function (channel, user) {\n        userJoinFunc(channel, user);\n      };\n      this.sb.addChannelHandler(GLOBAL_HANDLER, channelHandler);\n    }\n\n    /*\n    Info\n     */\n\n  }, {\n    key: 'getNicknamesString',\n    value: function getNicknamesString(channel) {\n      var nicknameList = [];\n      var currentUserId = this.sb.currentUser.userId;\n      channel.members.forEach(function (member) {\n        if (member.userId != currentUserId) {\n          nicknameList.push((0, _utils.xssEscape)(member.nickname));\n        }\n      });\n      return nicknameList.toString();\n    }\n  }, {\n    key: 'getMemberCount',\n    value: function getMemberCount(channel) {\n      return channel.memberCount > 9 ? _consts.MAX_COUNT : channel.memberCount.toString();\n    }\n  }, {\n    key: 'getLastMessage',\n    value: function getLastMessage(channel) {\n      if (channel.lastMessage) {\n        return channel.lastMessage.isUserMessage() || channel.lastMessage.isAdminMessage() ? channel.lastMessage.message : channel.lastMessage.name;\n      }\n      return '';\n    }\n  }, {\n    key: 'getMessageTime',\n    value: function getMessageTime(message) {\n      var months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n\n      var _getDay = function _getDay(val) {\n        var day = parseInt(val);\n        if (day == 1) {\n          return day + 'st';\n        } else if (day == 2) {\n          return day + 'en';\n        } else if (day == 3) {\n          return day + 'rd';\n        } else {\n          return day + 'th';\n        }\n      };\n\n      var _checkTime = function _checkTime(val) {\n        return +val < 10 ? '0' + val : val;\n      };\n\n      if (message) {\n        var LAST_MESSAGE_YESTERDAY = 'YESTERDAY';\n        var _nowDate = new Date();\n        var _date = new Date(message.createdAt);\n        if (_nowDate.getDate() - _date.getDate() == 1) {\n          return LAST_MESSAGE_YESTERDAY;\n        } else if (_nowDate.getFullYear() == _date.getFullYear() && _nowDate.getMonth() == _date.getMonth() && _nowDate.getDate() == _date.getDate()) {\n          return _checkTime(_date.getHours()) + ':' + _checkTime(_date.getMinutes());\n        } else {\n          return months[_date.getMonth()] + ' ' + _getDay(_date.getDate());\n        }\n      }\n      return '';\n    }\n  }, {\n    key: 'getMessageReadReceiptCount',\n    value: function getMessageReadReceiptCount(channel, message) {\n      return channel.getReadReceipt(message);\n    }\n  }, {\n    key: 'getChannelUnreadCount',\n    value: function getChannelUnreadCount(channel) {\n      return channel.unreadMessageCount;\n    }\n  }]);\n\n  return Sendbird;\n}();\n\nexports.default = Sendbird;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _widgetBtn = __webpack_require__(7);\n\nvar _widgetBtn2 = _interopRequireDefault(_widgetBtn);\n\nvar _listBoard = __webpack_require__(4);\n\nvar _listBoard2 = _interopRequireDefault(_listBoard);\n\nvar _chatSection = __webpack_require__(3);\n\nvar _chatSection2 = _interopRequireDefault(_chatSection);\n\nvar _popup = __webpack_require__(5);\n\nvar _popup2 = _interopRequireDefault(_popup);\n\nvar _spinner2 = __webpack_require__(6);\n\nvar _spinner3 = _interopRequireDefault(_spinner2);\n\nvar _sendbird = __webpack_require__(8);\n\nvar _sendbird2 = _interopRequireDefault(_sendbird);\n\nvar _utils = __webpack_require__(1);\n\nvar _consts = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WIDGET_ID = 'sb_widget';\nvar TIME_STRING_TODAY = 'TODAY';\nvar TIME_MESSAGE_TYPE = 'time';\nvar NEW_CHAT_BOARD_ID = 'NEW_CHAT';\nvar KEY_DOWN_ENTER = 13;\nvar KEY_DOWN_KR = 229;\nvar CHAT_BOARD_WIDTH = 300;\nvar ERROR_MESSAGE = 'Please create \"sb_widget\" element on first.';\nvar ERROR_MESSAGE_SDK = 'Please import \"SendBird SDK\" on first.';\nvar EVENT_TYPE_CLICK = 'click';\n\nwindow.WebFontConfig = {\n  google: { families: ['Lato:400,700'] }\n};\n\nvar SBWidget = function () {\n  function SBWidget() {\n    _classCallCheck(this, SBWidget);\n  }\n\n  _createClass(SBWidget, [{\n    key: 'start',\n    value: function start(appId) {\n      var _this = this;\n\n      if (!window.SendBird) {\n        console.error(ERROR_MESSAGE_SDK);\n        return;\n      }\n      this._getGoogleFont();\n      this.widget = document.getElementById(WIDGET_ID);\n      if (this.widget) {\n        document.addEventListener(EVENT_TYPE_CLICK, function (event) {\n          _this._initClickEvent(event);\n        });\n        this._init();\n        this._start(appId);\n      } else {\n        console.error(ERROR_MESSAGE);\n      }\n    }\n  }, {\n    key: 'startWithConnect',\n    value: function startWithConnect(appId, userId, nickname, callback) {\n      var _this2 = this;\n\n      if (!window.SendBird) {\n        console.error(ERROR_MESSAGE_SDK);\n        return;\n      }\n      this._getGoogleFont();\n      this.widget = document.getElementById(WIDGET_ID);\n      if (this.widget) {\n        document.addEventListener(EVENT_TYPE_CLICK, function (event) {\n          _this2._initClickEvent(event);\n        });\n        this._init();\n        this._start(appId);\n        this._connect(userId, nickname, callback);\n      } else {\n        console.error(ERROR_MESSAGE);\n      }\n    }\n  }, {\n    key: '_initClickEvent',\n    value: function _initClickEvent(event) {\n      var _checkPopup = function _checkPopup(_target, obj) {\n        if (obj === _target || (0, _utils.hasClass)(_target, _consts.className.IC_MEMBERS) || (0, _utils.hasClass)(_target, _consts.className.IC_INVITE)) {\n          return true;\n        } else {\n          var returnedCheck = false;\n          for (var i = 0; i < obj.childNodes.length; i++) {\n            returnedCheck = _checkPopup(_target, obj.childNodes[i]);\n            if (returnedCheck) break;\n          }\n          return returnedCheck;\n        }\n      };\n\n      if (!_checkPopup(event.target, this.popup.memberPopup)) {\n        this.closeMemberPopup();\n      }\n      if (!_checkPopup(event.target, this.popup.invitePopup)) {\n        this.closeInvitePopup();\n      }\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      this.spinner = new _spinner3.default();\n\n      this.widgetBtn = new _widgetBtn2.default(this.widget);\n      this.listBoard = new _listBoard2.default(this.widget);\n      this.chatSection = new _chatSection2.default(this.widget);\n      this.popup = new _popup2.default();\n\n      this.activeChannelSetList = [];\n      this.extraChannelSetList = [];\n\n      this.timeMessage = function () {\n        function TimeMessage(date) {\n          _classCallCheck(this, TimeMessage);\n\n          this.time = date;\n          this.type = TIME_MESSAGE_TYPE;\n        }\n\n        _createClass(TimeMessage, [{\n          key: 'isTimeMessage',\n          value: function isTimeMessage() {\n            return this.type == TIME_MESSAGE_TYPE;\n          }\n        }]);\n\n        return TimeMessage;\n      }();\n\n      (0, _utils.requestNotification)();\n      this.notificationSound = (0, _utils.createNotificationSound)();\n    }\n  }, {\n    key: '_getGoogleFont',\n    value: function _getGoogleFont() {\n      var wf = document.createElement('script');\n      wf.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js';\n      wf.type = 'text/javascript';\n      wf.async = 'true';\n      var s = document.getElementsByTagName('script')[0];\n      s.parentNode.insertBefore(wf, s);\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.extraChannelSetList = [];\n      for (var i = 0; i < this.activeChannelSetList.length; i++) {\n        var channelSet = this.activeChannelSetList[i];\n        var targetBoard = this.chatSection.getChatBoard(channelSet.channel.url);\n        if (targetBoard) {\n          this.chatSection.closeChatBoard(targetBoard);\n        }\n      }\n      this.activeChannelSetList = [];\n      this.closePopup();\n\n      this.sb.reset();\n      this.listBoard.reset();\n      this.widgetBtn.reset();\n    }\n  }, {\n    key: 'responsiveChatSection',\n    value: function responsiveChatSection(channelUrl, isShow) {\n      var _bodyWidth = document.getElementsByTagName('BODY')[0].offsetWidth - 360;\n      var maxSize = parseInt(_bodyWidth / CHAT_BOARD_WIDTH);\n      var currentSize = this.activeChannelSetList.length;\n      if (currentSize >= maxSize) {\n        var extraChannelSet = (0, _utils.getLastItem)(this.activeChannelSetList);\n        if (extraChannelSet) {\n          if (this.extraChannelSetList.indexOf(extraChannelSet.channel.url) < 0) {\n            this.extraChannelSetList.push(extraChannelSet.channel.url);\n          }\n          var chatBoard = this.chatSection.getChatBoard(extraChannelSet.channel.url);\n          if (chatBoard) {\n            this.chatSection.closeChatBoard(chatBoard);\n          }\n          this.removeChannelSet(extraChannelSet.channel);\n        }\n        if (channelUrl) {\n          var idx = this.extraChannelSetList.indexOf(channelUrl);\n          if (idx > -1) {\n            this.extraChannelSetList.splice(idx, 1);\n          }\n        }\n        this.chatSection.setWidth(maxSize * CHAT_BOARD_WIDTH);\n      } else {\n        var popChannelUrl = this.extraChannelSetList.pop();\n        if (popChannelUrl) {\n          this._connectChannel(popChannelUrl, true);\n          this.chatSection.setWidth((currentSize + 1) * CHAT_BOARD_WIDTH);\n        } else {\n          if (isShow) {\n            currentSize += 1;\n          }\n          this.chatSection.setWidth(currentSize * CHAT_BOARD_WIDTH);\n        }\n      }\n    }\n  }, {\n    key: '_start',\n    value: function _start(appId) {\n      var _this3 = this;\n\n      this.sb = new _sendbird2.default(appId);\n\n      this.popup.addCloseBtnClickEvent(function () {\n        _this3.closePopup();\n      });\n\n      this.widgetBtn.addClickEvent(function () {\n        _this3.sb.isConnected() ? _this3.listBoard.showChannelList() : _this3.listBoard.showLoginForm();\n        _this3.toggleBoard(true);\n        _this3.listBoard.addChannelListScrollEvent(function () {\n          _this3.getChannelList();\n        });\n        _this3.chatSection.responsiveSize(false, _this3.responsiveChatSection.bind(_this3));\n      });\n\n      this.listBoard.addNewChatClickEvent(function () {\n        _this3.listBoard.hideLogoutBtn();\n\n        var chatBoard = _this3.chatSection.createChatBoard(NEW_CHAT_BOARD_ID);\n        _this3.responsiveChatSection(null, true);\n\n        _this3.chatSection.createNewChatBoard(chatBoard);\n        _this3.chatSection.addClickEvent(chatBoard.startBtn, function () {\n          if (!(0, _utils.hasClass)(chatBoard.startBtn, _consts.className.DISABLED)) {\n            (0, _utils.addClass)(chatBoard.startBtn, _consts.className.DISABLED);\n            _this3.sb.userListQuery = null;\n            _this3.spinner.insert(chatBoard.startBtn);\n            var selectedUserIds = _this3.chatSection.getSelectedUserIds(chatBoard.userContent);\n            _this3.sb.createNewChannel(selectedUserIds, function (channel) {\n              chatBoard.parentNode.removeChild(chatBoard);\n              _this3._connectChannel(channel.url, true);\n              _this3.listBoard.checkEmptyList();\n            });\n          }\n        });\n        _this3.spinner.insert(chatBoard.userContent);\n\n        _this3.sb.getUserList(function (userList) {\n          _this3.spinner.remove(chatBoard.userContent);\n          _this3.setUserList(chatBoard, userList);\n        });\n\n        _this3.chatSection.addClickEvent(chatBoard.closeBtn, function () {\n          _this3.chatSection.closeChatBoard(chatBoard);\n          _this3.closePopup();\n          _this3.responsiveChatSection();\n        });\n        (0, _utils.hide)(chatBoard.leaveBtn);\n        (0, _utils.hide)(chatBoard.memberBtn);\n        (0, _utils.hide)(chatBoard.inviteBtn);\n      });\n\n      this.listBoard.addMinimizeClickEvent(function () {\n        _this3.listBoard.hideLogoutBtn();\n        _this3.closePopup();\n        _this3.toggleBoard(false);\n        _this3.chatSection.responsiveSize(true, _this3.responsiveChatSection.bind(_this3));\n      });\n\n      this.listBoard.addLogoutClickEvent(function () {\n        _this3.sb.disconnect(function () {\n          (0, _utils.deleteCookie)();\n          _this3.sb.reset();\n          _this3.toggleBoard(false);\n          _this3.widgetBtn.toggleIcon(false);\n          _this3.listBoard.setOptionEventLock(false);\n          _this3.chatSection.reset();\n          _this3.reset();\n        });\n      });\n\n      this.listBoard.addLoginClickEvent(function () {\n        if (!(0, _utils.hasClass)(_this3.listBoard.btnLogin, _consts.className.DISABLED)) {\n          _this3.spinner.insert(_this3.listBoard.btnLogin);\n          _this3.listBoard.enabledToggle(_this3.listBoard.btnLogin, false);\n          _this3.listBoard.userId.disabled = true;\n          _this3.listBoard.nickname.disabled = true;\n\n          _this3._connect(_this3.listBoard.getUserId(), _this3.listBoard.getNickname());\n          (0, _utils.setCookie)(_this3.listBoard.getUserId(), _this3.listBoard.getNickname());\n        }\n      });\n      this.listBoard.addKeyDownEvent(this.listBoard.nickname, function (event) {\n        if (event.keyCode == KEY_DOWN_ENTER) {\n          _this3.listBoard.btnLogin.click();\n        }\n      });\n\n      var cookie = (0, _utils.getCookie)();\n      if (cookie.userId) {\n        this._connect(cookie.userId, cookie.nickname);\n        this.listBoard.showChannelList();\n        this.toggleBoard(true);\n        this.chatSection.responsiveSize(false, this.responsiveChatSection.bind(this));\n      }\n    }\n  }, {\n    key: '_connect',\n    value: function _connect(userId, nickname, callback) {\n      var _this4 = this;\n\n      this.sb.connect(userId, nickname, function () {\n        _this4.widgetBtn.toggleIcon(true);\n\n        _this4.listBoard.showChannelList();\n        _this4.spinner.insert(_this4.listBoard.list);\n        _this4.getChannelList();\n\n        _this4.sb.createHandlerGlobal(function (channel, message) {\n          _this4.messageReceivedAction(channel, message);\n        }, function (channel, message) {\n          _this4.messageUpdatedAction(channel, message);\n        }, function (channel, messageId) {\n          _this4.messageDeletedAction(channel, messageId);\n        }, function (channel) {\n          _this4.updateUnreadMessageCount(channel);\n        }, function (channel) {\n          var targetBoard = _this4.chatSection.getChatBoard(channel.url);\n          if (targetBoard) {\n            var isBottom = _this4.chatSection.isBottom(targetBoard.messageContent, targetBoard.list);\n            _this4.chatSection.showTyping(channel, _this4.spinner);\n            _this4.chatSection.responsiveHeight(channel.url);\n            if (isBottom) {\n              _this4.chatSection.scrollToBottom(targetBoard.messageContent);\n            }\n          }\n        }, function (channel) {\n          var targetBoard = _this4.chatSection.getChatBoard(channel.url);\n          if (targetBoard) {\n            var channelSet = _this4.getChannelSet(channel.url);\n            if (channelSet) {\n              _this4.chatSection.updateReadReceipt(channelSet, targetBoard);\n            }\n          }\n        }, function (channel, user) {\n          if (_this4.sb.isCurrentUser(user)) {\n            var item = _this4.listBoard.getChannelItem(channel.url);\n            _this4.listBoard.list.removeChild(item);\n            _this4.listBoard.checkEmptyList();\n          } else {\n            _this4.listBoard.setChannelTitle(channel.url, _this4.sb.getNicknamesString(channel));\n            _this4.updateUnreadMessageCount(channel);\n            var targetChatBoard = _this4.chatSection.getChatBoard(channel.url);\n            if (targetChatBoard) {\n              _this4.updateChannelInfo(targetChatBoard, channel);\n            }\n          }\n        }, function (channel, user) {\n          _this4.listBoard.setChannelTitle(channel.url, _this4.sb.getNicknamesString(channel));\n          var targetChatBoard = _this4.chatSection.getChatBoard(channel.url);\n          if (targetChatBoard) {\n            _this4.updateChannelInfo(targetChatBoard, channel);\n          }\n        });\n\n        if (callback) callback();\n      });\n    }\n  }, {\n    key: 'messageReceivedAction',\n    value: function messageReceivedAction(channel, message) {\n      var target = this.listBoard.getChannelItem(channel.url);\n      if (!target) {\n        target = this.createChannelItem(channel);\n        this.listBoard.checkEmptyList();\n      }\n      this.listBoard.addListOnFirstIndex(target);\n\n      this.listBoard.setChannelLastMessage(channel.url, message.isFileMessage() ? (0, _utils.xssEscape)(message.name) : (0, _utils.xssEscape)(message.message));\n      this.listBoard.setChannelLastMessageTime(channel.url, this.sb.getMessageTime(message));\n\n      var targetBoard = this.chatSection.getChatBoard(channel.url);\n      if (targetBoard) {\n        var isBottom = this.chatSection.isBottom(targetBoard.messageContent, targetBoard.list);\n        var channelSet = this.getChannelSet(channel.url);\n        var lastMessage = (0, _utils.getLastItem)(channelSet.message);\n        channelSet.message.push(message);\n        this.setMessageItem(channelSet.channel, targetBoard, [message], false, isBottom, lastMessage);\n        channel.markAsRead();\n        this.updateUnreadMessageCount(channel);\n      }\n      if (!targetBoard) {\n        if ('Notification' in window) {\n          var notification = new Notification(\"New Message\", {\n            \"body\": message.isFileMessage() ? message.name : message.message,\n            \"icon\": \"http://qnimate.com/wp-content/uploads/2014/07/web-notification-api-300x150.jpg\"\n          });\n          notification.onclick = function () {\n            window.focus();\n          };\n          this.notificationSound.play();\n        }\n      }\n    }\n  }, {\n    key: 'messageUpdatedAction',\n    value: function messageUpdatedAction(channel, message) {\n      var targetBoard = this.chatSection.getChatBoard(channel.url);\n      if (targetBoard) {\n        var channelSet = this.getChannelSet(channel.url);\n        var newMessages = channelSet.message.map(function (msg) {\n          if (msg.messageId === message.messageId) {\n            return message;\n          } else {\n            return msg;\n          }\n        });\n        channelSet.message = newMessages;\n\n        var lastMessage = (0, _utils.getLastItem)(channelSet.message);\n        if (lastMessage.messageId === message.messageId) {\n          var target = this.listBoard.getChannelItem(channel.url);\n          if (!target) {\n            target = this.createChannelItem(channel);\n            this.listBoard.checkEmptyList();\n          }\n          this.listBoard.addListOnFirstIndex(target);\n          this.listBoard.setChannelLastMessage(channel.url, message.isFileMessage() ? (0, _utils.xssEscape)(message.name) : (0, _utils.xssEscape)(message.message));\n        }\n        var updatedMessage = document.getElementById('' + message.messageId).querySelector('div>div>div.text');\n        if (updatedMessage) {\n          updatedMessage.innerHTML = message.message;\n        }\n      }\n    }\n  }, {\n    key: 'messageDeletedAction',\n    value: function messageDeletedAction(channel, messageId) {\n      var targetBoard = this.chatSection.getChatBoard(channel.url);\n      if (targetBoard) {\n        var channelSet = this.getChannelSet(channel.url);\n        var lastMessage = (0, _utils.getLastItem)(channelSet.message);\n        if (lastMessage.messageId.toString() === messageId.toString()) {\n          channelSet.message.pop();\n          lastMessage = (0, _utils.getLastItem)(channelSet.message);\n          var target = this.listBoard.getChannelItem(channel.url);\n          if (!target) {\n            target = this.createChannelItem(channel);\n            this.listBoard.checkEmptyList();\n          }\n          this.listBoard.addListOnFirstIndex(target);\n          this.listBoard.setChannelLastMessage(channel.url, lastMessage.isFileMessage() ? (0, _utils.xssEscape)(lastMessage.name) : (0, _utils.xssEscape)(lastMessage.message));\n        } else {\n          var newMessages = channelSet.message.filter(function (msg) {\n            return msg.messageId.toString() !== messageId.toString();\n          });\n          channelSet.message = newMessages;\n        }\n\n        var updatedMessage = document.getElementById('' + messageId);\n        updatedMessage.remove();\n      }\n    }\n  }, {\n    key: 'setUserList',\n    value: function setUserList(target, userList) {\n      var _this5 = this;\n\n      var userContent = target.userContent;\n      this.chatSection.createUserList(userContent);\n      for (var i = 0; i < userList.length; i++) {\n        var user = userList[i];\n        if (!this.sb.isCurrentUser(user)) {\n          (function () {\n            var item = _this5.chatSection.createUserListItem(user);\n            _this5.chatSection.addClickEvent(item, function () {\n              (0, _utils.hasClass)(item.select, _consts.className.ACTIVE) ? (0, _utils.removeClass)(item.select, _consts.className.ACTIVE) : (0, _utils.addClass)(item.select, _consts.className.ACTIVE);\n              var selectedUserCount = _this5.chatSection.getSelectedUserIds(userContent.list).length;\n              _this5.chatSection.updateChatTop(target, selectedUserCount > 9 ? _consts.MAX_COUNT : selectedUserCount.toString(), null);\n              selectedUserCount > 0 ? (0, _utils.removeClass)(target.startBtn, _consts.className.DISABLED) : (0, _utils.addClass)(target.startBtn, _consts.className.DISABLED);\n            });\n            userContent.list.appendChild(item);\n          })();\n        }\n      }\n      this.chatSection.addUserListScrollEvent(target, function () {\n        _this5.sb.getUserList(function (userList) {\n          _this5.setUserList(target, userList);\n        });\n      });\n    }\n  }, {\n    key: 'getChannelList',\n    value: function getChannelList() {\n      var _this6 = this;\n\n      var _list = this.listBoard.list;\n      var _spinner = this.spinner;\n      this.sb.getChannelList(function (channelList) {\n        if (_list.lastElementChild == _spinner.self) {\n          _spinner.remove(_list);\n        }\n        channelList.forEach(function (channel) {\n          var item = _this6.createChannelItem(channel);\n          _list.appendChild(item);\n        });\n        _this6.updateUnreadMessageCount();\n        _this6.listBoard.checkEmptyList();\n      });\n    }\n  }, {\n    key: 'createChannelItem',\n    value: function createChannelItem(channel) {\n      var _this7 = this;\n\n      var item = this.listBoard.createChannelItem(channel.url, channel.coverUrl, this.sb.getNicknamesString(channel), this.sb.getMessageTime(channel.lastMessage), this.sb.getLastMessage(channel), this.sb.getChannelUnreadCount(channel));\n      this.listBoard.addChannelClickEvent(item, function () {\n        _this7.closePopup();\n        var channelUrl = item.getAttribute('data-channel-url');\n        var openChatBoard = _this7.chatSection.getChatBoard(channelUrl);\n        if (!openChatBoard) {\n          var newChat = _this7.chatSection.getChatBoard(NEW_CHAT_BOARD_ID);\n          if (newChat) {\n            _this7.chatSection.closeChatBoard(newChat);\n          }\n          _this7._connectChannel(channelUrl);\n        }\n      });\n      return item;\n    }\n  }, {\n    key: 'closePopup',\n    value: function closePopup() {\n      this.closeMemberPopup();\n      this.closeInvitePopup();\n    }\n  }, {\n    key: 'closeMemberPopup',\n    value: function closeMemberPopup() {\n      this.chatSection.removeMemberPopup();\n      this.popup.closeMemberPopup();\n    }\n  }, {\n    key: 'closeInvitePopup',\n    value: function closeInvitePopup() {\n      this.chatSection.removeInvitePopup();\n      this.popup.closeInvitePopup();\n      this.sb.userListQuery = null;\n    }\n  }, {\n    key: 'showChannel',\n    value: function showChannel(channelUrl) {\n      this._connectChannel(channelUrl, false);\n    }\n  }, {\n    key: '_connectChannel',\n    value: function _connectChannel(channelUrl, doNotCall) {\n      var _this8 = this;\n\n      var chatBoard = this.chatSection.createChatBoard(channelUrl, doNotCall);\n      if (!doNotCall) {\n        this.responsiveChatSection(channelUrl, true);\n      }\n      this.chatSection.addClickEvent(chatBoard.closeBtn, function () {\n        _this8.chatSection.closeChatBoard(chatBoard);\n        _this8.closePopup();\n        _this8.removeChannelSet(channelUrl);\n        _this8.responsiveChatSection();\n      });\n      this.chatSection.addClickEvent(chatBoard.leaveBtn, function () {\n        _this8.chatSection.addLeavePopup(chatBoard);\n        _this8.chatSection.setLeaveBtnClickEvent(chatBoard.leavePopup.leaveBtn, function () {\n          _this8.spinner.insert(chatBoard.leavePopup.leaveBtn);\n          (0, _utils.addClass)(chatBoard.leavePopup.leaveBtn, _consts.className.DISABLED);\n          var channelSet = _this8.getChannelSet(channelUrl);\n          if (channelSet) {\n            _this8.sb.channelLeave(channelSet.channel, function () {\n              chatBoard.removeChild(chatBoard.leavePopup);\n              (0, _utils.removeClass)(chatBoard.leavePopup.leaveBtn, _consts.className.DISABLED);\n              chatBoard.leavePopup = null;\n              chatBoard.closeBtn.click();\n            });\n          } else {\n            _this8.chatSection.closeChatBoard(chatBoard);\n          }\n        });\n      });\n      this.chatSection.addClickEvent(chatBoard.memberBtn, function () {\n        if ((0, _utils.hasClass)(chatBoard.memberBtn, _consts.className.ACTIVE)) {\n          _this8.closeMemberPopup();\n        } else {\n          _this8.closeMemberPopup();\n          _this8.closeInvitePopup();\n          (0, _utils.addClass)(chatBoard.memberBtn, _consts.className.ACTIVE);\n          var index = _this8.chatSection.indexOfChatBord(channelUrl);\n          _this8.popup.showMemberPopup(_this8.chatSection.self, index);\n          var channelSet = _this8.getChannelSet(channelUrl);\n          _this8.popup.updateCount(_this8.popup.memberPopup.count, channelSet.channel.memberCount);\n          for (var i = 0; i < channelSet.channel.members.length; i++) {\n            var member = channelSet.channel.members[i];\n            var item = _this8.popup.createMemberItem(member, false, _this8.sb.isCurrentUser(member));\n            _this8.popup.memberPopup.list.appendChild(item);\n          }\n        }\n      });\n      this.chatSection.addClickEvent(chatBoard.inviteBtn, function () {\n        var _getUserList = function _getUserList(memberIds, loadmore) {\n          _this8.sb.getUserList(function (userList) {\n            if (!loadmore) {\n              _this8.spinner.remove(_this8.popup.invitePopup.list);\n            }\n            for (var i = 0; i < userList.length; i++) {\n              var user = userList[i];\n              if (memberIds.indexOf(user.userId) < 0) {\n                (function () {\n                  var item = _this8.popup.createMemberItem(user, true);\n                  _this8.popup.addClickEvent(item, function () {\n                    (0, _utils.hasClass)(item.select, _consts.className.ACTIVE) ? (0, _utils.removeClass)(item.select, _consts.className.ACTIVE) : (0, _utils.addClass)(item.select, _consts.className.ACTIVE);\n                    var selectedUserCount = _this8.popup.getSelectedUserIds(_this8.popup.invitePopup.list).length;\n                    _this8.popup.updateCount(_this8.popup.invitePopup.count, selectedUserCount);\n                    selectedUserCount > 0 ? (0, _utils.removeClass)(_this8.popup.invitePopup.inviteBtn, _consts.className.DISABLED) : (0, _utils.addClass)(_this8.popup.invitePopup.inviteBtn, _consts.className.DISABLED);\n                  });\n                  _this8.popup.invitePopup.list.appendChild(item);\n                })();\n              }\n            }\n          });\n        };\n\n        if ((0, _utils.hasClass)(chatBoard.inviteBtn, _consts.className.ACTIVE)) {\n          _this8.closeInvitePopup();\n        } else {\n          _this8.closeInvitePopup();\n          _this8.closeMemberPopup();\n          (0, _utils.addClass)(chatBoard.inviteBtn, _consts.className.ACTIVE);\n          var index = _this8.chatSection.indexOfChatBord(channelUrl);\n          _this8.popup.showInvitePopup(_this8.chatSection.self, index);\n          _this8.spinner.insert(_this8.popup.invitePopup.list);\n          var channelSet = _this8.getChannelSet(channelUrl);\n          var memberIds = channelSet.channel.members.map(function (member) {\n            return member.userId;\n          });\n          _getUserList(memberIds);\n\n          _this8.popup.addClickEvent(_this8.popup.invitePopup.inviteBtn, function () {\n            if (!(0, _utils.hasClass)(_this8.popup.invitePopup.inviteBtn, _consts.className.DISABLED)) {\n              (0, _utils.addClass)(_this8.popup.invitePopup.inviteBtn, _consts.className.DISABLED);\n              _this8.spinner.insert(_this8.popup.invitePopup.inviteBtn);\n              var selectedUserIds = _this8.popup.getSelectedUserIds(_this8.popup.invitePopup.list);\n              var _channelSet = _this8.getChannelSet(channelUrl);\n              _this8.sb.inviteMember(_channelSet.channel, selectedUserIds, function () {\n                _this8.spinner.remove(_this8.popup.invitePopup.inviteBtn);\n                _this8.closeInvitePopup();\n                _this8.listBoard.setChannelTitle(_channelSet.channel.url, _this8.sb.getNicknamesString(_channelSet.channel));\n                _this8.updateChannelInfo(chatBoard, _channelSet.channel);\n              });\n            }\n          });\n\n          _this8.popup.addScrollEvent(function () {\n            _getUserList(memberIds, true);\n          });\n        }\n      });\n      this.spinner.insert(chatBoard.content);\n      this.sb.getChannelInfo(channelUrl, function (channel) {\n        _this8.updateChannelInfo(chatBoard, channel);\n        var channelSet = _this8.getChannelSet(channel);\n        _this8.getMessageList(channelSet, chatBoard, false, function () {\n          _this8.chatScrollEvent(chatBoard, channelSet);\n        });\n        channel.markAsRead();\n        _this8.updateUnreadMessageCount(channel);\n\n        var listItem = _this8.listBoard.getChannelItem(channelUrl);\n        if (!listItem) {\n          listItem = _this8.createChannelItem(channel);\n          _this8.listBoard.list.insertBefore(listItem, _this8.listBoard.list.firstChild);\n        }\n      });\n    }\n  }, {\n    key: 'updateChannelInfo',\n    value: function updateChannelInfo(target, channel) {\n      this.chatSection.updateChatTop(target, this.sb.getMemberCount(channel), this.sb.getNicknamesString(channel));\n    }\n  }, {\n    key: 'updateUnreadMessageCount',\n    value: function updateUnreadMessageCount(channel) {\n      var _this9 = this;\n\n      this.sb.getTotalUnreadCount(function (unreadCount) {\n        _this9.widgetBtn.setUnreadCount(unreadCount);\n      });\n\n      if (channel) {\n        this.listBoard.setChannelUnread(channel.url, channel.unreadMessageCount);\n      }\n    }\n  }, {\n    key: 'getMessageList',\n    value: function getMessageList(channelSet, target, loadmore, scrollEvent) {\n      var _this10 = this;\n\n      this.sb.getMessageList(channelSet, function (messageList) {\n        var messageItems = messageList.slice();\n        var tempTime = void 0;\n        for (var index = 0; index < messageList.length; index++) {\n          var message = messageList[index];\n          loadmore ? channelSet.message.unshift(message) : channelSet.message.push(message);\n\n          var time = _this10.sb.getMessageTime(message);\n          if (time.indexOf(':') > -1) {\n            time = TIME_STRING_TODAY;\n          }\n          if (tempTime != time) {\n            tempTime = time;\n            (0, _utils.insertMessageInList)(messageItems, messageItems.indexOf(message), new _this10.timeMessage(time));\n          }\n        }\n\n        var scrollToBottom = false;\n        if (!loadmore) {\n          if (tempTime != TIME_STRING_TODAY) {\n            messageItems.push(new _this10.timeMessage(TIME_STRING_TODAY));\n          }\n          scrollToBottom = true;\n          _this10.spinner.remove(target.content);\n          _this10.chatSection.createMessageContent(target);\n          _this10.chatSection.addFileSelectEvent(target.file, function () {\n            var file = target.file.files[0];\n            _this10.sb.sendFileMessage(channelSet.channel, file, function (message) {\n              _this10.messageReceivedAction(channelSet.channel, message);\n            });\n          });\n          _this10.chatSection.addKeyDownEvent(target.input, function (event) {\n            if (event.keyCode == KEY_DOWN_KR) {\n              _this10.chatSection.textKr = target.input.textContent;\n            }\n\n            if (event.keyCode == KEY_DOWN_ENTER && !event.shiftKey) {\n              var textMessage = target.input.textContent || _this10.chatSection.textKr;\n              if (!(0, _utils.isEmptyString)(textMessage.trim())) {\n                _this10.sb.sendTextMessage(channelSet.channel, textMessage, function (message) {\n                  _this10.messageReceivedAction(channelSet.channel, message);\n                });\n              }\n              _this10.chatSection.clearInputText(target.input, channelSet.channel.url);\n              _this10.chatSection.textKr = '';\n              channelSet.channel.endTyping();\n            } else {\n              channelSet.channel.startTyping();\n            }\n            _this10.chatSection.responsiveHeight(channelSet.channel.url);\n          });\n          _this10.chatSection.addKeyUpEvent(target.input, function (event) {\n            var isBottom = _this10.chatSection.isBottom(target.messageContent, target.list);\n            _this10.chatSection.responsiveHeight(channelSet.channel.url);\n            if (event.keyCode == KEY_DOWN_ENTER && !event.shiftKey) {\n              _this10.chatSection.clearInputText(target.input, channelSet.channel.url);\n              if (isBottom) {\n                _this10.chatSection.scrollToBottom(target.messageContent);\n              }\n            } else {\n              var textMessage = target.input.textContent || _this10.chatSection.textKr;\n              if (textMessage.length === 0) {\n                channelSet.channel.endTyping();\n              }\n            }\n          });\n          _this10.chatSection.addPasteEvent(target.input, function (event) {\n            var clipboardData;\n            var pastedData;\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            clipboardData = event.clipboardData || window.clipboardData;\n            pastedData = clipboardData.getData('Text');\n\n            target.input.textContent += pastedData;\n          });\n        }\n        if (scrollEvent) {\n          scrollEvent();\n        }\n        _this10.setMessageItem(channelSet.channel, target, messageItems, loadmore, scrollToBottom);\n      });\n    }\n  }, {\n    key: 'setMessageItem',\n    value: function setMessageItem(channel, target, messageList, loadmore, scrollToBottom, lastMessage) {\n      var firstChild = target.list.firstChild;\n      var addScrollHeight = 0;\n      var prevMessage = void 0;\n      var newMessage = void 0;\n      if (lastMessage && messageList[0] && !messageList[0].isTimeMessage) {\n        prevMessage = lastMessage;\n      }\n      for (var i = 0; i < messageList.length; i++) {\n        var message = messageList[i];\n        if (message.isTimeMessage && message.isTimeMessage()) {\n          newMessage = this.chatSection.createMessageItemTime(message.time);\n          prevMessage = null;\n        } else {\n          var isContinue = false;\n          if (message.isAdminMessage()) {\n            newMessage = this.chatSection.createAdminMessageItem(message);\n          } else {\n            // isUserMessage() || isFileMessage()\n            isContinue = prevMessage && prevMessage.sender ? message.sender.userId == prevMessage.sender.userId : false;\n            var isCurrentUser = this.sb.isCurrentUser(message.sender);\n            var unreadCount = channel.getReadReceipt(message);\n            if (message.isUserMessage()) {\n              newMessage = this.chatSection.createMessageItem(message, isCurrentUser, isContinue, unreadCount);\n            } else if (message.isFileMessage()) {\n              newMessage = this.chatSection.createMessageItem(message, isCurrentUser, isContinue, unreadCount);\n            }\n          }\n          prevMessage = message;\n        }\n\n        if (loadmore) {\n          target.list.insertBefore(newMessage, firstChild);\n          addScrollHeight += (0, _utils.getFullHeight)(newMessage);\n        } else {\n          target.list.appendChild(newMessage);\n        }\n      }\n\n      if (loadmore) {\n        target.messageContent.scrollTop = addScrollHeight;\n      } else if (scrollToBottom) {\n        this.chatSection.scrollToBottom(target.messageContent);\n      }\n    }\n  }, {\n    key: 'chatScrollEvent',\n    value: function chatScrollEvent(target, channelSet) {\n      var _this11 = this;\n\n      this.chatSection.addScrollEvent(target.messageContent, function () {\n        if (target.messageContent.scrollTop == 0) {\n          _this11.getMessageList(channelSet, target, true);\n        }\n      });\n    }\n  }, {\n    key: 'getChannelSet',\n    value: function getChannelSet(channel, isLast) {\n      var isObject = true;\n      if ((typeof channel === 'undefined' ? 'undefined' : _typeof(channel)) === _consts.TYPE_STRING || channel instanceof String) {\n        isObject = false;\n      }\n\n      var channelSet = this.activeChannelSetList.filter(function (obj) {\n        return isObject ? obj.channel == channel : obj.channel.url == channel;\n      })[0];\n\n      if (!channelSet && isObject) {\n        channelSet = {\n          'channel': channel,\n          'query': channel.createPreviousMessageListQuery(),\n          'message': []\n        };\n        isLast ? this.activeChannelSetList.push(channelSet) : this.activeChannelSetList.unshift(channelSet);\n      }\n\n      return channelSet;\n    }\n  }, {\n    key: 'removeChannelSet',\n    value: function removeChannelSet(channel) {\n      var isObject = true;\n      if ((typeof channel === 'undefined' ? 'undefined' : _typeof(channel)) === _consts.TYPE_STRING || channel instanceof String) {\n        isObject = false;\n      }\n\n      this.activeChannelSetList = this.activeChannelSetList.filter(function (obj) {\n        return isObject ? obj.channel != channel : obj.channel.url != channel;\n      });\n    }\n  }, {\n    key: 'toggleBoard',\n    value: function toggleBoard(isShow) {\n      if (isShow) {\n        (0, _utils.hide)((0, _utils.addClass)((0, _utils.removeClass)(this.widgetBtn.self, _consts.className.FADE_IN), _consts.className.FADE_OUT));\n        (0, _utils.show)((0, _utils.addClass)((0, _utils.removeClass)(this.listBoard.self, _consts.className.FADE_OUT), _consts.className.FADE_IN));\n      } else {\n        (0, _utils.hide)((0, _utils.addClass)((0, _utils.removeClass)(this.listBoard.self, _consts.className.FADE_IN), _consts.className.FADE_OUT));\n        (0, _utils.show)((0, _utils.addClass)((0, _utils.removeClass)(this.widgetBtn.self, _consts.className.FADE_OUT), _consts.className.FADE_IN));\n      }\n    }\n  }]);\n\n  return SBWidget;\n}();\n\nwindow.sbWidget = new SBWidget();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9iYXNlNjQtanMvaW5kZXguanM/ZTA0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKFxuICAgICAgdWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKVxuICAgICkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vYmFzZTY0LWpzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(10)\nvar ieee754 = __webpack_require__(14)\nvar isArray = __webpack_require__(15)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(19)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(13)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, "@-webkit-keyframes sb-fade-in{0%{opacity:0}to{opacity:1}}@-moz-keyframes sb-fade-in{0%{opacity:0}to{opacity:1}}@-o-keyframes sb-fade-in{0%{opacity:0}to{opacity:1}}@-ms-keyframes sb-fade-in{0%{opacity:0}to{opacity:1}}@keyframes sb-fade-in{0%{opacity:0}to{opacity:1}}@-webkit-keyframes sb-fade-out{0%{opacity:1}to{opacity:0}}@-moz-keyframes sb-fade-out{0%{opacity:1}to{opacity:0}}@-o-keyframes sb-fade-out{0%{opacity:1}to{opacity:0}}@-ms-keyframes sb-fade-out{0%{opacity:1}to{opacity:0}}@keyframes sb-fade-out{0%{opacity:1}to{opacity:0}}@-webkit-keyframes sb-loader{0%,80%,to{-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-moz-keyframes sb-loader{0%,80%,to{-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-o-keyframes sb-loader{0%,80%,to{-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@-ms-keyframes sb-loader{0%,80%,to{-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}@keyframes sb-loader{0%,80%,to{-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}}#sb_widget{width:auto;height:auto;z-index:99990;width:60px;height:60px;position:fixed;bottom:0;right:20px;font-family:Lato;font-weight:400;-webkit-font-smoothing:antialiased}#sb_widget,#sb_widget .sb-fade-in{margin:0;padding:0;font-size:100%;line-height:1;box-sizing:initial}#sb_widget .sb-fade-in{width:auto;height:auto;-webkit-animation:sb-fade-in .5s;-moz-animation:sb-fade-in .5s;-o-animation:sb-fade-in .5s;-ms-animation:sb-fade-in .5s;animation:sb-fade-in .5s}#sb_widget .sb-fade-out{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;-webkit-animation:sb-fade-out .5s;-moz-animation:sb-fade-out .5s;-o-animation:sb-fade-out .5s;-ms-animation:sb-fade-out .5s;animation:sb-fade-out .5s}#sb_widget .chat-section .content .sb-spinner,#sb_widget .sb-spinner{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;text-align:center}#sb_widget .chat-section .content .sb-spinner div,#sb_widget .sb-spinner div{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;width:12px;height:12px;background-color:#a5b3cd;border-radius:50%;-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%;-webkit-animation:sb-loader 1.4s infinite ease-in-out both;-moz-animation:sb-loader 1.4s infinite ease-in-out both;-o-animation:sb-loader 1.4s infinite ease-in-out both;-ms-animation:sb-loader 1.4s infinite ease-in-out both;animation:sb-loader 1.4s infinite ease-in-out both}#sb_widget .chat-section .content .sb-spinner :first-child,#sb_widget .sb-spinner :first-child{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;-webkit-animation-delay:-.32s;-moz-animation-delay:-.32s;-o-animation-delay:-.32s;-ms-animation-delay:-.32s;animation-delay:-.32s}#sb_widget .chat-section .content .sb-spinner :nth-child(2),#sb_widget .sb-spinner :nth-child(2){margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin:0 6px;-webkit-animation-delay:-.16s;-moz-animation-delay:-.16s;-o-animation-delay:-.16s;-ms-animation-delay:-.16s;animation-delay:-.16s}#sb_widget .ic-login{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/icon-open-nonmember.svg\\")}#sb_widget .ic-connected,#sb_widget .ic-login{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-connected{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/icon-open-member.svg\\")}#sb_widget .ic-minimize{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-minimize-default.svg\\")}#sb_widget .ic-minimize,#sb_widget .ic-minimize:hover{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-minimize:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-minimize-over.svg\\")}#sb_widget .ic-option{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-option-default.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-option.active,#sb_widget .ic-option:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-option-over.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-new-chat{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-new-chat-default.svg\\")}#sb_widget .ic-new-chat,#sb_widget .ic-new-chat:hover{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-new-chat:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-new-chat-over.svg\\")}#sb_widget .ic-close{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-close-default.svg\\")}#sb_widget .ic-close,#sb_widget .ic-close:hover{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-close:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-close-over.svg\\")}#sb_widget .ic-close.active{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-close-select.svg\\")}#sb_widget .ic-close.active,#sb_widget .ic-members{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-members{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-list-default.svg\\")}#sb_widget .ic-members:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-list-over.svg\\")}#sb_widget .ic-members.active,#sb_widget .ic-members:hover{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-members.active{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-list-select.svg\\")}#sb_widget .ic-invite{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-add-default.svg\\")}#sb_widget .ic-invite,#sb_widget .ic-invite:hover{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-invite:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-add-over.svg\\")}#sb_widget .ic-invite.active{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-friend-add-select.svg\\")}#sb_widget .ic-invite.active,#sb_widget .ic-leave{background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .ic-leave{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-leave-chat-normal.svg\\")}#sb_widget .ic-leave:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-leave-chat-over.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .channel-board .board-top .btn .tooltip,#sb_widget .channel-board .board-top .btn:hover>.tooltip,#sb_widget .chat-section .top .btn.ic-invite .tooltip,#sb_widget .chat-section .top .btn.ic-leave .tooltip,#sb_widget .chat-section .top .btn.ic-members .tooltip,#sb_widget .chat-section .top .btn:hover>.tooltip,#sb_widget .tooltip{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;background-color:#000;text-align:center;z-index:1;font-size:12px;color:#fff;padding:0 12px;height:32px;line-height:32px}#sb_widget .channel-board .board-top .btn .tooltip:after,#sb_widget .channel-board .board-top .btn:hover>.tooltip:after,#sb_widget .chat-section .top .btn.ic-invite .tooltip:after,#sb_widget .chat-section .top .btn.ic-leave .tooltip:after,#sb_widget .chat-section .top .btn.ic-members .tooltip:after,#sb_widget .chat-section .top .btn:hover>.tooltip:after,#sb_widget .tooltip:after{content:\\" \\";position:absolute;top:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:#000 transparent transparent}#sb_widget .widget{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;z-index:99991;position:absolute;right:0;bottom:20px;width:60px;height:60px;cursor:pointer;border-radius:50%;-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%;-webkit-box-shadow:0 1px 6px rgba(0,0,0,.06),0 2px 32px rgba(0,0,0,.16);-moz-box-shadow:0 1px 6px rgba(0,0,0,.06),0 2px 32px rgba(0,0,0,.16);box-shadow:0 1px 6px rgba(0,0,0,.06),0 2px 32px rgba(0,0,0,.16);background-color:#896bf5}#sb_widget .widget:hover{background-color:#775ae0;-webkit-box-shadow:0 1px 9px rgba(0,0,0,.28),0 2px 32px rgba(0,0,0,.16);-moz-box-shadow:0 1px 9px rgba(0,0,0,.28),0 2px 32px rgba(0,0,0,.16);box-shadow:0 1px 9px rgba(0,0,0,.28),0 2px 32px rgba(0,0,0,.16)}#sb_widget .widget .notification{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;position:absolute;top:0;right:0;width:18px;height:18px;background-color:#fb6094;color:#fff;font-weight:700;font-size:12px;line-height:18px;text-align:center;border-radius:50%;-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%;-webkit-box-shadow:0 1px 5px rgba(0,0,0,.28);-moz-box-shadow:0 1px 5px rgba(0,0,0,.28);box-shadow:0 1px 5px rgba(0,0,0,.28)}#sb_widget .channel-board .content.channel-list ul .empty-item>.new-chat-btn,#sb_widget .channel-board .content .login-btn,#sb_widget .chat-section .chat-board .leave-popup>div .cancel-btn,#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn,#sb_widget .chat-section .content .content-bottom .new-chat-btn,#sb_widget .popup .popup-bottom .invite-btn,#sb_widget .sb-common-btn{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;padding:0 16px;border:1px solid #38b349;background-color:#3fcc52;color:#fff;cursor:pointer;border-radius:3px;-webkit-border-radius:3px;-moz-border-radius:3px;-ms-border-radius:3px;-o-border-radius:3px;-webkit-box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75);-moz-box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75);box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75)}#sb_widget .channel-board .content.channel-list ul .empty-item>.new-chat-btn:hover,#sb_widget .channel-board .content .login-btn:hover,#sb_widget .chat-section .chat-board .leave-popup>div .cancel-btn:hover,#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn:hover,#sb_widget .chat-section .content .content-bottom .new-chat-btn:hover,#sb_widget .popup .popup-bottom .invite-btn:hover,#sb_widget .sb-common-btn:hover{-webkit-box-shadow:0 1px 2px rgba(0,0,0,.25),0 1px hsla(0,0%,100%,.75);-moz-box-shadow:0 1px 2px rgba(0,0,0,.25),0 1px hsla(0,0%,100%,.75);box-shadow:0 1px 2px rgba(0,0,0,.25),0 1px hsla(0,0%,100%,.75)}#sb_widget .channel-board .content.channel-list ul .empty-item>.disabled.new-chat-btn,#sb_widget .channel-board .content .disabled.login-btn,#sb_widget .chat-section .chat-board .leave-popup>div .disabled.cancel-btn,#sb_widget .chat-section .chat-board .leave-popup>div .disabled.leave-btn,#sb_widget .chat-section .content .content-bottom .disabled.new-chat-btn,#sb_widget .popup .popup-bottom .disabled.invite-btn,#sb_widget .sb-common-btn.disabled{background-color:#98dc99;border:1px solid #95d296}#sb_widget .channel-board .content.channel-list ul .empty-item>.disabled.new-chat-btn:hover,#sb_widget .channel-board .content .disabled.login-btn:hover,#sb_widget .chat-section .chat-board .leave-popup>div .disabled.cancel-btn:hover,#sb_widget .chat-section .chat-board .leave-popup>div .disabled.leave-btn:hover,#sb_widget .chat-section .content .content-bottom .disabled.new-chat-btn:hover,#sb_widget .popup .popup-bottom .disabled.invite-btn:hover,#sb_widget .sb-common-btn.disabled:hover{-webkit-box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75);-moz-box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75);box-shadow:0 1px 2px rgba(0,0,0,.05),0 1px hsla(0,0%,100%,.75)}#sb_widget .channel-board{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;z-index:99992;position:absolute;bottom:0;right:0;width:280px;height:462px;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.3);-moz-box-shadow:0 3px 6px rgba(0,0,0,.3);box-shadow:0 3px 6px rgba(0,0,0,.3)}#sb_widget .channel-board .board-top{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:36px;background-color:#896bf5;padding:0 12px;border-bottom:1px solid #795fdc}#sb_widget .channel-board .board-top .title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;float:left;font-size:16px;color:#ebe6ff;letter-spacing:.85px;line-height:36px}#sb_widget .channel-board .board-top .btn{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;float:right;position:relative;top:50%;width:24px;height:26px;cursor:pointer;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .channel-board .board-top .btn:hover>.tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-invite .btn:hover>.tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-leave .btn:hover>.tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-members .btn:hover>.tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn:hover>.tooltip{font-size:12px;display:block}#sb_widget .channel-board .board-top .btn .tooltip,#sb_widget .channel-board .board-top .btn:hover>.tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-invite .tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-leave .tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn.ic-members .tooltip,#sb_widget .channel-board .board-top .chat-section .top .btn:hover>.tooltip,#sb_widget .chat-section .top .channel-board .board-top .btn.ic-invite .tooltip,#sb_widget .chat-section .top .channel-board .board-top .btn.ic-leave .tooltip,#sb_widget .chat-section .top .channel-board .board-top .btn.ic-members .tooltip{width:74px;position:absolute;top:-37px;left:-37px}#sb_widget .channel-board .board-top .btn .option-menu{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;position:absolute;top:25px;right:-35px;width:140px;height:42px;background-color:transparent;cursor:pointer}#sb_widget .channel-board .board-top .btn .option-menu .option-content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;position:absolute;bottom:0;width:calc(100% - 32px);height:32px;background-color:#fff;font-size:13px;color:#485874;line-height:32px;padding:0 16px;border-radius:3px;-webkit-border-radius:3px;-moz-border-radius:3px;-ms-border-radius:3px;-o-border-radius:3px;-webkit-box-shadow:1px 1px 14px 3px rgba(0,0,0,.3);-moz-box-shadow:1px 1px 14px 3px rgba(0,0,0,.3);box-shadow:1px 1px 14px 3px rgba(0,0,0,.3)}#sb_widget .channel-board .board-top .btn .option-menu .option-content:before{content:\\" \\";position:absolute;bottom:100%;left:calc(50% + 21px);margin-left:-5px;border-width:7px;border-style:solid;border-color:transparent transparent #fff}#sb_widget .channel-board .content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;height:426px;background-color:#fff}#sb_widget .channel-board .content .user-id{padding:0;padding-top:30px}#sb_widget .channel-board .content .nickname,#sb_widget .channel-board .content .user-id{margin:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%}#sb_widget .channel-board .content .nickname{padding:0;padding-top:12px}#sb_widget .channel-board .content .title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;font-size:11px;color:#67769a;padding-bottom:6px}#sb_widget .channel-board .content .input{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(98% - 16px);height:32px;border:1px solid #e2e7eb;background-color:#f8f9fa;font-size:13px;color:#3a414d;padding:0 8px;border-radius:3px;-webkit-border-radius:3px;-moz-border-radius:3px;-ms-border-radius:3px;-o-border-radius:3px}#sb_widget .channel-board .content .input:focus{outline:none;border:1px solid #7b5fd9;-webkit-box-shadow:0 0 4px #bdb0ff;-moz-box-shadow:0 0 4px #bdb0ff;box-shadow:0 0 4px #bdb0ff}#sb_widget .channel-board .content .login-btn{display:inline-block;position:absolute;left:50%;margin-top:20px;height:32px;width:66px;text-align:center;line-height:32px;font-size:14px;-webkit-transform:translate(-50%);-moz-transform:translate(-50%);-ms-transform:translate(-50%);-o-transform:translate(-50%);transform:translate(-50%)}#sb_widget .channel-board .content .login-btn .sb-spinner{margin-top:7px}#sb_widget .channel-board .content .login-btn .sb-spinner div{width:8px;height:8px;margin-top:4px;background-color:#35a300}#sb_widget .channel-board .content .login-btn .sb-spinner :nth-child(2){margin:0 4px}#sb_widget .channel-board .content.login-form{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:calc(100% - 37px);padding:0 12px}#sb_widget .channel-board .content.channel-list{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;overflow-y:scroll;overflow-x:hidden;width:100%;height:calc(100% - 37px)}#sb_widget .channel-board .content.channel-list ul{font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;margin:0;padding:0;list-style-type:none}#sb_widget .channel-board .content.channel-list ul li{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:48px;padding:0 12px;background-color:#fff;cursor:pointer}#sb_widget .channel-board .content.channel-list ul li:hover,#sb_widget .channel-board .content.channel-list ul li:hover .content{background-color:#f5f8fa}#sb_widget .channel-board .content.channel-list ul li .item{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:calc(100% - 12px - 1px);padding:6px 0;border-bottom:1px solid #e5e5e5}#sb_widget .channel-board .content.channel-list ul .image{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;width:36px;height:100%;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/thumnail-channel-01.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .channel-board .content.channel-list ul .content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:right;width:calc(100% - 36px - 8px);height:100%;margin-left:8px}#sb_widget .channel-board .content.channel-list ul .content-top{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:50%}#sb_widget .channel-board .content.channel-list ul .content-top .title{margin:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;padding:0;float:left;width:125px;height:18px;font-size:14px;color:#444;line-height:18px;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}#sb_widget .channel-board .content.channel-list ul .content-top time{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:right;font-size:12px;line-height:18px;color:#a5b3cd}#sb_widget .channel-board .content.channel-list ul .content-bottom{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:50%}#sb_widget .channel-board .content.channel-list ul .content-bottom .last-message{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;width:170px;height:18px;font-size:13px;color:#a5b3cd;line-height:18px;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}#sb_widget .channel-board .content.channel-list ul .content-bottom span{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;float:right;width:18px;height:18px;background-color:#fb6094;font-weight:700;font-size:12px;color:#fff;line-height:18px;text-align:center;border-radius:50%;-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%}#sb_widget .channel-board .content.channel-list ul .empty-item{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;text-align:center}#sb_widget .channel-board .content.channel-list ul .empty-item>.title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin:130px 0 16px;font-size:14px;color:#67769a}#sb_widget .channel-board .content.channel-list ul .empty-item>.new-chat-btn{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:block;margin:0 auto;width:48px;height:30px;line-height:30px;padding:0 16px}#sb_widget .channel-board .content.channel-list .sb-spinner{position:relative;top:213px;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .channel-board .content.channel-list .sb-spinner div{width:12px;height:12px;margin-top:6px}#sb_widget .channel-board .content.channel-list .sb-spinner :nth-child(2){margin:0 6px}#sb_widget .chat-section{margin:0;padding:0;font-size:100%;line-height:1;height:auto;box-sizing:initial;z-index:99992;position:absolute;right:60px;bottom:0;width:auto;max-height:520px}#sb_widget .chat-section .chat-board{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin-top:40px;float:right;width:280px;height:426px;margin-right:20px;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.3);-moz-box-shadow:0 3px 6px rgba(0,0,0,.3);box-shadow:0 3px 6px rgba(0,0,0,.3)}#sb_widget .chat-section .chat-board .leave-popup{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:280px;height:100%;position:absolute;background-color:hsla(0,0%,100%,.9);z-index:1}#sb_widget .chat-section .chat-board .leave-popup>.popup-top{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin-top:130px;text-align:center;color:#67769a}#sb_widget .chat-section .chat-board .leave-popup>div{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin-top:16px;text-align:center}#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn{display:inline-block;padding:0 8px;width:52px;height:32px;line-height:32px}#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn .sb-spinner{line-height:32px}#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn .sb-spinner div{width:8px;height:8px;margin-top:4px;background-color:#35a300}#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn .sb-spinner :nth-child(2){margin:0 4px}#sb_widget .chat-section .chat-board .leave-popup>div .leave-btn.disabled{cursor:default}#sb_widget .chat-section .chat-board .leave-popup>div .cancel-btn{background-color:#f0f0f5;border-color:#e2e7eb;color:#67769a;margin-left:8px;display:inline-block;padding:0 8px;width:52px;height:32px;line-height:32px}#sb_widget .chat-section .top{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:35px;padding:0 12px;background-color:#f3f5f7;border-bottom:1px solid #e5e5e5;-webkit-box-shadow:0 1px 1px -2px rgba(0,0,0,.2);-moz-box-shadow:0 1px 1px -2px rgba(0,0,0,.2);box-shadow:0 1px 1px -2px rgba(0,0,0,.2)}#sb_widget .chat-section .top .title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;max-width:123px;font-size:13px;color:#444;line-height:35px;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}#sb_widget .chat-section .top .count{margin:0;font-size:100%;line-height:1;width:auto;height:auto;float:left;width:16px;height:16px;margin-left:8px;background-color:#d5d7d9;font-weight:700;font-size:10px;color:#67769a;text-align:center;line-height:16px}#sb_widget .chat-section .top .btn,#sb_widget .chat-section .top .count{padding:0;box-sizing:initial;position:relative;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .chat-section .top .btn{margin:0;font-size:100%;line-height:1;width:auto;height:auto;float:right;width:24px;height:26px;cursor:pointer}#sb_widget .chat-section .top .btn.ic-invite .btn:hover>.tooltip,#sb_widget .chat-section .top .btn.ic-leave .btn:hover>.tooltip,#sb_widget .chat-section .top .btn.ic-members .btn:hover>.tooltip,#sb_widget .chat-section .top .btn:hover>.tooltip,#sb_widget .chat-section .top .channel-board .board-top .btn:hover>.tooltip{display:block}#sb_widget .chat-section .top .btn.ic-leave{margin-right:3px}#sb_widget .chat-section .top .btn.ic-leave .tooltip{width:78px;position:absolute;top:-37px;left:-39px}#sb_widget .chat-section .top .btn.ic-members{margin:0 3px}#sb_widget .chat-section .top .btn.ic-members .tooltip{width:74px;position:absolute;top:-37px;left:-37px}#sb_widget .chat-section .top .btn.ic-invite .tooltip{width:78px;position:absolute;top:-37px;left:-39px}#sb_widget .chat-section .content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:calc(100% - 36px - 1px);background-color:#fff}#sb_widget .chat-section .content .sb-spinner{position:relative;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .chat-section .content .user-content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:calc(100% - 52px);background-color:#fff;overflow-y:scroll;overflow-x:hidden}#sb_widget .chat-section .content .user-content ul{font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;margin:0;padding:0;list-style-type:none}#sb_widget .chat-section .content .user-content ul li{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:44px;padding:0 12px;cursor:pointer}#sb_widget .chat-section .content .user-content ul li:hover{background-color:#f5f8fa}#sb_widget .chat-section .content .user-content .user-item{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;height:calc(100% - 12px - 1px);padding:6px 0;border-bottom:1px solid #e5e5e5}#sb_widget .chat-section .content .user-content .user-item .user-select{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;position:relative;top:50%;float:left;width:16px;height:16px;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%);background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-check-off.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .chat-section .content .user-content .user-item .user-select.active{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-check-on.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .chat-section .content .user-content .user-item .image{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;width:31px;height:31px;margin:0 8px;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/thumnail-member-01.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .chat-section .content .user-content .user-item .nickname{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;font-size:13px;color:#67769a;line-height:31px;max-width:70%;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}#sb_widget .chat-section .content .content-bottom{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 24px);height:28px;padding:12px;background-color:#f3f5f7;text-align:center;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.2);-moz-box-shadow:0 1px 1px rgba(0,0,0,.2);box-shadow:0 1px 1px rgba(0,0,0,.2)}#sb_widget .chat-section .content .content-bottom .new-chat-btn{display:inline-block;width:70px;height:26px;padding:0 12px;text-align:center;line-height:26px;font-size:13px;letter-spacing:.85px}#sb_widget .chat-section .content .content-bottom .new-chat-btn .sb-spinner div{width:8px;height:8px;margin-top:4px;background-color:#35a300}#sb_widget .chat-section .content .content-bottom .new-chat-btn .sb-spinner :nth-child(2){margin:0 4px}#sb_widget .chat-section .content .content-bottom .new-chat-btn.disabled{cursor:default}#sb_widget .chat-section .content .message-content{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 16px);height:328px;min-height:240px;max-height:328px;overflow-x:hidden;overflow-y:scroll;padding:0 8px 8px}#sb_widget .chat-section .content .typing{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none;width:calc(100% - 16px);height:22px;padding:0 8px;font-size:12px;color:#c3cbd9;line-height:22px}#sb_widget .chat-section .content .typing .sb-spinner{top:auto;position:static;-webkit-transform:translate(0);-moz-transform:translate(0);-ms-transform:translate(0);-o-transform:translate(0);transform:translate(0);display:inline-block;width:auto;text-align:left;margin-right:8px}#sb_widget .chat-section .content .typing .sb-spinner div{background-color:#a5b4cd;width:6px;height:6px}#sb_widget .chat-section .content .typing .sb-spinner :nth-child(2){margin:0 3px}#sb_widget .chat-section .content .input{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 16px);min-height:51px;max-height:118px;padding:0 8px;border-top:1px solid #e5e5e5}#sb_widget .chat-section .content .input .text{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:calc(100% - 8px);min-height:24px;max-height:90px;padding:5px 8px 0 0;outline:none!important;overflow-x:hidden;overflow-y:auto;word-wrap:break-word;resize:none;border:0;font-size:13px;color:#485874;background-color:#fff}#sb_widget .chat-section .content .input .text:focus{outline:0}#sb_widget .chat-section .content .input .text>div{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;height:0!important}#sb_widget .chat-section .content .input .text:empty:before{font-size:13px;content:\\"Type a Message\\";color:#c3cbd9}#sb_widget .chat-section .content .input .text:focus:empty:before{content:\\"\\"}#sb_widget .chat-section .content .input .file{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;width:22px;height:22px;cursor:pointer;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-file-add-default.svg\\")}#sb_widget .chat-section .content .input .file,#sb_widget .chat-section .content .input .file:hover{background-position:50%;background-size:cover;background-repeat:no-repeat;background-position:inherit;background-size:14px 14px}#sb_widget .chat-section .content .input .file:hover{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-file-add-over.svg\\")}#sb_widget .chat-section .message-set{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;margin-top:8px;float:left;direction:ltr;text-align:left}#sb_widget .chat-section .message-set .image{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:inherit;width:32px;height:32px;margin-right:8px;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/thumnail-member-01.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat;background-position:inherit}#sb_widget .chat-section .message-set .message{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:inherit}#sb_widget .chat-section .message-set .nickname{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;font-size:12px;color:#8090b4}#sb_widget .chat-section .message-set .message-item{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:inherit}#sb_widget .chat-section .message-set .message-item .text{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;text-align:inherit;max-width:180px;background-color:#f0f0f5;color:#444;font-size:13px;padding:6px;word-wrap:break-word;border-radius:5px;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;-o-border-radius:5px}#sb_widget .chat-section .message-set .message-item .text .preview-name{font-size:11px;font-weight:300}#sb_widget .chat-section .message-set .message-item .text .preview-title{margin-top:4px;font-size:13px;font-weight:500;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:180px;height:13px}#sb_widget .chat-section .message-set .message-item .text .preview-description{margin-top:4px;font-size:11px;font-weight:300}#sb_widget .chat-section .message-set .message-item .text .preview-iamge{width:180px!important;height:90px!important;background-size:180px 180px;background-position-x:center;background-position-y:30%;margin-top:4px}#sb_widget .chat-section .message-set .message-item .file-message{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block}#sb_widget .chat-section .message-set .message-item .file-message .image{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;text-align:inherit;width:160px;height:160px;cursor:pointer;vertical-align:middle;background-position:50%;background-size:160px 160px;background-repeat:no-repeat;border-radius:5px;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;-o-border-radius:5px}#sb_widget .chat-section .message-set .message-item .file{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-flex;text-align:inherit;max-width:180px;background-color:transparent;color:#444;font-size:13px;word-wrap:break-word;cursor:pointer;text-decoration:none;vertical-align:bottom}#sb_widget .chat-section .message-set .message-item .file>.file-icon{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;width:24px;height:26px;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/icon-file.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .chat-section .message-set .message-item .file>.file-text{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;margin:0 0 0 8px;max-width:calc(100% - 24px - 8px)}#sb_widget .chat-section .message-set .message-item .file>.file-text>.file-name{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;max-width:100%;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}#sb_widget .chat-section .message-set .message-item .file>.file-text>.file-download{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;font-size:11px;line-height:6px;color:#0081d6}#sb_widget .chat-section .message-set .message-item .unread{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:none!important;background-color:transparent;color:#a08cff;font-size:11px;font-weight:700;text-align:center;margin:0 4px;vertical-align:bottom}#sb_widget .chat-section .message-set.user{float:right}#sb_widget .chat-section .message-set.user .image,#sb_widget .chat-section .message-set.user .nickname{display:none}#sb_widget .chat-section .message-set.user .message-item{float:inherit}#sb_widget .chat-section .message-set.user .message-item .text{background:#896bf5;color:#fff}#sb_widget .chat-section .message-set.user .message-item .image{display:inline-block;text-align:inherit;width:160px;height:160px;cursor:pointer;margin:0;background-position:50%;background-size:160px 160px;background-repeat:no-repeat;border-radius:5px;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;-o-border-radius:5px}#sb_widget .chat-section .message-set.user .message-item .unread{display:inline-block!important}#sb_widget .chat-section .message-set.time{text-align:center;font-size:11px;color:#8090b4}#sb_widget .chat-section .message-set.admin-message{text-align:center;font-size:12px;color:#67769a}#sb_widget .popup{width:auto;height:auto;display:none;background-color:transparent;position:absolute;bottom:26px}#sb_widget .popup,#sb_widget .popup .popup-body{margin:0;padding:0;font-size:100%;line-height:1;box-sizing:initial}#sb_widget .popup .popup-body{width:auto;height:auto;width:260px;height:360px;background-color:#fff;-webkit-box-shadow:0 0 0 1px rgba(0,0,0,.1),0 5px 60px rgba(0,0,0,.35);-moz-box-shadow:0 0 0 1px rgba(0,0,0,.1),0 5px 60px rgba(0,0,0,.35);box-shadow:0 0 0 1px rgba(0,0,0,.1),0 5px 60px rgba(0,0,0,.35)}#sb_widget .popup .popup-body:before{content:\\" \\";position:absolute;bottom:100%;left:50%;margin-left:-5px;border-width:7px;border-style:solid;border-color:transparent transparent #fff}#sb_widget .popup .popup-body>.content{padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;overflow-y:scroll;overflow-x:hidden;height:calc(100% - 51px - 2px);margin:0}#sb_widget .popup .popup-body>.content>ul{margin:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:100%;min-height:306px;margin:0 0 2px;padding:0;list-style-type:none}#sb_widget .popup .chat-section .popup-body>.content>ul>.sb-spinner,#sb_widget .popup .popup-body>.content>ul>.sb-spinner{position:absolute}#sb_widget .popup .chat-section .popup-body>.content>ul>.sb-spinner div,#sb_widget .popup .popup-body>.content>ul>.sb-spinner div{width:12px;height:12px}#sb_widget .popup .chat-section .popup-body>.content>ul>.sb-spinner :nth-child(2),#sb_widget .popup .popup-body>.content>ul>.sb-spinner :nth-child(2){margin:0 6px}#sb_widget .popup .popup-body>.content>ul>li{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-table;width:calc(100% - 24px);height:33px;background:#fff;padding:0 12px;cursor:pointer}#sb_widget .popup .popup-body>.content>ul>li:hover{background-color:#f5f8fa}#sb_widget .popup .popup-body>.content>ul>li>div{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;width:100%;padding:5px 0;border-bottom:1px solid #e5e5e5}#sb_widget .popup .popup-body>.content>ul>li .user-select{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;margin-right:8px;position:relative;top:50%;width:16px;height:16px;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%);background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-check-off.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .popup .popup-body>.content>ul>li .user-select.active{background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/btn-check-on.svg\\");background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .popup .popup-body>.content>ul>li .image-me{position:absolute;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/icon-member-me.svg\\")}#sb_widget .popup .popup-body>.content>ul>li .image,#sb_widget .popup .popup-body>.content>ul>li .image-me{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;width:31px;height:31px;background-position:50%;background-size:cover;background-repeat:no-repeat}#sb_widget .popup .popup-body>.content>ul>li .image{display:inline-block;margin-right:8px;background-image:url(\\"https://dxstmhyqfqr1o.cloudfront.net/widget/thumnail-member-01.svg\\")}#sb_widget .popup .popup-body>.content>ul>li .nickname{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;display:inline-block;font-size:13px;color:#67769a;line-height:31px;max-width:70%;overflow:hidden;-ms-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}#sb_widget .popup .popup-top{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;height:36px;background-color:#f3f5f7;padding:0 12px;-webkit-box-shadow:0 1px 1px 0 rgba(0,0,0,.2);-moz-box-shadow:0 1px 1px 0 rgba(0,0,0,.2);box-shadow:0 1px 1px 0 rgba(0,0,0,.2)}#sb_widget .popup .popup-top .title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;font-size:13px;color:#67769a;line-height:36px}#sb_widget .popup .popup-top .count{margin:0;font-size:100%;line-height:1;width:auto;height:auto;float:left;width:16px;height:16px;margin-left:8px;background-color:#d5d7d9;font-weight:700;font-size:10px;color:#67769a;text-align:center;line-height:16px}#sb_widget .popup .popup-top .btn,#sb_widget .popup .popup-top .count{padding:0;box-sizing:initial;position:relative;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .popup .popup-top .btn{margin:0;font-size:100%;line-height:1;width:auto;height:auto;float:right;width:24px;height:26px;cursor:pointer}#sb_widget .popup .popup-bottom{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;height:52px;background-color:#fff;border-top:1px solid rgba(0,0,0,.2);padding:0 12px}#sb_widget .popup .popup-bottom .title{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;font-size:13px;line-height:52px;color:#67769a}#sb_widget .popup .popup-bottom .count{margin:0;padding:0;font-size:100%;line-height:1;width:auto;height:auto;box-sizing:initial;float:left;width:16px;height:16px;margin-left:8px;background-color:#f0f0f2;font-weight:700;font-size:10px;color:#67769a;text-align:center;line-height:16px}#sb_widget .popup .popup-bottom .count,#sb_widget .popup .popup-bottom .invite-btn{position:relative;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%)}#sb_widget .popup .popup-bottom .invite-btn{float:right;width:41px;height:24px;font-size:14px;line-height:24px;letter-spacing:.85px}#sb_widget .popup .popup-bottom .invite-btn .sb-spinner{margin-top:4px}#sb_widget .popup .popup-bottom .invite-btn .sb-spinner div{width:8px;height:8px;margin-top:4px;background-color:#35a300}#sb_widget .popup .popup-bottom .invite-btn .sb-spinner :nth-child(2){margin:0 4px}#sb_widget .popup .popup-bottom .invite-btn.disabled{cursor:default}#sb_widget .popup.members .popup-body:before{border-color:transparent transparent #f3f5f7}#sb_widget .popup.members .popup-body>.content{height:calc(100% - 36px - 2px)}#sb_widget .popup.members .popup-body>.content>ul{height:322px;margin:2px 0 0}#sb_widget .popup.members .popup-body>.content>ul>li{cursor:default}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(Buffer) {/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap) {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n  var base64 = new Buffer(JSON.stringify(sourceMap)).toString(\'base64\');\n  var data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n  return \'/*# \' + data + \' */\';\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcz80MmNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICB2YXIgYmFzZTY0ID0gbmV3IEJ1ZmZlcihKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gIHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cbiAgcmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n')},function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9pZWVlNzU0L2luZGV4LmpzPzEyYTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi9pZWVlNzU0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9pc2FycmF5L2luZGV4LmpzP2MxOTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L2lzYXJyYXkvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName("head")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === "undefined") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === "undefined") options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === "top") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === "bottom") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement("style");\n\toptions.attrs.type = "text/css";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement("link");\n\toptions.attrs.type = "text/css";\n\toptions.attrs.rel = "stylesheet";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute("media", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\tvar fixedCss = css.replace(/url *\\( *(.+?) *\\)/g, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi9zdHlsZS1sb2FkZXIvZml4VXJscy5qcz80YTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsICpcXCggKiguKz8pICpcXCkvZywgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC8pL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3N0eWxlLWxvYWRlci9maXhVcmxzLmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(12);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(16)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./widget.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./widget.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL3dpZGdldC5zY3NzP2Q3ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vd2lkZ2V0LnNjc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi93aWRnZXQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi93aWRnZXQuc2Nzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zY3NzL3dpZGdldC5zY3NzXG4vLyBtb2R1bGUgaWQgPSAxOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n")},function(module,exports){eval('var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1,eval)("this");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === "object")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vfi93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzPzYyYTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vfi93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')}]);